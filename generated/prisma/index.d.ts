
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model assignments
 * 
 */
export type assignments = $Result.DefaultSelection<Prisma.$assignmentsPayload>
/**
 * Model batches
 * 
 */
export type batches = $Result.DefaultSelection<Prisma.$batchesPayload>
/**
 * Model code_snippets
 * 
 */
export type code_snippets = $Result.DefaultSelection<Prisma.$code_snippetsPayload>
/**
 * Model courses
 * 
 */
export type courses = $Result.DefaultSelection<Prisma.$coursesPayload>
/**
 * Model follow_up_comments
 * 
 */
export type follow_up_comments = $Result.DefaultSelection<Prisma.$follow_up_commentsPayload>
/**
 * Model follow_ups
 * 
 */
export type follow_ups = $Result.DefaultSelection<Prisma.$follow_upsPayload>
/**
 * Model leads
 * 
 */
export type leads = $Result.DefaultSelection<Prisma.$leadsPayload>
/**
 * Model lesson_plans
 * 
 */
export type lesson_plans = $Result.DefaultSelection<Prisma.$lesson_plansPayload>
/**
 * Model password_reset_tokens
 * 
 */
export type password_reset_tokens = $Result.DefaultSelection<Prisma.$password_reset_tokensPayload>
/**
 * Model payments
 * 
 */
export type payments = $Result.DefaultSelection<Prisma.$paymentsPayload>
/**
 * Model sessions
 * 
 */
export type sessions = $Result.DefaultSelection<Prisma.$sessionsPayload>
/**
 * Model settings
 * 
 */
export type settings = $Result.DefaultSelection<Prisma.$settingsPayload>
/**
 * Model students
 * 
 */
export type students = $Result.DefaultSelection<Prisma.$studentsPayload>
/**
 * Model tenants
 * 
 */
export type tenants = $Result.DefaultSelection<Prisma.$tenantsPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const assignment_status: {
  pending: 'pending',
  submitted: 'submitted',
  reviewed: 'reviewed',
  approved: 'approved',
  rejected: 'rejected'
};

export type assignment_status = (typeof assignment_status)[keyof typeof assignment_status]


export const lead_status: {
  new: 'new',
  contacted: 'contacted',
  qualified: 'qualified',
  dropped: 'dropped',
  converted: 'converted'
};

export type lead_status = (typeof lead_status)[keyof typeof lead_status]


export const payment_method: {
  cash: 'cash',
  check: 'check',
  bank_transfer: 'bank_transfer',
  online: 'online',
  other: 'other'
};

export type payment_method = (typeof payment_method)[keyof typeof payment_method]


export const user_role: {
  admin: 'admin',
  manager: 'manager',
  trainer: 'trainer',
  student: 'student'
};

export type user_role = (typeof user_role)[keyof typeof user_role]

}

export type assignment_status = $Enums.assignment_status

export const assignment_status: typeof $Enums.assignment_status

export type lead_status = $Enums.lead_status

export const lead_status: typeof $Enums.lead_status

export type payment_method = $Enums.payment_method

export const payment_method: typeof $Enums.payment_method

export type user_role = $Enums.user_role

export const user_role: typeof $Enums.user_role

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Assignments
 * const assignments = await prisma.assignments.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Assignments
   * const assignments = await prisma.assignments.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.assignments`: Exposes CRUD operations for the **assignments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Assignments
    * const assignments = await prisma.assignments.findMany()
    * ```
    */
  get assignments(): Prisma.assignmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.batches`: Exposes CRUD operations for the **batches** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Batches
    * const batches = await prisma.batches.findMany()
    * ```
    */
  get batches(): Prisma.batchesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.code_snippets`: Exposes CRUD operations for the **code_snippets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Code_snippets
    * const code_snippets = await prisma.code_snippets.findMany()
    * ```
    */
  get code_snippets(): Prisma.code_snippetsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.courses`: Exposes CRUD operations for the **courses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Courses
    * const courses = await prisma.courses.findMany()
    * ```
    */
  get courses(): Prisma.coursesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.follow_up_comments`: Exposes CRUD operations for the **follow_up_comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Follow_up_comments
    * const follow_up_comments = await prisma.follow_up_comments.findMany()
    * ```
    */
  get follow_up_comments(): Prisma.follow_up_commentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.follow_ups`: Exposes CRUD operations for the **follow_ups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Follow_ups
    * const follow_ups = await prisma.follow_ups.findMany()
    * ```
    */
  get follow_ups(): Prisma.follow_upsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leads`: Exposes CRUD operations for the **leads** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Leads
    * const leads = await prisma.leads.findMany()
    * ```
    */
  get leads(): Prisma.leadsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.lesson_plans`: Exposes CRUD operations for the **lesson_plans** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lesson_plans
    * const lesson_plans = await prisma.lesson_plans.findMany()
    * ```
    */
  get lesson_plans(): Prisma.lesson_plansDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.password_reset_tokens`: Exposes CRUD operations for the **password_reset_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Password_reset_tokens
    * const password_reset_tokens = await prisma.password_reset_tokens.findMany()
    * ```
    */
  get password_reset_tokens(): Prisma.password_reset_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payments`: Exposes CRUD operations for the **payments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payments.findMany()
    * ```
    */
  get payments(): Prisma.paymentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sessions`: Exposes CRUD operations for the **sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.sessions.findMany()
    * ```
    */
  get sessions(): Prisma.sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.settings`: Exposes CRUD operations for the **settings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Settings
    * const settings = await prisma.settings.findMany()
    * ```
    */
  get settings(): Prisma.settingsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.students`: Exposes CRUD operations for the **students** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Students
    * const students = await prisma.students.findMany()
    * ```
    */
  get students(): Prisma.studentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tenants`: Exposes CRUD operations for the **tenants** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tenants
    * const tenants = await prisma.tenants.findMany()
    * ```
    */
  get tenants(): Prisma.tenantsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    assignments: 'assignments',
    batches: 'batches',
    code_snippets: 'code_snippets',
    courses: 'courses',
    follow_up_comments: 'follow_up_comments',
    follow_ups: 'follow_ups',
    leads: 'leads',
    lesson_plans: 'lesson_plans',
    password_reset_tokens: 'password_reset_tokens',
    payments: 'payments',
    sessions: 'sessions',
    settings: 'settings',
    students: 'students',
    tenants: 'tenants',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "assignments" | "batches" | "code_snippets" | "courses" | "follow_up_comments" | "follow_ups" | "leads" | "lesson_plans" | "password_reset_tokens" | "payments" | "sessions" | "settings" | "students" | "tenants" | "users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      assignments: {
        payload: Prisma.$assignmentsPayload<ExtArgs>
        fields: Prisma.assignmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.assignmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.assignmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>
          }
          findFirst: {
            args: Prisma.assignmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.assignmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>
          }
          findMany: {
            args: Prisma.assignmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>[]
          }
          create: {
            args: Prisma.assignmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>
          }
          createMany: {
            args: Prisma.assignmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.assignmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>[]
          }
          delete: {
            args: Prisma.assignmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>
          }
          update: {
            args: Prisma.assignmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>
          }
          deleteMany: {
            args: Prisma.assignmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.assignmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.assignmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>[]
          }
          upsert: {
            args: Prisma.assignmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$assignmentsPayload>
          }
          aggregate: {
            args: Prisma.AssignmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssignments>
          }
          groupBy: {
            args: Prisma.assignmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssignmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.assignmentsCountArgs<ExtArgs>
            result: $Utils.Optional<AssignmentsCountAggregateOutputType> | number
          }
        }
      }
      batches: {
        payload: Prisma.$batchesPayload<ExtArgs>
        fields: Prisma.batchesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.batchesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.batchesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>
          }
          findFirst: {
            args: Prisma.batchesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.batchesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>
          }
          findMany: {
            args: Prisma.batchesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>[]
          }
          create: {
            args: Prisma.batchesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>
          }
          createMany: {
            args: Prisma.batchesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.batchesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>[]
          }
          delete: {
            args: Prisma.batchesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>
          }
          update: {
            args: Prisma.batchesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>
          }
          deleteMany: {
            args: Prisma.batchesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.batchesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.batchesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>[]
          }
          upsert: {
            args: Prisma.batchesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$batchesPayload>
          }
          aggregate: {
            args: Prisma.BatchesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBatches>
          }
          groupBy: {
            args: Prisma.batchesGroupByArgs<ExtArgs>
            result: $Utils.Optional<BatchesGroupByOutputType>[]
          }
          count: {
            args: Prisma.batchesCountArgs<ExtArgs>
            result: $Utils.Optional<BatchesCountAggregateOutputType> | number
          }
        }
      }
      code_snippets: {
        payload: Prisma.$code_snippetsPayload<ExtArgs>
        fields: Prisma.code_snippetsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.code_snippetsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.code_snippetsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>
          }
          findFirst: {
            args: Prisma.code_snippetsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.code_snippetsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>
          }
          findMany: {
            args: Prisma.code_snippetsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>[]
          }
          create: {
            args: Prisma.code_snippetsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>
          }
          createMany: {
            args: Prisma.code_snippetsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.code_snippetsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>[]
          }
          delete: {
            args: Prisma.code_snippetsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>
          }
          update: {
            args: Prisma.code_snippetsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>
          }
          deleteMany: {
            args: Prisma.code_snippetsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.code_snippetsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.code_snippetsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>[]
          }
          upsert: {
            args: Prisma.code_snippetsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$code_snippetsPayload>
          }
          aggregate: {
            args: Prisma.Code_snippetsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCode_snippets>
          }
          groupBy: {
            args: Prisma.code_snippetsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Code_snippetsGroupByOutputType>[]
          }
          count: {
            args: Prisma.code_snippetsCountArgs<ExtArgs>
            result: $Utils.Optional<Code_snippetsCountAggregateOutputType> | number
          }
        }
      }
      courses: {
        payload: Prisma.$coursesPayload<ExtArgs>
        fields: Prisma.coursesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.coursesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.coursesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          findFirst: {
            args: Prisma.coursesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.coursesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          findMany: {
            args: Prisma.coursesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>[]
          }
          create: {
            args: Prisma.coursesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          createMany: {
            args: Prisma.coursesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.coursesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>[]
          }
          delete: {
            args: Prisma.coursesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          update: {
            args: Prisma.coursesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          deleteMany: {
            args: Prisma.coursesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.coursesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.coursesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>[]
          }
          upsert: {
            args: Prisma.coursesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$coursesPayload>
          }
          aggregate: {
            args: Prisma.CoursesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourses>
          }
          groupBy: {
            args: Prisma.coursesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CoursesGroupByOutputType>[]
          }
          count: {
            args: Prisma.coursesCountArgs<ExtArgs>
            result: $Utils.Optional<CoursesCountAggregateOutputType> | number
          }
        }
      }
      follow_up_comments: {
        payload: Prisma.$follow_up_commentsPayload<ExtArgs>
        fields: Prisma.follow_up_commentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.follow_up_commentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.follow_up_commentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>
          }
          findFirst: {
            args: Prisma.follow_up_commentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.follow_up_commentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>
          }
          findMany: {
            args: Prisma.follow_up_commentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>[]
          }
          create: {
            args: Prisma.follow_up_commentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>
          }
          createMany: {
            args: Prisma.follow_up_commentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.follow_up_commentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>[]
          }
          delete: {
            args: Prisma.follow_up_commentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>
          }
          update: {
            args: Prisma.follow_up_commentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>
          }
          deleteMany: {
            args: Prisma.follow_up_commentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.follow_up_commentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.follow_up_commentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>[]
          }
          upsert: {
            args: Prisma.follow_up_commentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_up_commentsPayload>
          }
          aggregate: {
            args: Prisma.Follow_up_commentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFollow_up_comments>
          }
          groupBy: {
            args: Prisma.follow_up_commentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Follow_up_commentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.follow_up_commentsCountArgs<ExtArgs>
            result: $Utils.Optional<Follow_up_commentsCountAggregateOutputType> | number
          }
        }
      }
      follow_ups: {
        payload: Prisma.$follow_upsPayload<ExtArgs>
        fields: Prisma.follow_upsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.follow_upsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.follow_upsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>
          }
          findFirst: {
            args: Prisma.follow_upsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.follow_upsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>
          }
          findMany: {
            args: Prisma.follow_upsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>[]
          }
          create: {
            args: Prisma.follow_upsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>
          }
          createMany: {
            args: Prisma.follow_upsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.follow_upsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>[]
          }
          delete: {
            args: Prisma.follow_upsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>
          }
          update: {
            args: Prisma.follow_upsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>
          }
          deleteMany: {
            args: Prisma.follow_upsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.follow_upsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.follow_upsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>[]
          }
          upsert: {
            args: Prisma.follow_upsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$follow_upsPayload>
          }
          aggregate: {
            args: Prisma.Follow_upsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFollow_ups>
          }
          groupBy: {
            args: Prisma.follow_upsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Follow_upsGroupByOutputType>[]
          }
          count: {
            args: Prisma.follow_upsCountArgs<ExtArgs>
            result: $Utils.Optional<Follow_upsCountAggregateOutputType> | number
          }
        }
      }
      leads: {
        payload: Prisma.$leadsPayload<ExtArgs>
        fields: Prisma.leadsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.leadsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.leadsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          findFirst: {
            args: Prisma.leadsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.leadsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          findMany: {
            args: Prisma.leadsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>[]
          }
          create: {
            args: Prisma.leadsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          createMany: {
            args: Prisma.leadsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.leadsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>[]
          }
          delete: {
            args: Prisma.leadsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          update: {
            args: Prisma.leadsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          deleteMany: {
            args: Prisma.leadsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.leadsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.leadsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>[]
          }
          upsert: {
            args: Prisma.leadsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$leadsPayload>
          }
          aggregate: {
            args: Prisma.LeadsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLeads>
          }
          groupBy: {
            args: Prisma.leadsGroupByArgs<ExtArgs>
            result: $Utils.Optional<LeadsGroupByOutputType>[]
          }
          count: {
            args: Prisma.leadsCountArgs<ExtArgs>
            result: $Utils.Optional<LeadsCountAggregateOutputType> | number
          }
        }
      }
      lesson_plans: {
        payload: Prisma.$lesson_plansPayload<ExtArgs>
        fields: Prisma.lesson_plansFieldRefs
        operations: {
          findUnique: {
            args: Prisma.lesson_plansFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.lesson_plansFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>
          }
          findFirst: {
            args: Prisma.lesson_plansFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.lesson_plansFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>
          }
          findMany: {
            args: Prisma.lesson_plansFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>[]
          }
          create: {
            args: Prisma.lesson_plansCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>
          }
          createMany: {
            args: Prisma.lesson_plansCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.lesson_plansCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>[]
          }
          delete: {
            args: Prisma.lesson_plansDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>
          }
          update: {
            args: Prisma.lesson_plansUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>
          }
          deleteMany: {
            args: Prisma.lesson_plansDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.lesson_plansUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.lesson_plansUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>[]
          }
          upsert: {
            args: Prisma.lesson_plansUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lesson_plansPayload>
          }
          aggregate: {
            args: Prisma.Lesson_plansAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLesson_plans>
          }
          groupBy: {
            args: Prisma.lesson_plansGroupByArgs<ExtArgs>
            result: $Utils.Optional<Lesson_plansGroupByOutputType>[]
          }
          count: {
            args: Prisma.lesson_plansCountArgs<ExtArgs>
            result: $Utils.Optional<Lesson_plansCountAggregateOutputType> | number
          }
        }
      }
      password_reset_tokens: {
        payload: Prisma.$password_reset_tokensPayload<ExtArgs>
        fields: Prisma.password_reset_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.password_reset_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.password_reset_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          findFirst: {
            args: Prisma.password_reset_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.password_reset_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          findMany: {
            args: Prisma.password_reset_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          create: {
            args: Prisma.password_reset_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          createMany: {
            args: Prisma.password_reset_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.password_reset_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          delete: {
            args: Prisma.password_reset_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          update: {
            args: Prisma.password_reset_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          deleteMany: {
            args: Prisma.password_reset_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.password_reset_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.password_reset_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          upsert: {
            args: Prisma.password_reset_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          aggregate: {
            args: Prisma.Password_reset_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePassword_reset_tokens>
          }
          groupBy: {
            args: Prisma.password_reset_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Password_reset_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.password_reset_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Password_reset_tokensCountAggregateOutputType> | number
          }
        }
      }
      payments: {
        payload: Prisma.$paymentsPayload<ExtArgs>
        fields: Prisma.paymentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.paymentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.paymentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          findFirst: {
            args: Prisma.paymentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.paymentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          findMany: {
            args: Prisma.paymentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>[]
          }
          create: {
            args: Prisma.paymentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          createMany: {
            args: Prisma.paymentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.paymentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>[]
          }
          delete: {
            args: Prisma.paymentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          update: {
            args: Prisma.paymentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          deleteMany: {
            args: Prisma.paymentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.paymentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.paymentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>[]
          }
          upsert: {
            args: Prisma.paymentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          aggregate: {
            args: Prisma.PaymentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayments>
          }
          groupBy: {
            args: Prisma.paymentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.paymentsCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentsCountAggregateOutputType> | number
          }
        }
      }
      sessions: {
        payload: Prisma.$sessionsPayload<ExtArgs>
        fields: Prisma.sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findFirst: {
            args: Prisma.sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findMany: {
            args: Prisma.sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          create: {
            args: Prisma.sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          createMany: {
            args: Prisma.sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sessionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          delete: {
            args: Prisma.sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          update: {
            args: Prisma.sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          deleteMany: {
            args: Prisma.sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sessionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          upsert: {
            args: Prisma.sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          aggregate: {
            args: Prisma.SessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSessions>
          }
          groupBy: {
            args: Prisma.sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<SessionsCountAggregateOutputType> | number
          }
        }
      }
      settings: {
        payload: Prisma.$settingsPayload<ExtArgs>
        fields: Prisma.settingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.settingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.settingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>
          }
          findFirst: {
            args: Prisma.settingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.settingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>
          }
          findMany: {
            args: Prisma.settingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>[]
          }
          create: {
            args: Prisma.settingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>
          }
          createMany: {
            args: Prisma.settingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.settingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>[]
          }
          delete: {
            args: Prisma.settingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>
          }
          update: {
            args: Prisma.settingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>
          }
          deleteMany: {
            args: Prisma.settingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.settingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.settingsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>[]
          }
          upsert: {
            args: Prisma.settingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$settingsPayload>
          }
          aggregate: {
            args: Prisma.SettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSettings>
          }
          groupBy: {
            args: Prisma.settingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.settingsCountArgs<ExtArgs>
            result: $Utils.Optional<SettingsCountAggregateOutputType> | number
          }
        }
      }
      students: {
        payload: Prisma.$studentsPayload<ExtArgs>
        fields: Prisma.studentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.studentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.studentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>
          }
          findFirst: {
            args: Prisma.studentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.studentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>
          }
          findMany: {
            args: Prisma.studentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>[]
          }
          create: {
            args: Prisma.studentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>
          }
          createMany: {
            args: Prisma.studentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.studentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>[]
          }
          delete: {
            args: Prisma.studentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>
          }
          update: {
            args: Prisma.studentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>
          }
          deleteMany: {
            args: Prisma.studentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.studentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.studentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>[]
          }
          upsert: {
            args: Prisma.studentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$studentsPayload>
          }
          aggregate: {
            args: Prisma.StudentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStudents>
          }
          groupBy: {
            args: Prisma.studentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<StudentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.studentsCountArgs<ExtArgs>
            result: $Utils.Optional<StudentsCountAggregateOutputType> | number
          }
        }
      }
      tenants: {
        payload: Prisma.$tenantsPayload<ExtArgs>
        fields: Prisma.tenantsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tenantsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tenantsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>
          }
          findFirst: {
            args: Prisma.tenantsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tenantsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>
          }
          findMany: {
            args: Prisma.tenantsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>[]
          }
          create: {
            args: Prisma.tenantsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>
          }
          createMany: {
            args: Prisma.tenantsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tenantsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>[]
          }
          delete: {
            args: Prisma.tenantsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>
          }
          update: {
            args: Prisma.tenantsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>
          }
          deleteMany: {
            args: Prisma.tenantsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tenantsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tenantsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>[]
          }
          upsert: {
            args: Prisma.tenantsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tenantsPayload>
          }
          aggregate: {
            args: Prisma.TenantsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTenants>
          }
          groupBy: {
            args: Prisma.tenantsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TenantsGroupByOutputType>[]
          }
          count: {
            args: Prisma.tenantsCountArgs<ExtArgs>
            result: $Utils.Optional<TenantsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    assignments?: assignmentsOmit
    batches?: batchesOmit
    code_snippets?: code_snippetsOmit
    courses?: coursesOmit
    follow_up_comments?: follow_up_commentsOmit
    follow_ups?: follow_upsOmit
    leads?: leadsOmit
    lesson_plans?: lesson_plansOmit
    password_reset_tokens?: password_reset_tokensOmit
    payments?: paymentsOmit
    sessions?: sessionsOmit
    settings?: settingsOmit
    students?: studentsOmit
    tenants?: tenantsOmit
    users?: usersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Follow_upsCountOutputType
   */

  export type Follow_upsCountOutputType = {
    follow_up_comments: number
  }

  export type Follow_upsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follow_up_comments?: boolean | Follow_upsCountOutputTypeCountFollow_up_commentsArgs
  }

  // Custom InputTypes
  /**
   * Follow_upsCountOutputType without action
   */
  export type Follow_upsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Follow_upsCountOutputType
     */
    select?: Follow_upsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Follow_upsCountOutputType without action
   */
  export type Follow_upsCountOutputTypeCountFollow_up_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: follow_up_commentsWhereInput
  }


  /**
   * Count Type LeadsCountOutputType
   */

  export type LeadsCountOutputType = {
    follow_ups: number
  }

  export type LeadsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follow_ups?: boolean | LeadsCountOutputTypeCountFollow_upsArgs
  }

  // Custom InputTypes
  /**
   * LeadsCountOutputType without action
   */
  export type LeadsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadsCountOutputType
     */
    select?: LeadsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LeadsCountOutputType without action
   */
  export type LeadsCountOutputTypeCountFollow_upsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: follow_upsWhereInput
  }


  /**
   * Count Type TenantsCountOutputType
   */

  export type TenantsCountOutputType = {
    batches: number
    courses: number
    follow_ups: number
    leads: number
    password_reset_tokens: number
    payments: number
    settings: number
    students: number
    users: number
  }

  export type TenantsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batches?: boolean | TenantsCountOutputTypeCountBatchesArgs
    courses?: boolean | TenantsCountOutputTypeCountCoursesArgs
    follow_ups?: boolean | TenantsCountOutputTypeCountFollow_upsArgs
    leads?: boolean | TenantsCountOutputTypeCountLeadsArgs
    password_reset_tokens?: boolean | TenantsCountOutputTypeCountPassword_reset_tokensArgs
    payments?: boolean | TenantsCountOutputTypeCountPaymentsArgs
    settings?: boolean | TenantsCountOutputTypeCountSettingsArgs
    students?: boolean | TenantsCountOutputTypeCountStudentsArgs
    users?: boolean | TenantsCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TenantsCountOutputType
     */
    select?: TenantsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: batchesWhereInput
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountCoursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: coursesWhereInput
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountFollow_upsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: follow_upsWhereInput
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountLeadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leadsWhereInput
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountPassword_reset_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: password_reset_tokensWhereInput
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: paymentsWhereInput
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: settingsWhereInput
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountStudentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: studentsWhereInput
  }

  /**
   * TenantsCountOutputType without action
   */
  export type TenantsCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    batches: number
    follow_up_comments: number
    follow_ups_follow_ups_assigned_toTousers: number
    follow_ups_follow_ups_created_byTousers: number
    password_reset_tokens: number
    students: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batches?: boolean | UsersCountOutputTypeCountBatchesArgs
    follow_up_comments?: boolean | UsersCountOutputTypeCountFollow_up_commentsArgs
    follow_ups_follow_ups_assigned_toTousers?: boolean | UsersCountOutputTypeCountFollow_ups_follow_ups_assigned_toTousersArgs
    follow_ups_follow_ups_created_byTousers?: boolean | UsersCountOutputTypeCountFollow_ups_follow_ups_created_byTousersArgs
    password_reset_tokens?: boolean | UsersCountOutputTypeCountPassword_reset_tokensArgs
    students?: boolean | UsersCountOutputTypeCountStudentsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountBatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: batchesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFollow_up_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: follow_up_commentsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFollow_ups_follow_ups_assigned_toTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: follow_upsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountFollow_ups_follow_ups_created_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: follow_upsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPassword_reset_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: password_reset_tokensWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountStudentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: studentsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model assignments
   */

  export type AggregateAssignments = {
    _count: AssignmentsCountAggregateOutputType | null
    _avg: AssignmentsAvgAggregateOutputType | null
    _sum: AssignmentsSumAggregateOutputType | null
    _min: AssignmentsMinAggregateOutputType | null
    _max: AssignmentsMaxAggregateOutputType | null
  }

  export type AssignmentsAvgAggregateOutputType = {
    id: number | null
    course_id: number | null
    max_score: number | null
  }

  export type AssignmentsSumAggregateOutputType = {
    id: number | null
    course_id: number | null
    max_score: number | null
  }

  export type AssignmentsMinAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    course_id: number | null
    due_date: Date | null
    max_score: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type AssignmentsMaxAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    course_id: number | null
    due_date: Date | null
    max_score: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type AssignmentsCountAggregateOutputType = {
    id: number
    title: number
    description: number
    course_id: number
    due_date: number
    max_score: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type AssignmentsAvgAggregateInputType = {
    id?: true
    course_id?: true
    max_score?: true
  }

  export type AssignmentsSumAggregateInputType = {
    id?: true
    course_id?: true
    max_score?: true
  }

  export type AssignmentsMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    course_id?: true
    due_date?: true
    max_score?: true
    created_at?: true
    updated_at?: true
  }

  export type AssignmentsMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    course_id?: true
    due_date?: true
    max_score?: true
    created_at?: true
    updated_at?: true
  }

  export type AssignmentsCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    course_id?: true
    due_date?: true
    max_score?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type AssignmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which assignments to aggregate.
     */
    where?: assignmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of assignments to fetch.
     */
    orderBy?: assignmentsOrderByWithRelationInput | assignmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: assignmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned assignments
    **/
    _count?: true | AssignmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AssignmentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AssignmentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssignmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssignmentsMaxAggregateInputType
  }

  export type GetAssignmentsAggregateType<T extends AssignmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateAssignments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssignments[P]>
      : GetScalarType<T[P], AggregateAssignments[P]>
  }




  export type assignmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: assignmentsWhereInput
    orderBy?: assignmentsOrderByWithAggregationInput | assignmentsOrderByWithAggregationInput[]
    by: AssignmentsScalarFieldEnum[] | AssignmentsScalarFieldEnum
    having?: assignmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssignmentsCountAggregateInputType | true
    _avg?: AssignmentsAvgAggregateInputType
    _sum?: AssignmentsSumAggregateInputType
    _min?: AssignmentsMinAggregateInputType
    _max?: AssignmentsMaxAggregateInputType
  }

  export type AssignmentsGroupByOutputType = {
    id: number
    title: string
    description: string
    course_id: number | null
    due_date: Date
    max_score: number
    created_at: Date
    updated_at: Date
    _count: AssignmentsCountAggregateOutputType | null
    _avg: AssignmentsAvgAggregateOutputType | null
    _sum: AssignmentsSumAggregateOutputType | null
    _min: AssignmentsMinAggregateOutputType | null
    _max: AssignmentsMaxAggregateOutputType | null
  }

  type GetAssignmentsGroupByPayload<T extends assignmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssignmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssignmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssignmentsGroupByOutputType[P]>
            : GetScalarType<T[P], AssignmentsGroupByOutputType[P]>
        }
      >
    >


  export type assignmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    course_id?: boolean
    due_date?: boolean
    max_score?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["assignments"]>

  export type assignmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    course_id?: boolean
    due_date?: boolean
    max_score?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["assignments"]>

  export type assignmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    course_id?: boolean
    due_date?: boolean
    max_score?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["assignments"]>

  export type assignmentsSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    course_id?: boolean
    due_date?: boolean
    max_score?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type assignmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "course_id" | "due_date" | "max_score" | "created_at" | "updated_at", ExtArgs["result"]["assignments"]>

  export type $assignmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "assignments"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      description: string
      course_id: number | null
      due_date: Date
      max_score: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["assignments"]>
    composites: {}
  }

  type assignmentsGetPayload<S extends boolean | null | undefined | assignmentsDefaultArgs> = $Result.GetResult<Prisma.$assignmentsPayload, S>

  type assignmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<assignmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssignmentsCountAggregateInputType | true
    }

  export interface assignmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['assignments'], meta: { name: 'assignments' } }
    /**
     * Find zero or one Assignments that matches the filter.
     * @param {assignmentsFindUniqueArgs} args - Arguments to find a Assignments
     * @example
     * // Get one Assignments
     * const assignments = await prisma.assignments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends assignmentsFindUniqueArgs>(args: SelectSubset<T, assignmentsFindUniqueArgs<ExtArgs>>): Prisma__assignmentsClient<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Assignments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {assignmentsFindUniqueOrThrowArgs} args - Arguments to find a Assignments
     * @example
     * // Get one Assignments
     * const assignments = await prisma.assignments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends assignmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, assignmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__assignmentsClient<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Assignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {assignmentsFindFirstArgs} args - Arguments to find a Assignments
     * @example
     * // Get one Assignments
     * const assignments = await prisma.assignments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends assignmentsFindFirstArgs>(args?: SelectSubset<T, assignmentsFindFirstArgs<ExtArgs>>): Prisma__assignmentsClient<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Assignments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {assignmentsFindFirstOrThrowArgs} args - Arguments to find a Assignments
     * @example
     * // Get one Assignments
     * const assignments = await prisma.assignments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends assignmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, assignmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__assignmentsClient<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Assignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {assignmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Assignments
     * const assignments = await prisma.assignments.findMany()
     * 
     * // Get first 10 Assignments
     * const assignments = await prisma.assignments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const assignmentsWithIdOnly = await prisma.assignments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends assignmentsFindManyArgs>(args?: SelectSubset<T, assignmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Assignments.
     * @param {assignmentsCreateArgs} args - Arguments to create a Assignments.
     * @example
     * // Create one Assignments
     * const Assignments = await prisma.assignments.create({
     *   data: {
     *     // ... data to create a Assignments
     *   }
     * })
     * 
     */
    create<T extends assignmentsCreateArgs>(args: SelectSubset<T, assignmentsCreateArgs<ExtArgs>>): Prisma__assignmentsClient<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Assignments.
     * @param {assignmentsCreateManyArgs} args - Arguments to create many Assignments.
     * @example
     * // Create many Assignments
     * const assignments = await prisma.assignments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends assignmentsCreateManyArgs>(args?: SelectSubset<T, assignmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Assignments and returns the data saved in the database.
     * @param {assignmentsCreateManyAndReturnArgs} args - Arguments to create many Assignments.
     * @example
     * // Create many Assignments
     * const assignments = await prisma.assignments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Assignments and only return the `id`
     * const assignmentsWithIdOnly = await prisma.assignments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends assignmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, assignmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Assignments.
     * @param {assignmentsDeleteArgs} args - Arguments to delete one Assignments.
     * @example
     * // Delete one Assignments
     * const Assignments = await prisma.assignments.delete({
     *   where: {
     *     // ... filter to delete one Assignments
     *   }
     * })
     * 
     */
    delete<T extends assignmentsDeleteArgs>(args: SelectSubset<T, assignmentsDeleteArgs<ExtArgs>>): Prisma__assignmentsClient<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Assignments.
     * @param {assignmentsUpdateArgs} args - Arguments to update one Assignments.
     * @example
     * // Update one Assignments
     * const assignments = await prisma.assignments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends assignmentsUpdateArgs>(args: SelectSubset<T, assignmentsUpdateArgs<ExtArgs>>): Prisma__assignmentsClient<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Assignments.
     * @param {assignmentsDeleteManyArgs} args - Arguments to filter Assignments to delete.
     * @example
     * // Delete a few Assignments
     * const { count } = await prisma.assignments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends assignmentsDeleteManyArgs>(args?: SelectSubset<T, assignmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {assignmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Assignments
     * const assignments = await prisma.assignments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends assignmentsUpdateManyArgs>(args: SelectSubset<T, assignmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Assignments and returns the data updated in the database.
     * @param {assignmentsUpdateManyAndReturnArgs} args - Arguments to update many Assignments.
     * @example
     * // Update many Assignments
     * const assignments = await prisma.assignments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Assignments and only return the `id`
     * const assignmentsWithIdOnly = await prisma.assignments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends assignmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, assignmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Assignments.
     * @param {assignmentsUpsertArgs} args - Arguments to update or create a Assignments.
     * @example
     * // Update or create a Assignments
     * const assignments = await prisma.assignments.upsert({
     *   create: {
     *     // ... data to create a Assignments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Assignments we want to update
     *   }
     * })
     */
    upsert<T extends assignmentsUpsertArgs>(args: SelectSubset<T, assignmentsUpsertArgs<ExtArgs>>): Prisma__assignmentsClient<$Result.GetResult<Prisma.$assignmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {assignmentsCountArgs} args - Arguments to filter Assignments to count.
     * @example
     * // Count the number of Assignments
     * const count = await prisma.assignments.count({
     *   where: {
     *     // ... the filter for the Assignments we want to count
     *   }
     * })
    **/
    count<T extends assignmentsCountArgs>(
      args?: Subset<T, assignmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssignmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssignmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssignmentsAggregateArgs>(args: Subset<T, AssignmentsAggregateArgs>): Prisma.PrismaPromise<GetAssignmentsAggregateType<T>>

    /**
     * Group by Assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {assignmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends assignmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: assignmentsGroupByArgs['orderBy'] }
        : { orderBy?: assignmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, assignmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssignmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the assignments model
   */
  readonly fields: assignmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for assignments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__assignmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the assignments model
   */
  interface assignmentsFieldRefs {
    readonly id: FieldRef<"assignments", 'Int'>
    readonly title: FieldRef<"assignments", 'String'>
    readonly description: FieldRef<"assignments", 'String'>
    readonly course_id: FieldRef<"assignments", 'Int'>
    readonly due_date: FieldRef<"assignments", 'DateTime'>
    readonly max_score: FieldRef<"assignments", 'Int'>
    readonly created_at: FieldRef<"assignments", 'DateTime'>
    readonly updated_at: FieldRef<"assignments", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * assignments findUnique
   */
  export type assignmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * Filter, which assignments to fetch.
     */
    where: assignmentsWhereUniqueInput
  }

  /**
   * assignments findUniqueOrThrow
   */
  export type assignmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * Filter, which assignments to fetch.
     */
    where: assignmentsWhereUniqueInput
  }

  /**
   * assignments findFirst
   */
  export type assignmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * Filter, which assignments to fetch.
     */
    where?: assignmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of assignments to fetch.
     */
    orderBy?: assignmentsOrderByWithRelationInput | assignmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for assignments.
     */
    cursor?: assignmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of assignments.
     */
    distinct?: AssignmentsScalarFieldEnum | AssignmentsScalarFieldEnum[]
  }

  /**
   * assignments findFirstOrThrow
   */
  export type assignmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * Filter, which assignments to fetch.
     */
    where?: assignmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of assignments to fetch.
     */
    orderBy?: assignmentsOrderByWithRelationInput | assignmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for assignments.
     */
    cursor?: assignmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of assignments.
     */
    distinct?: AssignmentsScalarFieldEnum | AssignmentsScalarFieldEnum[]
  }

  /**
   * assignments findMany
   */
  export type assignmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * Filter, which assignments to fetch.
     */
    where?: assignmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of assignments to fetch.
     */
    orderBy?: assignmentsOrderByWithRelationInput | assignmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing assignments.
     */
    cursor?: assignmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` assignments.
     */
    skip?: number
    distinct?: AssignmentsScalarFieldEnum | AssignmentsScalarFieldEnum[]
  }

  /**
   * assignments create
   */
  export type assignmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * The data needed to create a assignments.
     */
    data: XOR<assignmentsCreateInput, assignmentsUncheckedCreateInput>
  }

  /**
   * assignments createMany
   */
  export type assignmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many assignments.
     */
    data: assignmentsCreateManyInput | assignmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * assignments createManyAndReturn
   */
  export type assignmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * The data used to create many assignments.
     */
    data: assignmentsCreateManyInput | assignmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * assignments update
   */
  export type assignmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * The data needed to update a assignments.
     */
    data: XOR<assignmentsUpdateInput, assignmentsUncheckedUpdateInput>
    /**
     * Choose, which assignments to update.
     */
    where: assignmentsWhereUniqueInput
  }

  /**
   * assignments updateMany
   */
  export type assignmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update assignments.
     */
    data: XOR<assignmentsUpdateManyMutationInput, assignmentsUncheckedUpdateManyInput>
    /**
     * Filter which assignments to update
     */
    where?: assignmentsWhereInput
    /**
     * Limit how many assignments to update.
     */
    limit?: number
  }

  /**
   * assignments updateManyAndReturn
   */
  export type assignmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * The data used to update assignments.
     */
    data: XOR<assignmentsUpdateManyMutationInput, assignmentsUncheckedUpdateManyInput>
    /**
     * Filter which assignments to update
     */
    where?: assignmentsWhereInput
    /**
     * Limit how many assignments to update.
     */
    limit?: number
  }

  /**
   * assignments upsert
   */
  export type assignmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * The filter to search for the assignments to update in case it exists.
     */
    where: assignmentsWhereUniqueInput
    /**
     * In case the assignments found by the `where` argument doesn't exist, create a new assignments with this data.
     */
    create: XOR<assignmentsCreateInput, assignmentsUncheckedCreateInput>
    /**
     * In case the assignments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<assignmentsUpdateInput, assignmentsUncheckedUpdateInput>
  }

  /**
   * assignments delete
   */
  export type assignmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
    /**
     * Filter which assignments to delete.
     */
    where: assignmentsWhereUniqueInput
  }

  /**
   * assignments deleteMany
   */
  export type assignmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which assignments to delete
     */
    where?: assignmentsWhereInput
    /**
     * Limit how many assignments to delete.
     */
    limit?: number
  }

  /**
   * assignments without action
   */
  export type assignmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the assignments
     */
    select?: assignmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the assignments
     */
    omit?: assignmentsOmit<ExtArgs> | null
  }


  /**
   * Model batches
   */

  export type AggregateBatches = {
    _count: BatchesCountAggregateOutputType | null
    _avg: BatchesAvgAggregateOutputType | null
    _sum: BatchesSumAggregateOutputType | null
    _min: BatchesMinAggregateOutputType | null
    _max: BatchesMaxAggregateOutputType | null
  }

  export type BatchesAvgAggregateOutputType = {
    id: number | null
    fee: Decimal | null
    trainer_id: number | null
    capacity: number | null
    tenant_id: number | null
  }

  export type BatchesSumAggregateOutputType = {
    id: number | null
    fee: Decimal | null
    trainer_id: number | null
    capacity: number | null
    tenant_id: number | null
  }

  export type BatchesMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    fee: Decimal | null
    is_active: boolean | null
    created_at: Date | null
    trainer_id: number | null
    capacity: number | null
    updated_at: Date | null
    tenant_id: number | null
  }

  export type BatchesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    fee: Decimal | null
    is_active: boolean | null
    created_at: Date | null
    trainer_id: number | null
    capacity: number | null
    updated_at: Date | null
    tenant_id: number | null
  }

  export type BatchesCountAggregateOutputType = {
    id: number
    name: number
    description: number
    start_date: number
    end_date: number
    fee: number
    is_active: number
    created_at: number
    trainer_id: number
    capacity: number
    updated_at: number
    tenant_id: number
    _all: number
  }


  export type BatchesAvgAggregateInputType = {
    id?: true
    fee?: true
    trainer_id?: true
    capacity?: true
    tenant_id?: true
  }

  export type BatchesSumAggregateInputType = {
    id?: true
    fee?: true
    trainer_id?: true
    capacity?: true
    tenant_id?: true
  }

  export type BatchesMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    fee?: true
    is_active?: true
    created_at?: true
    trainer_id?: true
    capacity?: true
    updated_at?: true
    tenant_id?: true
  }

  export type BatchesMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    fee?: true
    is_active?: true
    created_at?: true
    trainer_id?: true
    capacity?: true
    updated_at?: true
    tenant_id?: true
  }

  export type BatchesCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    fee?: true
    is_active?: true
    created_at?: true
    trainer_id?: true
    capacity?: true
    updated_at?: true
    tenant_id?: true
    _all?: true
  }

  export type BatchesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which batches to aggregate.
     */
    where?: batchesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of batches to fetch.
     */
    orderBy?: batchesOrderByWithRelationInput | batchesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: batchesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` batches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` batches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned batches
    **/
    _count?: true | BatchesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BatchesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BatchesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BatchesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BatchesMaxAggregateInputType
  }

  export type GetBatchesAggregateType<T extends BatchesAggregateArgs> = {
        [P in keyof T & keyof AggregateBatches]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBatches[P]>
      : GetScalarType<T[P], AggregateBatches[P]>
  }




  export type batchesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: batchesWhereInput
    orderBy?: batchesOrderByWithAggregationInput | batchesOrderByWithAggregationInput[]
    by: BatchesScalarFieldEnum[] | BatchesScalarFieldEnum
    having?: batchesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BatchesCountAggregateInputType | true
    _avg?: BatchesAvgAggregateInputType
    _sum?: BatchesSumAggregateInputType
    _min?: BatchesMinAggregateInputType
    _max?: BatchesMaxAggregateInputType
  }

  export type BatchesGroupByOutputType = {
    id: number
    name: string
    description: string | null
    start_date: Date
    end_date: Date
    fee: Decimal
    is_active: boolean | null
    created_at: Date | null
    trainer_id: number | null
    capacity: number | null
    updated_at: Date | null
    tenant_id: number | null
    _count: BatchesCountAggregateOutputType | null
    _avg: BatchesAvgAggregateOutputType | null
    _sum: BatchesSumAggregateOutputType | null
    _min: BatchesMinAggregateOutputType | null
    _max: BatchesMaxAggregateOutputType | null
  }

  type GetBatchesGroupByPayload<T extends batchesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BatchesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BatchesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BatchesGroupByOutputType[P]>
            : GetScalarType<T[P], BatchesGroupByOutputType[P]>
        }
      >
    >


  export type batchesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    fee?: boolean
    is_active?: boolean
    created_at?: boolean
    trainer_id?: boolean
    capacity?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    tenants?: boolean | batches$tenantsArgs<ExtArgs>
    users?: boolean | batches$usersArgs<ExtArgs>
  }, ExtArgs["result"]["batches"]>

  export type batchesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    fee?: boolean
    is_active?: boolean
    created_at?: boolean
    trainer_id?: boolean
    capacity?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    tenants?: boolean | batches$tenantsArgs<ExtArgs>
    users?: boolean | batches$usersArgs<ExtArgs>
  }, ExtArgs["result"]["batches"]>

  export type batchesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    fee?: boolean
    is_active?: boolean
    created_at?: boolean
    trainer_id?: boolean
    capacity?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    tenants?: boolean | batches$tenantsArgs<ExtArgs>
    users?: boolean | batches$usersArgs<ExtArgs>
  }, ExtArgs["result"]["batches"]>

  export type batchesSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    fee?: boolean
    is_active?: boolean
    created_at?: boolean
    trainer_id?: boolean
    capacity?: boolean
    updated_at?: boolean
    tenant_id?: boolean
  }

  export type batchesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "start_date" | "end_date" | "fee" | "is_active" | "created_at" | "trainer_id" | "capacity" | "updated_at" | "tenant_id", ExtArgs["result"]["batches"]>
  export type batchesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | batches$tenantsArgs<ExtArgs>
    users?: boolean | batches$usersArgs<ExtArgs>
  }
  export type batchesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | batches$tenantsArgs<ExtArgs>
    users?: boolean | batches$usersArgs<ExtArgs>
  }
  export type batchesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | batches$tenantsArgs<ExtArgs>
    users?: boolean | batches$usersArgs<ExtArgs>
  }

  export type $batchesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "batches"
    objects: {
      tenants: Prisma.$tenantsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      start_date: Date
      end_date: Date
      fee: Prisma.Decimal
      is_active: boolean | null
      created_at: Date | null
      trainer_id: number | null
      capacity: number | null
      updated_at: Date | null
      tenant_id: number | null
    }, ExtArgs["result"]["batches"]>
    composites: {}
  }

  type batchesGetPayload<S extends boolean | null | undefined | batchesDefaultArgs> = $Result.GetResult<Prisma.$batchesPayload, S>

  type batchesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<batchesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BatchesCountAggregateInputType | true
    }

  export interface batchesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['batches'], meta: { name: 'batches' } }
    /**
     * Find zero or one Batches that matches the filter.
     * @param {batchesFindUniqueArgs} args - Arguments to find a Batches
     * @example
     * // Get one Batches
     * const batches = await prisma.batches.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends batchesFindUniqueArgs>(args: SelectSubset<T, batchesFindUniqueArgs<ExtArgs>>): Prisma__batchesClient<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Batches that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {batchesFindUniqueOrThrowArgs} args - Arguments to find a Batches
     * @example
     * // Get one Batches
     * const batches = await prisma.batches.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends batchesFindUniqueOrThrowArgs>(args: SelectSubset<T, batchesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__batchesClient<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Batches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {batchesFindFirstArgs} args - Arguments to find a Batches
     * @example
     * // Get one Batches
     * const batches = await prisma.batches.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends batchesFindFirstArgs>(args?: SelectSubset<T, batchesFindFirstArgs<ExtArgs>>): Prisma__batchesClient<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Batches that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {batchesFindFirstOrThrowArgs} args - Arguments to find a Batches
     * @example
     * // Get one Batches
     * const batches = await prisma.batches.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends batchesFindFirstOrThrowArgs>(args?: SelectSubset<T, batchesFindFirstOrThrowArgs<ExtArgs>>): Prisma__batchesClient<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Batches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {batchesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Batches
     * const batches = await prisma.batches.findMany()
     * 
     * // Get first 10 Batches
     * const batches = await prisma.batches.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const batchesWithIdOnly = await prisma.batches.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends batchesFindManyArgs>(args?: SelectSubset<T, batchesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Batches.
     * @param {batchesCreateArgs} args - Arguments to create a Batches.
     * @example
     * // Create one Batches
     * const Batches = await prisma.batches.create({
     *   data: {
     *     // ... data to create a Batches
     *   }
     * })
     * 
     */
    create<T extends batchesCreateArgs>(args: SelectSubset<T, batchesCreateArgs<ExtArgs>>): Prisma__batchesClient<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Batches.
     * @param {batchesCreateManyArgs} args - Arguments to create many Batches.
     * @example
     * // Create many Batches
     * const batches = await prisma.batches.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends batchesCreateManyArgs>(args?: SelectSubset<T, batchesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Batches and returns the data saved in the database.
     * @param {batchesCreateManyAndReturnArgs} args - Arguments to create many Batches.
     * @example
     * // Create many Batches
     * const batches = await prisma.batches.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Batches and only return the `id`
     * const batchesWithIdOnly = await prisma.batches.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends batchesCreateManyAndReturnArgs>(args?: SelectSubset<T, batchesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Batches.
     * @param {batchesDeleteArgs} args - Arguments to delete one Batches.
     * @example
     * // Delete one Batches
     * const Batches = await prisma.batches.delete({
     *   where: {
     *     // ... filter to delete one Batches
     *   }
     * })
     * 
     */
    delete<T extends batchesDeleteArgs>(args: SelectSubset<T, batchesDeleteArgs<ExtArgs>>): Prisma__batchesClient<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Batches.
     * @param {batchesUpdateArgs} args - Arguments to update one Batches.
     * @example
     * // Update one Batches
     * const batches = await prisma.batches.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends batchesUpdateArgs>(args: SelectSubset<T, batchesUpdateArgs<ExtArgs>>): Prisma__batchesClient<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Batches.
     * @param {batchesDeleteManyArgs} args - Arguments to filter Batches to delete.
     * @example
     * // Delete a few Batches
     * const { count } = await prisma.batches.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends batchesDeleteManyArgs>(args?: SelectSubset<T, batchesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Batches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {batchesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Batches
     * const batches = await prisma.batches.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends batchesUpdateManyArgs>(args: SelectSubset<T, batchesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Batches and returns the data updated in the database.
     * @param {batchesUpdateManyAndReturnArgs} args - Arguments to update many Batches.
     * @example
     * // Update many Batches
     * const batches = await prisma.batches.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Batches and only return the `id`
     * const batchesWithIdOnly = await prisma.batches.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends batchesUpdateManyAndReturnArgs>(args: SelectSubset<T, batchesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Batches.
     * @param {batchesUpsertArgs} args - Arguments to update or create a Batches.
     * @example
     * // Update or create a Batches
     * const batches = await prisma.batches.upsert({
     *   create: {
     *     // ... data to create a Batches
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Batches we want to update
     *   }
     * })
     */
    upsert<T extends batchesUpsertArgs>(args: SelectSubset<T, batchesUpsertArgs<ExtArgs>>): Prisma__batchesClient<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Batches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {batchesCountArgs} args - Arguments to filter Batches to count.
     * @example
     * // Count the number of Batches
     * const count = await prisma.batches.count({
     *   where: {
     *     // ... the filter for the Batches we want to count
     *   }
     * })
    **/
    count<T extends batchesCountArgs>(
      args?: Subset<T, batchesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BatchesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Batches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BatchesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BatchesAggregateArgs>(args: Subset<T, BatchesAggregateArgs>): Prisma.PrismaPromise<GetBatchesAggregateType<T>>

    /**
     * Group by Batches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {batchesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends batchesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: batchesGroupByArgs['orderBy'] }
        : { orderBy?: batchesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, batchesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBatchesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the batches model
   */
  readonly fields: batchesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for batches.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__batchesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tenants<T extends batches$tenantsArgs<ExtArgs> = {}>(args?: Subset<T, batches$tenantsArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends batches$usersArgs<ExtArgs> = {}>(args?: Subset<T, batches$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the batches model
   */
  interface batchesFieldRefs {
    readonly id: FieldRef<"batches", 'Int'>
    readonly name: FieldRef<"batches", 'String'>
    readonly description: FieldRef<"batches", 'String'>
    readonly start_date: FieldRef<"batches", 'DateTime'>
    readonly end_date: FieldRef<"batches", 'DateTime'>
    readonly fee: FieldRef<"batches", 'Decimal'>
    readonly is_active: FieldRef<"batches", 'Boolean'>
    readonly created_at: FieldRef<"batches", 'DateTime'>
    readonly trainer_id: FieldRef<"batches", 'Int'>
    readonly capacity: FieldRef<"batches", 'Int'>
    readonly updated_at: FieldRef<"batches", 'DateTime'>
    readonly tenant_id: FieldRef<"batches", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * batches findUnique
   */
  export type batchesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * Filter, which batches to fetch.
     */
    where: batchesWhereUniqueInput
  }

  /**
   * batches findUniqueOrThrow
   */
  export type batchesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * Filter, which batches to fetch.
     */
    where: batchesWhereUniqueInput
  }

  /**
   * batches findFirst
   */
  export type batchesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * Filter, which batches to fetch.
     */
    where?: batchesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of batches to fetch.
     */
    orderBy?: batchesOrderByWithRelationInput | batchesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for batches.
     */
    cursor?: batchesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` batches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` batches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of batches.
     */
    distinct?: BatchesScalarFieldEnum | BatchesScalarFieldEnum[]
  }

  /**
   * batches findFirstOrThrow
   */
  export type batchesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * Filter, which batches to fetch.
     */
    where?: batchesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of batches to fetch.
     */
    orderBy?: batchesOrderByWithRelationInput | batchesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for batches.
     */
    cursor?: batchesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` batches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` batches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of batches.
     */
    distinct?: BatchesScalarFieldEnum | BatchesScalarFieldEnum[]
  }

  /**
   * batches findMany
   */
  export type batchesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * Filter, which batches to fetch.
     */
    where?: batchesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of batches to fetch.
     */
    orderBy?: batchesOrderByWithRelationInput | batchesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing batches.
     */
    cursor?: batchesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` batches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` batches.
     */
    skip?: number
    distinct?: BatchesScalarFieldEnum | BatchesScalarFieldEnum[]
  }

  /**
   * batches create
   */
  export type batchesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * The data needed to create a batches.
     */
    data: XOR<batchesCreateInput, batchesUncheckedCreateInput>
  }

  /**
   * batches createMany
   */
  export type batchesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many batches.
     */
    data: batchesCreateManyInput | batchesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * batches createManyAndReturn
   */
  export type batchesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * The data used to create many batches.
     */
    data: batchesCreateManyInput | batchesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * batches update
   */
  export type batchesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * The data needed to update a batches.
     */
    data: XOR<batchesUpdateInput, batchesUncheckedUpdateInput>
    /**
     * Choose, which batches to update.
     */
    where: batchesWhereUniqueInput
  }

  /**
   * batches updateMany
   */
  export type batchesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update batches.
     */
    data: XOR<batchesUpdateManyMutationInput, batchesUncheckedUpdateManyInput>
    /**
     * Filter which batches to update
     */
    where?: batchesWhereInput
    /**
     * Limit how many batches to update.
     */
    limit?: number
  }

  /**
   * batches updateManyAndReturn
   */
  export type batchesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * The data used to update batches.
     */
    data: XOR<batchesUpdateManyMutationInput, batchesUncheckedUpdateManyInput>
    /**
     * Filter which batches to update
     */
    where?: batchesWhereInput
    /**
     * Limit how many batches to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * batches upsert
   */
  export type batchesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * The filter to search for the batches to update in case it exists.
     */
    where: batchesWhereUniqueInput
    /**
     * In case the batches found by the `where` argument doesn't exist, create a new batches with this data.
     */
    create: XOR<batchesCreateInput, batchesUncheckedCreateInput>
    /**
     * In case the batches was found with the provided `where` argument, update it with this data.
     */
    update: XOR<batchesUpdateInput, batchesUncheckedUpdateInput>
  }

  /**
   * batches delete
   */
  export type batchesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    /**
     * Filter which batches to delete.
     */
    where: batchesWhereUniqueInput
  }

  /**
   * batches deleteMany
   */
  export type batchesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which batches to delete
     */
    where?: batchesWhereInput
    /**
     * Limit how many batches to delete.
     */
    limit?: number
  }

  /**
   * batches.tenants
   */
  export type batches$tenantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    where?: tenantsWhereInput
  }

  /**
   * batches.users
   */
  export type batches$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * batches without action
   */
  export type batchesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
  }


  /**
   * Model code_snippets
   */

  export type AggregateCode_snippets = {
    _count: Code_snippetsCountAggregateOutputType | null
    _avg: Code_snippetsAvgAggregateOutputType | null
    _sum: Code_snippetsSumAggregateOutputType | null
    _min: Code_snippetsMinAggregateOutputType | null
    _max: Code_snippetsMaxAggregateOutputType | null
  }

  export type Code_snippetsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    course_id: number | null
  }

  export type Code_snippetsSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    course_id: number | null
  }

  export type Code_snippetsMinAggregateOutputType = {
    id: number | null
    title: string | null
    language: string | null
    code: string | null
    description: string | null
    user_id: number | null
    course_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Code_snippetsMaxAggregateOutputType = {
    id: number | null
    title: string | null
    language: string | null
    code: string | null
    description: string | null
    user_id: number | null
    course_id: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Code_snippetsCountAggregateOutputType = {
    id: number
    title: number
    language: number
    code: number
    description: number
    user_id: number
    course_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Code_snippetsAvgAggregateInputType = {
    id?: true
    user_id?: true
    course_id?: true
  }

  export type Code_snippetsSumAggregateInputType = {
    id?: true
    user_id?: true
    course_id?: true
  }

  export type Code_snippetsMinAggregateInputType = {
    id?: true
    title?: true
    language?: true
    code?: true
    description?: true
    user_id?: true
    course_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Code_snippetsMaxAggregateInputType = {
    id?: true
    title?: true
    language?: true
    code?: true
    description?: true
    user_id?: true
    course_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Code_snippetsCountAggregateInputType = {
    id?: true
    title?: true
    language?: true
    code?: true
    description?: true
    user_id?: true
    course_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Code_snippetsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which code_snippets to aggregate.
     */
    where?: code_snippetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of code_snippets to fetch.
     */
    orderBy?: code_snippetsOrderByWithRelationInput | code_snippetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: code_snippetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` code_snippets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` code_snippets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned code_snippets
    **/
    _count?: true | Code_snippetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Code_snippetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Code_snippetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Code_snippetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Code_snippetsMaxAggregateInputType
  }

  export type GetCode_snippetsAggregateType<T extends Code_snippetsAggregateArgs> = {
        [P in keyof T & keyof AggregateCode_snippets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCode_snippets[P]>
      : GetScalarType<T[P], AggregateCode_snippets[P]>
  }




  export type code_snippetsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: code_snippetsWhereInput
    orderBy?: code_snippetsOrderByWithAggregationInput | code_snippetsOrderByWithAggregationInput[]
    by: Code_snippetsScalarFieldEnum[] | Code_snippetsScalarFieldEnum
    having?: code_snippetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Code_snippetsCountAggregateInputType | true
    _avg?: Code_snippetsAvgAggregateInputType
    _sum?: Code_snippetsSumAggregateInputType
    _min?: Code_snippetsMinAggregateInputType
    _max?: Code_snippetsMaxAggregateInputType
  }

  export type Code_snippetsGroupByOutputType = {
    id: number
    title: string
    language: string
    code: string
    description: string | null
    user_id: number | null
    course_id: number | null
    created_at: Date
    updated_at: Date
    _count: Code_snippetsCountAggregateOutputType | null
    _avg: Code_snippetsAvgAggregateOutputType | null
    _sum: Code_snippetsSumAggregateOutputType | null
    _min: Code_snippetsMinAggregateOutputType | null
    _max: Code_snippetsMaxAggregateOutputType | null
  }

  type GetCode_snippetsGroupByPayload<T extends code_snippetsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Code_snippetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Code_snippetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Code_snippetsGroupByOutputType[P]>
            : GetScalarType<T[P], Code_snippetsGroupByOutputType[P]>
        }
      >
    >


  export type code_snippetsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    language?: boolean
    code?: boolean
    description?: boolean
    user_id?: boolean
    course_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["code_snippets"]>

  export type code_snippetsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    language?: boolean
    code?: boolean
    description?: boolean
    user_id?: boolean
    course_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["code_snippets"]>

  export type code_snippetsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    language?: boolean
    code?: boolean
    description?: boolean
    user_id?: boolean
    course_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["code_snippets"]>

  export type code_snippetsSelectScalar = {
    id?: boolean
    title?: boolean
    language?: boolean
    code?: boolean
    description?: boolean
    user_id?: boolean
    course_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type code_snippetsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "language" | "code" | "description" | "user_id" | "course_id" | "created_at" | "updated_at", ExtArgs["result"]["code_snippets"]>

  export type $code_snippetsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "code_snippets"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      language: string
      code: string
      description: string | null
      user_id: number | null
      course_id: number | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["code_snippets"]>
    composites: {}
  }

  type code_snippetsGetPayload<S extends boolean | null | undefined | code_snippetsDefaultArgs> = $Result.GetResult<Prisma.$code_snippetsPayload, S>

  type code_snippetsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<code_snippetsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Code_snippetsCountAggregateInputType | true
    }

  export interface code_snippetsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['code_snippets'], meta: { name: 'code_snippets' } }
    /**
     * Find zero or one Code_snippets that matches the filter.
     * @param {code_snippetsFindUniqueArgs} args - Arguments to find a Code_snippets
     * @example
     * // Get one Code_snippets
     * const code_snippets = await prisma.code_snippets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends code_snippetsFindUniqueArgs>(args: SelectSubset<T, code_snippetsFindUniqueArgs<ExtArgs>>): Prisma__code_snippetsClient<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Code_snippets that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {code_snippetsFindUniqueOrThrowArgs} args - Arguments to find a Code_snippets
     * @example
     * // Get one Code_snippets
     * const code_snippets = await prisma.code_snippets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends code_snippetsFindUniqueOrThrowArgs>(args: SelectSubset<T, code_snippetsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__code_snippetsClient<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Code_snippets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {code_snippetsFindFirstArgs} args - Arguments to find a Code_snippets
     * @example
     * // Get one Code_snippets
     * const code_snippets = await prisma.code_snippets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends code_snippetsFindFirstArgs>(args?: SelectSubset<T, code_snippetsFindFirstArgs<ExtArgs>>): Prisma__code_snippetsClient<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Code_snippets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {code_snippetsFindFirstOrThrowArgs} args - Arguments to find a Code_snippets
     * @example
     * // Get one Code_snippets
     * const code_snippets = await prisma.code_snippets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends code_snippetsFindFirstOrThrowArgs>(args?: SelectSubset<T, code_snippetsFindFirstOrThrowArgs<ExtArgs>>): Prisma__code_snippetsClient<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Code_snippets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {code_snippetsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Code_snippets
     * const code_snippets = await prisma.code_snippets.findMany()
     * 
     * // Get first 10 Code_snippets
     * const code_snippets = await prisma.code_snippets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const code_snippetsWithIdOnly = await prisma.code_snippets.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends code_snippetsFindManyArgs>(args?: SelectSubset<T, code_snippetsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Code_snippets.
     * @param {code_snippetsCreateArgs} args - Arguments to create a Code_snippets.
     * @example
     * // Create one Code_snippets
     * const Code_snippets = await prisma.code_snippets.create({
     *   data: {
     *     // ... data to create a Code_snippets
     *   }
     * })
     * 
     */
    create<T extends code_snippetsCreateArgs>(args: SelectSubset<T, code_snippetsCreateArgs<ExtArgs>>): Prisma__code_snippetsClient<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Code_snippets.
     * @param {code_snippetsCreateManyArgs} args - Arguments to create many Code_snippets.
     * @example
     * // Create many Code_snippets
     * const code_snippets = await prisma.code_snippets.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends code_snippetsCreateManyArgs>(args?: SelectSubset<T, code_snippetsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Code_snippets and returns the data saved in the database.
     * @param {code_snippetsCreateManyAndReturnArgs} args - Arguments to create many Code_snippets.
     * @example
     * // Create many Code_snippets
     * const code_snippets = await prisma.code_snippets.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Code_snippets and only return the `id`
     * const code_snippetsWithIdOnly = await prisma.code_snippets.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends code_snippetsCreateManyAndReturnArgs>(args?: SelectSubset<T, code_snippetsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Code_snippets.
     * @param {code_snippetsDeleteArgs} args - Arguments to delete one Code_snippets.
     * @example
     * // Delete one Code_snippets
     * const Code_snippets = await prisma.code_snippets.delete({
     *   where: {
     *     // ... filter to delete one Code_snippets
     *   }
     * })
     * 
     */
    delete<T extends code_snippetsDeleteArgs>(args: SelectSubset<T, code_snippetsDeleteArgs<ExtArgs>>): Prisma__code_snippetsClient<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Code_snippets.
     * @param {code_snippetsUpdateArgs} args - Arguments to update one Code_snippets.
     * @example
     * // Update one Code_snippets
     * const code_snippets = await prisma.code_snippets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends code_snippetsUpdateArgs>(args: SelectSubset<T, code_snippetsUpdateArgs<ExtArgs>>): Prisma__code_snippetsClient<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Code_snippets.
     * @param {code_snippetsDeleteManyArgs} args - Arguments to filter Code_snippets to delete.
     * @example
     * // Delete a few Code_snippets
     * const { count } = await prisma.code_snippets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends code_snippetsDeleteManyArgs>(args?: SelectSubset<T, code_snippetsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Code_snippets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {code_snippetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Code_snippets
     * const code_snippets = await prisma.code_snippets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends code_snippetsUpdateManyArgs>(args: SelectSubset<T, code_snippetsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Code_snippets and returns the data updated in the database.
     * @param {code_snippetsUpdateManyAndReturnArgs} args - Arguments to update many Code_snippets.
     * @example
     * // Update many Code_snippets
     * const code_snippets = await prisma.code_snippets.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Code_snippets and only return the `id`
     * const code_snippetsWithIdOnly = await prisma.code_snippets.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends code_snippetsUpdateManyAndReturnArgs>(args: SelectSubset<T, code_snippetsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Code_snippets.
     * @param {code_snippetsUpsertArgs} args - Arguments to update or create a Code_snippets.
     * @example
     * // Update or create a Code_snippets
     * const code_snippets = await prisma.code_snippets.upsert({
     *   create: {
     *     // ... data to create a Code_snippets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Code_snippets we want to update
     *   }
     * })
     */
    upsert<T extends code_snippetsUpsertArgs>(args: SelectSubset<T, code_snippetsUpsertArgs<ExtArgs>>): Prisma__code_snippetsClient<$Result.GetResult<Prisma.$code_snippetsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Code_snippets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {code_snippetsCountArgs} args - Arguments to filter Code_snippets to count.
     * @example
     * // Count the number of Code_snippets
     * const count = await prisma.code_snippets.count({
     *   where: {
     *     // ... the filter for the Code_snippets we want to count
     *   }
     * })
    **/
    count<T extends code_snippetsCountArgs>(
      args?: Subset<T, code_snippetsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Code_snippetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Code_snippets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Code_snippetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Code_snippetsAggregateArgs>(args: Subset<T, Code_snippetsAggregateArgs>): Prisma.PrismaPromise<GetCode_snippetsAggregateType<T>>

    /**
     * Group by Code_snippets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {code_snippetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends code_snippetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: code_snippetsGroupByArgs['orderBy'] }
        : { orderBy?: code_snippetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, code_snippetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCode_snippetsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the code_snippets model
   */
  readonly fields: code_snippetsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for code_snippets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__code_snippetsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the code_snippets model
   */
  interface code_snippetsFieldRefs {
    readonly id: FieldRef<"code_snippets", 'Int'>
    readonly title: FieldRef<"code_snippets", 'String'>
    readonly language: FieldRef<"code_snippets", 'String'>
    readonly code: FieldRef<"code_snippets", 'String'>
    readonly description: FieldRef<"code_snippets", 'String'>
    readonly user_id: FieldRef<"code_snippets", 'Int'>
    readonly course_id: FieldRef<"code_snippets", 'Int'>
    readonly created_at: FieldRef<"code_snippets", 'DateTime'>
    readonly updated_at: FieldRef<"code_snippets", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * code_snippets findUnique
   */
  export type code_snippetsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * Filter, which code_snippets to fetch.
     */
    where: code_snippetsWhereUniqueInput
  }

  /**
   * code_snippets findUniqueOrThrow
   */
  export type code_snippetsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * Filter, which code_snippets to fetch.
     */
    where: code_snippetsWhereUniqueInput
  }

  /**
   * code_snippets findFirst
   */
  export type code_snippetsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * Filter, which code_snippets to fetch.
     */
    where?: code_snippetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of code_snippets to fetch.
     */
    orderBy?: code_snippetsOrderByWithRelationInput | code_snippetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for code_snippets.
     */
    cursor?: code_snippetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` code_snippets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` code_snippets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of code_snippets.
     */
    distinct?: Code_snippetsScalarFieldEnum | Code_snippetsScalarFieldEnum[]
  }

  /**
   * code_snippets findFirstOrThrow
   */
  export type code_snippetsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * Filter, which code_snippets to fetch.
     */
    where?: code_snippetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of code_snippets to fetch.
     */
    orderBy?: code_snippetsOrderByWithRelationInput | code_snippetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for code_snippets.
     */
    cursor?: code_snippetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` code_snippets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` code_snippets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of code_snippets.
     */
    distinct?: Code_snippetsScalarFieldEnum | Code_snippetsScalarFieldEnum[]
  }

  /**
   * code_snippets findMany
   */
  export type code_snippetsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * Filter, which code_snippets to fetch.
     */
    where?: code_snippetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of code_snippets to fetch.
     */
    orderBy?: code_snippetsOrderByWithRelationInput | code_snippetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing code_snippets.
     */
    cursor?: code_snippetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` code_snippets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` code_snippets.
     */
    skip?: number
    distinct?: Code_snippetsScalarFieldEnum | Code_snippetsScalarFieldEnum[]
  }

  /**
   * code_snippets create
   */
  export type code_snippetsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * The data needed to create a code_snippets.
     */
    data: XOR<code_snippetsCreateInput, code_snippetsUncheckedCreateInput>
  }

  /**
   * code_snippets createMany
   */
  export type code_snippetsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many code_snippets.
     */
    data: code_snippetsCreateManyInput | code_snippetsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * code_snippets createManyAndReturn
   */
  export type code_snippetsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * The data used to create many code_snippets.
     */
    data: code_snippetsCreateManyInput | code_snippetsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * code_snippets update
   */
  export type code_snippetsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * The data needed to update a code_snippets.
     */
    data: XOR<code_snippetsUpdateInput, code_snippetsUncheckedUpdateInput>
    /**
     * Choose, which code_snippets to update.
     */
    where: code_snippetsWhereUniqueInput
  }

  /**
   * code_snippets updateMany
   */
  export type code_snippetsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update code_snippets.
     */
    data: XOR<code_snippetsUpdateManyMutationInput, code_snippetsUncheckedUpdateManyInput>
    /**
     * Filter which code_snippets to update
     */
    where?: code_snippetsWhereInput
    /**
     * Limit how many code_snippets to update.
     */
    limit?: number
  }

  /**
   * code_snippets updateManyAndReturn
   */
  export type code_snippetsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * The data used to update code_snippets.
     */
    data: XOR<code_snippetsUpdateManyMutationInput, code_snippetsUncheckedUpdateManyInput>
    /**
     * Filter which code_snippets to update
     */
    where?: code_snippetsWhereInput
    /**
     * Limit how many code_snippets to update.
     */
    limit?: number
  }

  /**
   * code_snippets upsert
   */
  export type code_snippetsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * The filter to search for the code_snippets to update in case it exists.
     */
    where: code_snippetsWhereUniqueInput
    /**
     * In case the code_snippets found by the `where` argument doesn't exist, create a new code_snippets with this data.
     */
    create: XOR<code_snippetsCreateInput, code_snippetsUncheckedCreateInput>
    /**
     * In case the code_snippets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<code_snippetsUpdateInput, code_snippetsUncheckedUpdateInput>
  }

  /**
   * code_snippets delete
   */
  export type code_snippetsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
    /**
     * Filter which code_snippets to delete.
     */
    where: code_snippetsWhereUniqueInput
  }

  /**
   * code_snippets deleteMany
   */
  export type code_snippetsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which code_snippets to delete
     */
    where?: code_snippetsWhereInput
    /**
     * Limit how many code_snippets to delete.
     */
    limit?: number
  }

  /**
   * code_snippets without action
   */
  export type code_snippetsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the code_snippets
     */
    select?: code_snippetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the code_snippets
     */
    omit?: code_snippetsOmit<ExtArgs> | null
  }


  /**
   * Model courses
   */

  export type AggregateCourses = {
    _count: CoursesCountAggregateOutputType | null
    _avg: CoursesAvgAggregateOutputType | null
    _sum: CoursesSumAggregateOutputType | null
    _min: CoursesMinAggregateOutputType | null
    _max: CoursesMaxAggregateOutputType | null
  }

  export type CoursesAvgAggregateOutputType = {
    id: number | null
    duration: number | null
    batch_id: number | null
    tenant_id: number | null
  }

  export type CoursesSumAggregateOutputType = {
    id: number | null
    duration: number | null
    batch_id: number | null
    tenant_id: number | null
  }

  export type CoursesMinAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    duration: number | null
    batch_id: number | null
    created_at: Date | null
    updated_at: Date | null
    tenant_id: number | null
  }

  export type CoursesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    duration: number | null
    batch_id: number | null
    created_at: Date | null
    updated_at: Date | null
    tenant_id: number | null
  }

  export type CoursesCountAggregateOutputType = {
    id: number
    title: number
    description: number
    duration: number
    batch_id: number
    created_at: number
    updated_at: number
    tenant_id: number
    _all: number
  }


  export type CoursesAvgAggregateInputType = {
    id?: true
    duration?: true
    batch_id?: true
    tenant_id?: true
  }

  export type CoursesSumAggregateInputType = {
    id?: true
    duration?: true
    batch_id?: true
    tenant_id?: true
  }

  export type CoursesMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    duration?: true
    batch_id?: true
    created_at?: true
    updated_at?: true
    tenant_id?: true
  }

  export type CoursesMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    duration?: true
    batch_id?: true
    created_at?: true
    updated_at?: true
    tenant_id?: true
  }

  export type CoursesCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    duration?: true
    batch_id?: true
    created_at?: true
    updated_at?: true
    tenant_id?: true
    _all?: true
  }

  export type CoursesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courses to aggregate.
     */
    where?: coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courses to fetch.
     */
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned courses
    **/
    _count?: true | CoursesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CoursesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CoursesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CoursesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CoursesMaxAggregateInputType
  }

  export type GetCoursesAggregateType<T extends CoursesAggregateArgs> = {
        [P in keyof T & keyof AggregateCourses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourses[P]>
      : GetScalarType<T[P], AggregateCourses[P]>
  }




  export type coursesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: coursesWhereInput
    orderBy?: coursesOrderByWithAggregationInput | coursesOrderByWithAggregationInput[]
    by: CoursesScalarFieldEnum[] | CoursesScalarFieldEnum
    having?: coursesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CoursesCountAggregateInputType | true
    _avg?: CoursesAvgAggregateInputType
    _sum?: CoursesSumAggregateInputType
    _min?: CoursesMinAggregateInputType
    _max?: CoursesMaxAggregateInputType
  }

  export type CoursesGroupByOutputType = {
    id: number
    title: string
    description: string | null
    duration: number
    batch_id: number | null
    created_at: Date
    updated_at: Date
    tenant_id: number | null
    _count: CoursesCountAggregateOutputType | null
    _avg: CoursesAvgAggregateOutputType | null
    _sum: CoursesSumAggregateOutputType | null
    _min: CoursesMinAggregateOutputType | null
    _max: CoursesMaxAggregateOutputType | null
  }

  type GetCoursesGroupByPayload<T extends coursesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CoursesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CoursesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CoursesGroupByOutputType[P]>
            : GetScalarType<T[P], CoursesGroupByOutputType[P]>
        }
      >
    >


  export type coursesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    duration?: boolean
    batch_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    tenants?: boolean | courses$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["courses"]>

  export type coursesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    duration?: boolean
    batch_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    tenants?: boolean | courses$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["courses"]>

  export type coursesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    duration?: boolean
    batch_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    tenants?: boolean | courses$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["courses"]>

  export type coursesSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    duration?: boolean
    batch_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenant_id?: boolean
  }

  export type coursesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "duration" | "batch_id" | "created_at" | "updated_at" | "tenant_id", ExtArgs["result"]["courses"]>
  export type coursesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | courses$tenantsArgs<ExtArgs>
  }
  export type coursesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | courses$tenantsArgs<ExtArgs>
  }
  export type coursesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | courses$tenantsArgs<ExtArgs>
  }

  export type $coursesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "courses"
    objects: {
      tenants: Prisma.$tenantsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      description: string | null
      duration: number
      batch_id: number | null
      created_at: Date
      updated_at: Date
      tenant_id: number | null
    }, ExtArgs["result"]["courses"]>
    composites: {}
  }

  type coursesGetPayload<S extends boolean | null | undefined | coursesDefaultArgs> = $Result.GetResult<Prisma.$coursesPayload, S>

  type coursesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<coursesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CoursesCountAggregateInputType | true
    }

  export interface coursesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['courses'], meta: { name: 'courses' } }
    /**
     * Find zero or one Courses that matches the filter.
     * @param {coursesFindUniqueArgs} args - Arguments to find a Courses
     * @example
     * // Get one Courses
     * const courses = await prisma.courses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends coursesFindUniqueArgs>(args: SelectSubset<T, coursesFindUniqueArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Courses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {coursesFindUniqueOrThrowArgs} args - Arguments to find a Courses
     * @example
     * // Get one Courses
     * const courses = await prisma.courses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends coursesFindUniqueOrThrowArgs>(args: SelectSubset<T, coursesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Courses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesFindFirstArgs} args - Arguments to find a Courses
     * @example
     * // Get one Courses
     * const courses = await prisma.courses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends coursesFindFirstArgs>(args?: SelectSubset<T, coursesFindFirstArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Courses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesFindFirstOrThrowArgs} args - Arguments to find a Courses
     * @example
     * // Get one Courses
     * const courses = await prisma.courses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends coursesFindFirstOrThrowArgs>(args?: SelectSubset<T, coursesFindFirstOrThrowArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Courses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Courses
     * const courses = await prisma.courses.findMany()
     * 
     * // Get first 10 Courses
     * const courses = await prisma.courses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const coursesWithIdOnly = await prisma.courses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends coursesFindManyArgs>(args?: SelectSubset<T, coursesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Courses.
     * @param {coursesCreateArgs} args - Arguments to create a Courses.
     * @example
     * // Create one Courses
     * const Courses = await prisma.courses.create({
     *   data: {
     *     // ... data to create a Courses
     *   }
     * })
     * 
     */
    create<T extends coursesCreateArgs>(args: SelectSubset<T, coursesCreateArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Courses.
     * @param {coursesCreateManyArgs} args - Arguments to create many Courses.
     * @example
     * // Create many Courses
     * const courses = await prisma.courses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends coursesCreateManyArgs>(args?: SelectSubset<T, coursesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Courses and returns the data saved in the database.
     * @param {coursesCreateManyAndReturnArgs} args - Arguments to create many Courses.
     * @example
     * // Create many Courses
     * const courses = await prisma.courses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Courses and only return the `id`
     * const coursesWithIdOnly = await prisma.courses.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends coursesCreateManyAndReturnArgs>(args?: SelectSubset<T, coursesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Courses.
     * @param {coursesDeleteArgs} args - Arguments to delete one Courses.
     * @example
     * // Delete one Courses
     * const Courses = await prisma.courses.delete({
     *   where: {
     *     // ... filter to delete one Courses
     *   }
     * })
     * 
     */
    delete<T extends coursesDeleteArgs>(args: SelectSubset<T, coursesDeleteArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Courses.
     * @param {coursesUpdateArgs} args - Arguments to update one Courses.
     * @example
     * // Update one Courses
     * const courses = await prisma.courses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends coursesUpdateArgs>(args: SelectSubset<T, coursesUpdateArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Courses.
     * @param {coursesDeleteManyArgs} args - Arguments to filter Courses to delete.
     * @example
     * // Delete a few Courses
     * const { count } = await prisma.courses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends coursesDeleteManyArgs>(args?: SelectSubset<T, coursesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Courses
     * const courses = await prisma.courses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends coursesUpdateManyArgs>(args: SelectSubset<T, coursesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Courses and returns the data updated in the database.
     * @param {coursesUpdateManyAndReturnArgs} args - Arguments to update many Courses.
     * @example
     * // Update many Courses
     * const courses = await prisma.courses.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Courses and only return the `id`
     * const coursesWithIdOnly = await prisma.courses.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends coursesUpdateManyAndReturnArgs>(args: SelectSubset<T, coursesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Courses.
     * @param {coursesUpsertArgs} args - Arguments to update or create a Courses.
     * @example
     * // Update or create a Courses
     * const courses = await prisma.courses.upsert({
     *   create: {
     *     // ... data to create a Courses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Courses we want to update
     *   }
     * })
     */
    upsert<T extends coursesUpsertArgs>(args: SelectSubset<T, coursesUpsertArgs<ExtArgs>>): Prisma__coursesClient<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesCountArgs} args - Arguments to filter Courses to count.
     * @example
     * // Count the number of Courses
     * const count = await prisma.courses.count({
     *   where: {
     *     // ... the filter for the Courses we want to count
     *   }
     * })
    **/
    count<T extends coursesCountArgs>(
      args?: Subset<T, coursesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CoursesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CoursesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CoursesAggregateArgs>(args: Subset<T, CoursesAggregateArgs>): Prisma.PrismaPromise<GetCoursesAggregateType<T>>

    /**
     * Group by Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {coursesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends coursesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: coursesGroupByArgs['orderBy'] }
        : { orderBy?: coursesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, coursesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCoursesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the courses model
   */
  readonly fields: coursesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for courses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__coursesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tenants<T extends courses$tenantsArgs<ExtArgs> = {}>(args?: Subset<T, courses$tenantsArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the courses model
   */
  interface coursesFieldRefs {
    readonly id: FieldRef<"courses", 'Int'>
    readonly title: FieldRef<"courses", 'String'>
    readonly description: FieldRef<"courses", 'String'>
    readonly duration: FieldRef<"courses", 'Int'>
    readonly batch_id: FieldRef<"courses", 'Int'>
    readonly created_at: FieldRef<"courses", 'DateTime'>
    readonly updated_at: FieldRef<"courses", 'DateTime'>
    readonly tenant_id: FieldRef<"courses", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * courses findUnique
   */
  export type coursesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where: coursesWhereUniqueInput
  }

  /**
   * courses findUniqueOrThrow
   */
  export type coursesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where: coursesWhereUniqueInput
  }

  /**
   * courses findFirst
   */
  export type coursesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where?: coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courses to fetch.
     */
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for courses.
     */
    cursor?: coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of courses.
     */
    distinct?: CoursesScalarFieldEnum | CoursesScalarFieldEnum[]
  }

  /**
   * courses findFirstOrThrow
   */
  export type coursesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where?: coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courses to fetch.
     */
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for courses.
     */
    cursor?: coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of courses.
     */
    distinct?: CoursesScalarFieldEnum | CoursesScalarFieldEnum[]
  }

  /**
   * courses findMany
   */
  export type coursesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter, which courses to fetch.
     */
    where?: coursesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of courses to fetch.
     */
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing courses.
     */
    cursor?: coursesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` courses.
     */
    skip?: number
    distinct?: CoursesScalarFieldEnum | CoursesScalarFieldEnum[]
  }

  /**
   * courses create
   */
  export type coursesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * The data needed to create a courses.
     */
    data: XOR<coursesCreateInput, coursesUncheckedCreateInput>
  }

  /**
   * courses createMany
   */
  export type coursesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many courses.
     */
    data: coursesCreateManyInput | coursesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * courses createManyAndReturn
   */
  export type coursesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * The data used to create many courses.
     */
    data: coursesCreateManyInput | coursesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * courses update
   */
  export type coursesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * The data needed to update a courses.
     */
    data: XOR<coursesUpdateInput, coursesUncheckedUpdateInput>
    /**
     * Choose, which courses to update.
     */
    where: coursesWhereUniqueInput
  }

  /**
   * courses updateMany
   */
  export type coursesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update courses.
     */
    data: XOR<coursesUpdateManyMutationInput, coursesUncheckedUpdateManyInput>
    /**
     * Filter which courses to update
     */
    where?: coursesWhereInput
    /**
     * Limit how many courses to update.
     */
    limit?: number
  }

  /**
   * courses updateManyAndReturn
   */
  export type coursesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * The data used to update courses.
     */
    data: XOR<coursesUpdateManyMutationInput, coursesUncheckedUpdateManyInput>
    /**
     * Filter which courses to update
     */
    where?: coursesWhereInput
    /**
     * Limit how many courses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * courses upsert
   */
  export type coursesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * The filter to search for the courses to update in case it exists.
     */
    where: coursesWhereUniqueInput
    /**
     * In case the courses found by the `where` argument doesn't exist, create a new courses with this data.
     */
    create: XOR<coursesCreateInput, coursesUncheckedCreateInput>
    /**
     * In case the courses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<coursesUpdateInput, coursesUncheckedUpdateInput>
  }

  /**
   * courses delete
   */
  export type coursesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    /**
     * Filter which courses to delete.
     */
    where: coursesWhereUniqueInput
  }

  /**
   * courses deleteMany
   */
  export type coursesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which courses to delete
     */
    where?: coursesWhereInput
    /**
     * Limit how many courses to delete.
     */
    limit?: number
  }

  /**
   * courses.tenants
   */
  export type courses$tenantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    where?: tenantsWhereInput
  }

  /**
   * courses without action
   */
  export type coursesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
  }


  /**
   * Model follow_up_comments
   */

  export type AggregateFollow_up_comments = {
    _count: Follow_up_commentsCountAggregateOutputType | null
    _avg: Follow_up_commentsAvgAggregateOutputType | null
    _sum: Follow_up_commentsSumAggregateOutputType | null
    _min: Follow_up_commentsMinAggregateOutputType | null
    _max: Follow_up_commentsMaxAggregateOutputType | null
  }

  export type Follow_up_commentsAvgAggregateOutputType = {
    id: number | null
    follow_up_id: number | null
    created_by: number | null
  }

  export type Follow_up_commentsSumAggregateOutputType = {
    id: number | null
    follow_up_id: number | null
    created_by: number | null
  }

  export type Follow_up_commentsMinAggregateOutputType = {
    id: number | null
    follow_up_id: number | null
    comment: string | null
    created_by: number | null
    created_at: Date | null
  }

  export type Follow_up_commentsMaxAggregateOutputType = {
    id: number | null
    follow_up_id: number | null
    comment: string | null
    created_by: number | null
    created_at: Date | null
  }

  export type Follow_up_commentsCountAggregateOutputType = {
    id: number
    follow_up_id: number
    comment: number
    created_by: number
    created_at: number
    _all: number
  }


  export type Follow_up_commentsAvgAggregateInputType = {
    id?: true
    follow_up_id?: true
    created_by?: true
  }

  export type Follow_up_commentsSumAggregateInputType = {
    id?: true
    follow_up_id?: true
    created_by?: true
  }

  export type Follow_up_commentsMinAggregateInputType = {
    id?: true
    follow_up_id?: true
    comment?: true
    created_by?: true
    created_at?: true
  }

  export type Follow_up_commentsMaxAggregateInputType = {
    id?: true
    follow_up_id?: true
    comment?: true
    created_by?: true
    created_at?: true
  }

  export type Follow_up_commentsCountAggregateInputType = {
    id?: true
    follow_up_id?: true
    comment?: true
    created_by?: true
    created_at?: true
    _all?: true
  }

  export type Follow_up_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which follow_up_comments to aggregate.
     */
    where?: follow_up_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follow_up_comments to fetch.
     */
    orderBy?: follow_up_commentsOrderByWithRelationInput | follow_up_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: follow_up_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follow_up_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follow_up_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned follow_up_comments
    **/
    _count?: true | Follow_up_commentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Follow_up_commentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Follow_up_commentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Follow_up_commentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Follow_up_commentsMaxAggregateInputType
  }

  export type GetFollow_up_commentsAggregateType<T extends Follow_up_commentsAggregateArgs> = {
        [P in keyof T & keyof AggregateFollow_up_comments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFollow_up_comments[P]>
      : GetScalarType<T[P], AggregateFollow_up_comments[P]>
  }




  export type follow_up_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: follow_up_commentsWhereInput
    orderBy?: follow_up_commentsOrderByWithAggregationInput | follow_up_commentsOrderByWithAggregationInput[]
    by: Follow_up_commentsScalarFieldEnum[] | Follow_up_commentsScalarFieldEnum
    having?: follow_up_commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Follow_up_commentsCountAggregateInputType | true
    _avg?: Follow_up_commentsAvgAggregateInputType
    _sum?: Follow_up_commentsSumAggregateInputType
    _min?: Follow_up_commentsMinAggregateInputType
    _max?: Follow_up_commentsMaxAggregateInputType
  }

  export type Follow_up_commentsGroupByOutputType = {
    id: number
    follow_up_id: number
    comment: string
    created_by: number | null
    created_at: Date
    _count: Follow_up_commentsCountAggregateOutputType | null
    _avg: Follow_up_commentsAvgAggregateOutputType | null
    _sum: Follow_up_commentsSumAggregateOutputType | null
    _min: Follow_up_commentsMinAggregateOutputType | null
    _max: Follow_up_commentsMaxAggregateOutputType | null
  }

  type GetFollow_up_commentsGroupByPayload<T extends follow_up_commentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Follow_up_commentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Follow_up_commentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Follow_up_commentsGroupByOutputType[P]>
            : GetScalarType<T[P], Follow_up_commentsGroupByOutputType[P]>
        }
      >
    >


  export type follow_up_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    follow_up_id?: boolean
    comment?: boolean
    created_by?: boolean
    created_at?: boolean
    users?: boolean | follow_up_comments$usersArgs<ExtArgs>
    follow_ups?: boolean | follow_upsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["follow_up_comments"]>

  export type follow_up_commentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    follow_up_id?: boolean
    comment?: boolean
    created_by?: boolean
    created_at?: boolean
    users?: boolean | follow_up_comments$usersArgs<ExtArgs>
    follow_ups?: boolean | follow_upsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["follow_up_comments"]>

  export type follow_up_commentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    follow_up_id?: boolean
    comment?: boolean
    created_by?: boolean
    created_at?: boolean
    users?: boolean | follow_up_comments$usersArgs<ExtArgs>
    follow_ups?: boolean | follow_upsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["follow_up_comments"]>

  export type follow_up_commentsSelectScalar = {
    id?: boolean
    follow_up_id?: boolean
    comment?: boolean
    created_by?: boolean
    created_at?: boolean
  }

  export type follow_up_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "follow_up_id" | "comment" | "created_by" | "created_at", ExtArgs["result"]["follow_up_comments"]>
  export type follow_up_commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | follow_up_comments$usersArgs<ExtArgs>
    follow_ups?: boolean | follow_upsDefaultArgs<ExtArgs>
  }
  export type follow_up_commentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | follow_up_comments$usersArgs<ExtArgs>
    follow_ups?: boolean | follow_upsDefaultArgs<ExtArgs>
  }
  export type follow_up_commentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | follow_up_comments$usersArgs<ExtArgs>
    follow_ups?: boolean | follow_upsDefaultArgs<ExtArgs>
  }

  export type $follow_up_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "follow_up_comments"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      follow_ups: Prisma.$follow_upsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      follow_up_id: number
      comment: string
      created_by: number | null
      created_at: Date
    }, ExtArgs["result"]["follow_up_comments"]>
    composites: {}
  }

  type follow_up_commentsGetPayload<S extends boolean | null | undefined | follow_up_commentsDefaultArgs> = $Result.GetResult<Prisma.$follow_up_commentsPayload, S>

  type follow_up_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<follow_up_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Follow_up_commentsCountAggregateInputType | true
    }

  export interface follow_up_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['follow_up_comments'], meta: { name: 'follow_up_comments' } }
    /**
     * Find zero or one Follow_up_comments that matches the filter.
     * @param {follow_up_commentsFindUniqueArgs} args - Arguments to find a Follow_up_comments
     * @example
     * // Get one Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends follow_up_commentsFindUniqueArgs>(args: SelectSubset<T, follow_up_commentsFindUniqueArgs<ExtArgs>>): Prisma__follow_up_commentsClient<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Follow_up_comments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {follow_up_commentsFindUniqueOrThrowArgs} args - Arguments to find a Follow_up_comments
     * @example
     * // Get one Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends follow_up_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, follow_up_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__follow_up_commentsClient<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Follow_up_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_up_commentsFindFirstArgs} args - Arguments to find a Follow_up_comments
     * @example
     * // Get one Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends follow_up_commentsFindFirstArgs>(args?: SelectSubset<T, follow_up_commentsFindFirstArgs<ExtArgs>>): Prisma__follow_up_commentsClient<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Follow_up_comments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_up_commentsFindFirstOrThrowArgs} args - Arguments to find a Follow_up_comments
     * @example
     * // Get one Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends follow_up_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, follow_up_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__follow_up_commentsClient<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Follow_up_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_up_commentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.findMany()
     * 
     * // Get first 10 Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const follow_up_commentsWithIdOnly = await prisma.follow_up_comments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends follow_up_commentsFindManyArgs>(args?: SelectSubset<T, follow_up_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Follow_up_comments.
     * @param {follow_up_commentsCreateArgs} args - Arguments to create a Follow_up_comments.
     * @example
     * // Create one Follow_up_comments
     * const Follow_up_comments = await prisma.follow_up_comments.create({
     *   data: {
     *     // ... data to create a Follow_up_comments
     *   }
     * })
     * 
     */
    create<T extends follow_up_commentsCreateArgs>(args: SelectSubset<T, follow_up_commentsCreateArgs<ExtArgs>>): Prisma__follow_up_commentsClient<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Follow_up_comments.
     * @param {follow_up_commentsCreateManyArgs} args - Arguments to create many Follow_up_comments.
     * @example
     * // Create many Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends follow_up_commentsCreateManyArgs>(args?: SelectSubset<T, follow_up_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Follow_up_comments and returns the data saved in the database.
     * @param {follow_up_commentsCreateManyAndReturnArgs} args - Arguments to create many Follow_up_comments.
     * @example
     * // Create many Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Follow_up_comments and only return the `id`
     * const follow_up_commentsWithIdOnly = await prisma.follow_up_comments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends follow_up_commentsCreateManyAndReturnArgs>(args?: SelectSubset<T, follow_up_commentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Follow_up_comments.
     * @param {follow_up_commentsDeleteArgs} args - Arguments to delete one Follow_up_comments.
     * @example
     * // Delete one Follow_up_comments
     * const Follow_up_comments = await prisma.follow_up_comments.delete({
     *   where: {
     *     // ... filter to delete one Follow_up_comments
     *   }
     * })
     * 
     */
    delete<T extends follow_up_commentsDeleteArgs>(args: SelectSubset<T, follow_up_commentsDeleteArgs<ExtArgs>>): Prisma__follow_up_commentsClient<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Follow_up_comments.
     * @param {follow_up_commentsUpdateArgs} args - Arguments to update one Follow_up_comments.
     * @example
     * // Update one Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends follow_up_commentsUpdateArgs>(args: SelectSubset<T, follow_up_commentsUpdateArgs<ExtArgs>>): Prisma__follow_up_commentsClient<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Follow_up_comments.
     * @param {follow_up_commentsDeleteManyArgs} args - Arguments to filter Follow_up_comments to delete.
     * @example
     * // Delete a few Follow_up_comments
     * const { count } = await prisma.follow_up_comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends follow_up_commentsDeleteManyArgs>(args?: SelectSubset<T, follow_up_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Follow_up_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_up_commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends follow_up_commentsUpdateManyArgs>(args: SelectSubset<T, follow_up_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Follow_up_comments and returns the data updated in the database.
     * @param {follow_up_commentsUpdateManyAndReturnArgs} args - Arguments to update many Follow_up_comments.
     * @example
     * // Update many Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Follow_up_comments and only return the `id`
     * const follow_up_commentsWithIdOnly = await prisma.follow_up_comments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends follow_up_commentsUpdateManyAndReturnArgs>(args: SelectSubset<T, follow_up_commentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Follow_up_comments.
     * @param {follow_up_commentsUpsertArgs} args - Arguments to update or create a Follow_up_comments.
     * @example
     * // Update or create a Follow_up_comments
     * const follow_up_comments = await prisma.follow_up_comments.upsert({
     *   create: {
     *     // ... data to create a Follow_up_comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Follow_up_comments we want to update
     *   }
     * })
     */
    upsert<T extends follow_up_commentsUpsertArgs>(args: SelectSubset<T, follow_up_commentsUpsertArgs<ExtArgs>>): Prisma__follow_up_commentsClient<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Follow_up_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_up_commentsCountArgs} args - Arguments to filter Follow_up_comments to count.
     * @example
     * // Count the number of Follow_up_comments
     * const count = await prisma.follow_up_comments.count({
     *   where: {
     *     // ... the filter for the Follow_up_comments we want to count
     *   }
     * })
    **/
    count<T extends follow_up_commentsCountArgs>(
      args?: Subset<T, follow_up_commentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Follow_up_commentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Follow_up_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Follow_up_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Follow_up_commentsAggregateArgs>(args: Subset<T, Follow_up_commentsAggregateArgs>): Prisma.PrismaPromise<GetFollow_up_commentsAggregateType<T>>

    /**
     * Group by Follow_up_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_up_commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends follow_up_commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: follow_up_commentsGroupByArgs['orderBy'] }
        : { orderBy?: follow_up_commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, follow_up_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFollow_up_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the follow_up_comments model
   */
  readonly fields: follow_up_commentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for follow_up_comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__follow_up_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends follow_up_comments$usersArgs<ExtArgs> = {}>(args?: Subset<T, follow_up_comments$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    follow_ups<T extends follow_upsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, follow_upsDefaultArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the follow_up_comments model
   */
  interface follow_up_commentsFieldRefs {
    readonly id: FieldRef<"follow_up_comments", 'Int'>
    readonly follow_up_id: FieldRef<"follow_up_comments", 'Int'>
    readonly comment: FieldRef<"follow_up_comments", 'String'>
    readonly created_by: FieldRef<"follow_up_comments", 'Int'>
    readonly created_at: FieldRef<"follow_up_comments", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * follow_up_comments findUnique
   */
  export type follow_up_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * Filter, which follow_up_comments to fetch.
     */
    where: follow_up_commentsWhereUniqueInput
  }

  /**
   * follow_up_comments findUniqueOrThrow
   */
  export type follow_up_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * Filter, which follow_up_comments to fetch.
     */
    where: follow_up_commentsWhereUniqueInput
  }

  /**
   * follow_up_comments findFirst
   */
  export type follow_up_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * Filter, which follow_up_comments to fetch.
     */
    where?: follow_up_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follow_up_comments to fetch.
     */
    orderBy?: follow_up_commentsOrderByWithRelationInput | follow_up_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for follow_up_comments.
     */
    cursor?: follow_up_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follow_up_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follow_up_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of follow_up_comments.
     */
    distinct?: Follow_up_commentsScalarFieldEnum | Follow_up_commentsScalarFieldEnum[]
  }

  /**
   * follow_up_comments findFirstOrThrow
   */
  export type follow_up_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * Filter, which follow_up_comments to fetch.
     */
    where?: follow_up_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follow_up_comments to fetch.
     */
    orderBy?: follow_up_commentsOrderByWithRelationInput | follow_up_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for follow_up_comments.
     */
    cursor?: follow_up_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follow_up_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follow_up_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of follow_up_comments.
     */
    distinct?: Follow_up_commentsScalarFieldEnum | Follow_up_commentsScalarFieldEnum[]
  }

  /**
   * follow_up_comments findMany
   */
  export type follow_up_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * Filter, which follow_up_comments to fetch.
     */
    where?: follow_up_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follow_up_comments to fetch.
     */
    orderBy?: follow_up_commentsOrderByWithRelationInput | follow_up_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing follow_up_comments.
     */
    cursor?: follow_up_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follow_up_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follow_up_comments.
     */
    skip?: number
    distinct?: Follow_up_commentsScalarFieldEnum | Follow_up_commentsScalarFieldEnum[]
  }

  /**
   * follow_up_comments create
   */
  export type follow_up_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * The data needed to create a follow_up_comments.
     */
    data: XOR<follow_up_commentsCreateInput, follow_up_commentsUncheckedCreateInput>
  }

  /**
   * follow_up_comments createMany
   */
  export type follow_up_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many follow_up_comments.
     */
    data: follow_up_commentsCreateManyInput | follow_up_commentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * follow_up_comments createManyAndReturn
   */
  export type follow_up_commentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * The data used to create many follow_up_comments.
     */
    data: follow_up_commentsCreateManyInput | follow_up_commentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * follow_up_comments update
   */
  export type follow_up_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * The data needed to update a follow_up_comments.
     */
    data: XOR<follow_up_commentsUpdateInput, follow_up_commentsUncheckedUpdateInput>
    /**
     * Choose, which follow_up_comments to update.
     */
    where: follow_up_commentsWhereUniqueInput
  }

  /**
   * follow_up_comments updateMany
   */
  export type follow_up_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update follow_up_comments.
     */
    data: XOR<follow_up_commentsUpdateManyMutationInput, follow_up_commentsUncheckedUpdateManyInput>
    /**
     * Filter which follow_up_comments to update
     */
    where?: follow_up_commentsWhereInput
    /**
     * Limit how many follow_up_comments to update.
     */
    limit?: number
  }

  /**
   * follow_up_comments updateManyAndReturn
   */
  export type follow_up_commentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * The data used to update follow_up_comments.
     */
    data: XOR<follow_up_commentsUpdateManyMutationInput, follow_up_commentsUncheckedUpdateManyInput>
    /**
     * Filter which follow_up_comments to update
     */
    where?: follow_up_commentsWhereInput
    /**
     * Limit how many follow_up_comments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * follow_up_comments upsert
   */
  export type follow_up_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * The filter to search for the follow_up_comments to update in case it exists.
     */
    where: follow_up_commentsWhereUniqueInput
    /**
     * In case the follow_up_comments found by the `where` argument doesn't exist, create a new follow_up_comments with this data.
     */
    create: XOR<follow_up_commentsCreateInput, follow_up_commentsUncheckedCreateInput>
    /**
     * In case the follow_up_comments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<follow_up_commentsUpdateInput, follow_up_commentsUncheckedUpdateInput>
  }

  /**
   * follow_up_comments delete
   */
  export type follow_up_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    /**
     * Filter which follow_up_comments to delete.
     */
    where: follow_up_commentsWhereUniqueInput
  }

  /**
   * follow_up_comments deleteMany
   */
  export type follow_up_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which follow_up_comments to delete
     */
    where?: follow_up_commentsWhereInput
    /**
     * Limit how many follow_up_comments to delete.
     */
    limit?: number
  }

  /**
   * follow_up_comments.users
   */
  export type follow_up_comments$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * follow_up_comments without action
   */
  export type follow_up_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
  }


  /**
   * Model follow_ups
   */

  export type AggregateFollow_ups = {
    _count: Follow_upsCountAggregateOutputType | null
    _avg: Follow_upsAvgAggregateOutputType | null
    _sum: Follow_upsSumAggregateOutputType | null
    _min: Follow_upsMinAggregateOutputType | null
    _max: Follow_upsMaxAggregateOutputType | null
  }

  export type Follow_upsAvgAggregateOutputType = {
    id: number | null
    lead_id: number | null
    assigned_to: number | null
    created_by: number | null
    tenant_id: number | null
  }

  export type Follow_upsSumAggregateOutputType = {
    id: number | null
    lead_id: number | null
    assigned_to: number | null
    created_by: number | null
    tenant_id: number | null
  }

  export type Follow_upsMinAggregateOutputType = {
    id: number | null
    lead_id: number | null
    follow_up_date: Date | null
    comments: string | null
    status: string | null
    assigned_to: number | null
    created_by: number | null
    is_completed: boolean | null
    completed_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    type: string | null
    next_follow_up_date: Date | null
    tenant_id: number | null
  }

  export type Follow_upsMaxAggregateOutputType = {
    id: number | null
    lead_id: number | null
    follow_up_date: Date | null
    comments: string | null
    status: string | null
    assigned_to: number | null
    created_by: number | null
    is_completed: boolean | null
    completed_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    type: string | null
    next_follow_up_date: Date | null
    tenant_id: number | null
  }

  export type Follow_upsCountAggregateOutputType = {
    id: number
    lead_id: number
    follow_up_date: number
    comments: number
    status: number
    assigned_to: number
    created_by: number
    is_completed: number
    completed_at: number
    created_at: number
    updated_at: number
    type: number
    next_follow_up_date: number
    tenant_id: number
    _all: number
  }


  export type Follow_upsAvgAggregateInputType = {
    id?: true
    lead_id?: true
    assigned_to?: true
    created_by?: true
    tenant_id?: true
  }

  export type Follow_upsSumAggregateInputType = {
    id?: true
    lead_id?: true
    assigned_to?: true
    created_by?: true
    tenant_id?: true
  }

  export type Follow_upsMinAggregateInputType = {
    id?: true
    lead_id?: true
    follow_up_date?: true
    comments?: true
    status?: true
    assigned_to?: true
    created_by?: true
    is_completed?: true
    completed_at?: true
    created_at?: true
    updated_at?: true
    type?: true
    next_follow_up_date?: true
    tenant_id?: true
  }

  export type Follow_upsMaxAggregateInputType = {
    id?: true
    lead_id?: true
    follow_up_date?: true
    comments?: true
    status?: true
    assigned_to?: true
    created_by?: true
    is_completed?: true
    completed_at?: true
    created_at?: true
    updated_at?: true
    type?: true
    next_follow_up_date?: true
    tenant_id?: true
  }

  export type Follow_upsCountAggregateInputType = {
    id?: true
    lead_id?: true
    follow_up_date?: true
    comments?: true
    status?: true
    assigned_to?: true
    created_by?: true
    is_completed?: true
    completed_at?: true
    created_at?: true
    updated_at?: true
    type?: true
    next_follow_up_date?: true
    tenant_id?: true
    _all?: true
  }

  export type Follow_upsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which follow_ups to aggregate.
     */
    where?: follow_upsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follow_ups to fetch.
     */
    orderBy?: follow_upsOrderByWithRelationInput | follow_upsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: follow_upsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follow_ups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follow_ups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned follow_ups
    **/
    _count?: true | Follow_upsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Follow_upsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Follow_upsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Follow_upsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Follow_upsMaxAggregateInputType
  }

  export type GetFollow_upsAggregateType<T extends Follow_upsAggregateArgs> = {
        [P in keyof T & keyof AggregateFollow_ups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFollow_ups[P]>
      : GetScalarType<T[P], AggregateFollow_ups[P]>
  }




  export type follow_upsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: follow_upsWhereInput
    orderBy?: follow_upsOrderByWithAggregationInput | follow_upsOrderByWithAggregationInput[]
    by: Follow_upsScalarFieldEnum[] | Follow_upsScalarFieldEnum
    having?: follow_upsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Follow_upsCountAggregateInputType | true
    _avg?: Follow_upsAvgAggregateInputType
    _sum?: Follow_upsSumAggregateInputType
    _min?: Follow_upsMinAggregateInputType
    _max?: Follow_upsMaxAggregateInputType
  }

  export type Follow_upsGroupByOutputType = {
    id: number
    lead_id: number
    follow_up_date: Date
    comments: string | null
    status: string
    assigned_to: number | null
    created_by: number | null
    is_completed: boolean | null
    completed_at: Date | null
    created_at: Date
    updated_at: Date
    type: string
    next_follow_up_date: Date | null
    tenant_id: number | null
    _count: Follow_upsCountAggregateOutputType | null
    _avg: Follow_upsAvgAggregateOutputType | null
    _sum: Follow_upsSumAggregateOutputType | null
    _min: Follow_upsMinAggregateOutputType | null
    _max: Follow_upsMaxAggregateOutputType | null
  }

  type GetFollow_upsGroupByPayload<T extends follow_upsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Follow_upsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Follow_upsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Follow_upsGroupByOutputType[P]>
            : GetScalarType<T[P], Follow_upsGroupByOutputType[P]>
        }
      >
    >


  export type follow_upsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lead_id?: boolean
    follow_up_date?: boolean
    comments?: boolean
    status?: boolean
    assigned_to?: boolean
    created_by?: boolean
    is_completed?: boolean
    completed_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    type?: boolean
    next_follow_up_date?: boolean
    tenant_id?: boolean
    follow_up_comments?: boolean | follow_ups$follow_up_commentsArgs<ExtArgs>
    users_follow_ups_assigned_toTousers?: boolean | follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs>
    users_follow_ups_created_byTousers?: boolean | follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs>
    leads?: boolean | leadsDefaultArgs<ExtArgs>
    tenants?: boolean | follow_ups$tenantsArgs<ExtArgs>
    _count?: boolean | Follow_upsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["follow_ups"]>

  export type follow_upsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lead_id?: boolean
    follow_up_date?: boolean
    comments?: boolean
    status?: boolean
    assigned_to?: boolean
    created_by?: boolean
    is_completed?: boolean
    completed_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    type?: boolean
    next_follow_up_date?: boolean
    tenant_id?: boolean
    users_follow_ups_assigned_toTousers?: boolean | follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs>
    users_follow_ups_created_byTousers?: boolean | follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs>
    leads?: boolean | leadsDefaultArgs<ExtArgs>
    tenants?: boolean | follow_ups$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["follow_ups"]>

  export type follow_upsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    lead_id?: boolean
    follow_up_date?: boolean
    comments?: boolean
    status?: boolean
    assigned_to?: boolean
    created_by?: boolean
    is_completed?: boolean
    completed_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    type?: boolean
    next_follow_up_date?: boolean
    tenant_id?: boolean
    users_follow_ups_assigned_toTousers?: boolean | follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs>
    users_follow_ups_created_byTousers?: boolean | follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs>
    leads?: boolean | leadsDefaultArgs<ExtArgs>
    tenants?: boolean | follow_ups$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["follow_ups"]>

  export type follow_upsSelectScalar = {
    id?: boolean
    lead_id?: boolean
    follow_up_date?: boolean
    comments?: boolean
    status?: boolean
    assigned_to?: boolean
    created_by?: boolean
    is_completed?: boolean
    completed_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    type?: boolean
    next_follow_up_date?: boolean
    tenant_id?: boolean
  }

  export type follow_upsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "lead_id" | "follow_up_date" | "comments" | "status" | "assigned_to" | "created_by" | "is_completed" | "completed_at" | "created_at" | "updated_at" | "type" | "next_follow_up_date" | "tenant_id", ExtArgs["result"]["follow_ups"]>
  export type follow_upsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follow_up_comments?: boolean | follow_ups$follow_up_commentsArgs<ExtArgs>
    users_follow_ups_assigned_toTousers?: boolean | follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs>
    users_follow_ups_created_byTousers?: boolean | follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs>
    leads?: boolean | leadsDefaultArgs<ExtArgs>
    tenants?: boolean | follow_ups$tenantsArgs<ExtArgs>
    _count?: boolean | Follow_upsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type follow_upsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_follow_ups_assigned_toTousers?: boolean | follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs>
    users_follow_ups_created_byTousers?: boolean | follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs>
    leads?: boolean | leadsDefaultArgs<ExtArgs>
    tenants?: boolean | follow_ups$tenantsArgs<ExtArgs>
  }
  export type follow_upsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_follow_ups_assigned_toTousers?: boolean | follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs>
    users_follow_ups_created_byTousers?: boolean | follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs>
    leads?: boolean | leadsDefaultArgs<ExtArgs>
    tenants?: boolean | follow_ups$tenantsArgs<ExtArgs>
  }

  export type $follow_upsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "follow_ups"
    objects: {
      follow_up_comments: Prisma.$follow_up_commentsPayload<ExtArgs>[]
      users_follow_ups_assigned_toTousers: Prisma.$usersPayload<ExtArgs> | null
      users_follow_ups_created_byTousers: Prisma.$usersPayload<ExtArgs> | null
      leads: Prisma.$leadsPayload<ExtArgs>
      tenants: Prisma.$tenantsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      lead_id: number
      follow_up_date: Date
      comments: string | null
      status: string
      assigned_to: number | null
      created_by: number | null
      is_completed: boolean | null
      completed_at: Date | null
      created_at: Date
      updated_at: Date
      type: string
      next_follow_up_date: Date | null
      tenant_id: number | null
    }, ExtArgs["result"]["follow_ups"]>
    composites: {}
  }

  type follow_upsGetPayload<S extends boolean | null | undefined | follow_upsDefaultArgs> = $Result.GetResult<Prisma.$follow_upsPayload, S>

  type follow_upsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<follow_upsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Follow_upsCountAggregateInputType | true
    }

  export interface follow_upsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['follow_ups'], meta: { name: 'follow_ups' } }
    /**
     * Find zero or one Follow_ups that matches the filter.
     * @param {follow_upsFindUniqueArgs} args - Arguments to find a Follow_ups
     * @example
     * // Get one Follow_ups
     * const follow_ups = await prisma.follow_ups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends follow_upsFindUniqueArgs>(args: SelectSubset<T, follow_upsFindUniqueArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Follow_ups that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {follow_upsFindUniqueOrThrowArgs} args - Arguments to find a Follow_ups
     * @example
     * // Get one Follow_ups
     * const follow_ups = await prisma.follow_ups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends follow_upsFindUniqueOrThrowArgs>(args: SelectSubset<T, follow_upsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Follow_ups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_upsFindFirstArgs} args - Arguments to find a Follow_ups
     * @example
     * // Get one Follow_ups
     * const follow_ups = await prisma.follow_ups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends follow_upsFindFirstArgs>(args?: SelectSubset<T, follow_upsFindFirstArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Follow_ups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_upsFindFirstOrThrowArgs} args - Arguments to find a Follow_ups
     * @example
     * // Get one Follow_ups
     * const follow_ups = await prisma.follow_ups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends follow_upsFindFirstOrThrowArgs>(args?: SelectSubset<T, follow_upsFindFirstOrThrowArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Follow_ups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_upsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Follow_ups
     * const follow_ups = await prisma.follow_ups.findMany()
     * 
     * // Get first 10 Follow_ups
     * const follow_ups = await prisma.follow_ups.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const follow_upsWithIdOnly = await prisma.follow_ups.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends follow_upsFindManyArgs>(args?: SelectSubset<T, follow_upsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Follow_ups.
     * @param {follow_upsCreateArgs} args - Arguments to create a Follow_ups.
     * @example
     * // Create one Follow_ups
     * const Follow_ups = await prisma.follow_ups.create({
     *   data: {
     *     // ... data to create a Follow_ups
     *   }
     * })
     * 
     */
    create<T extends follow_upsCreateArgs>(args: SelectSubset<T, follow_upsCreateArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Follow_ups.
     * @param {follow_upsCreateManyArgs} args - Arguments to create many Follow_ups.
     * @example
     * // Create many Follow_ups
     * const follow_ups = await prisma.follow_ups.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends follow_upsCreateManyArgs>(args?: SelectSubset<T, follow_upsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Follow_ups and returns the data saved in the database.
     * @param {follow_upsCreateManyAndReturnArgs} args - Arguments to create many Follow_ups.
     * @example
     * // Create many Follow_ups
     * const follow_ups = await prisma.follow_ups.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Follow_ups and only return the `id`
     * const follow_upsWithIdOnly = await prisma.follow_ups.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends follow_upsCreateManyAndReturnArgs>(args?: SelectSubset<T, follow_upsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Follow_ups.
     * @param {follow_upsDeleteArgs} args - Arguments to delete one Follow_ups.
     * @example
     * // Delete one Follow_ups
     * const Follow_ups = await prisma.follow_ups.delete({
     *   where: {
     *     // ... filter to delete one Follow_ups
     *   }
     * })
     * 
     */
    delete<T extends follow_upsDeleteArgs>(args: SelectSubset<T, follow_upsDeleteArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Follow_ups.
     * @param {follow_upsUpdateArgs} args - Arguments to update one Follow_ups.
     * @example
     * // Update one Follow_ups
     * const follow_ups = await prisma.follow_ups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends follow_upsUpdateArgs>(args: SelectSubset<T, follow_upsUpdateArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Follow_ups.
     * @param {follow_upsDeleteManyArgs} args - Arguments to filter Follow_ups to delete.
     * @example
     * // Delete a few Follow_ups
     * const { count } = await prisma.follow_ups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends follow_upsDeleteManyArgs>(args?: SelectSubset<T, follow_upsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Follow_ups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_upsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Follow_ups
     * const follow_ups = await prisma.follow_ups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends follow_upsUpdateManyArgs>(args: SelectSubset<T, follow_upsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Follow_ups and returns the data updated in the database.
     * @param {follow_upsUpdateManyAndReturnArgs} args - Arguments to update many Follow_ups.
     * @example
     * // Update many Follow_ups
     * const follow_ups = await prisma.follow_ups.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Follow_ups and only return the `id`
     * const follow_upsWithIdOnly = await prisma.follow_ups.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends follow_upsUpdateManyAndReturnArgs>(args: SelectSubset<T, follow_upsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Follow_ups.
     * @param {follow_upsUpsertArgs} args - Arguments to update or create a Follow_ups.
     * @example
     * // Update or create a Follow_ups
     * const follow_ups = await prisma.follow_ups.upsert({
     *   create: {
     *     // ... data to create a Follow_ups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Follow_ups we want to update
     *   }
     * })
     */
    upsert<T extends follow_upsUpsertArgs>(args: SelectSubset<T, follow_upsUpsertArgs<ExtArgs>>): Prisma__follow_upsClient<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Follow_ups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_upsCountArgs} args - Arguments to filter Follow_ups to count.
     * @example
     * // Count the number of Follow_ups
     * const count = await prisma.follow_ups.count({
     *   where: {
     *     // ... the filter for the Follow_ups we want to count
     *   }
     * })
    **/
    count<T extends follow_upsCountArgs>(
      args?: Subset<T, follow_upsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Follow_upsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Follow_ups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Follow_upsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Follow_upsAggregateArgs>(args: Subset<T, Follow_upsAggregateArgs>): Prisma.PrismaPromise<GetFollow_upsAggregateType<T>>

    /**
     * Group by Follow_ups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {follow_upsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends follow_upsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: follow_upsGroupByArgs['orderBy'] }
        : { orderBy?: follow_upsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, follow_upsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFollow_upsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the follow_ups model
   */
  readonly fields: follow_upsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for follow_ups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__follow_upsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    follow_up_comments<T extends follow_ups$follow_up_commentsArgs<ExtArgs> = {}>(args?: Subset<T, follow_ups$follow_up_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users_follow_ups_assigned_toTousers<T extends follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs> = {}>(args?: Subset<T, follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users_follow_ups_created_byTousers<T extends follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    leads<T extends leadsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, leadsDefaultArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tenants<T extends follow_ups$tenantsArgs<ExtArgs> = {}>(args?: Subset<T, follow_ups$tenantsArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the follow_ups model
   */
  interface follow_upsFieldRefs {
    readonly id: FieldRef<"follow_ups", 'Int'>
    readonly lead_id: FieldRef<"follow_ups", 'Int'>
    readonly follow_up_date: FieldRef<"follow_ups", 'DateTime'>
    readonly comments: FieldRef<"follow_ups", 'String'>
    readonly status: FieldRef<"follow_ups", 'String'>
    readonly assigned_to: FieldRef<"follow_ups", 'Int'>
    readonly created_by: FieldRef<"follow_ups", 'Int'>
    readonly is_completed: FieldRef<"follow_ups", 'Boolean'>
    readonly completed_at: FieldRef<"follow_ups", 'DateTime'>
    readonly created_at: FieldRef<"follow_ups", 'DateTime'>
    readonly updated_at: FieldRef<"follow_ups", 'DateTime'>
    readonly type: FieldRef<"follow_ups", 'String'>
    readonly next_follow_up_date: FieldRef<"follow_ups", 'DateTime'>
    readonly tenant_id: FieldRef<"follow_ups", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * follow_ups findUnique
   */
  export type follow_upsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * Filter, which follow_ups to fetch.
     */
    where: follow_upsWhereUniqueInput
  }

  /**
   * follow_ups findUniqueOrThrow
   */
  export type follow_upsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * Filter, which follow_ups to fetch.
     */
    where: follow_upsWhereUniqueInput
  }

  /**
   * follow_ups findFirst
   */
  export type follow_upsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * Filter, which follow_ups to fetch.
     */
    where?: follow_upsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follow_ups to fetch.
     */
    orderBy?: follow_upsOrderByWithRelationInput | follow_upsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for follow_ups.
     */
    cursor?: follow_upsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follow_ups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follow_ups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of follow_ups.
     */
    distinct?: Follow_upsScalarFieldEnum | Follow_upsScalarFieldEnum[]
  }

  /**
   * follow_ups findFirstOrThrow
   */
  export type follow_upsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * Filter, which follow_ups to fetch.
     */
    where?: follow_upsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follow_ups to fetch.
     */
    orderBy?: follow_upsOrderByWithRelationInput | follow_upsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for follow_ups.
     */
    cursor?: follow_upsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follow_ups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follow_ups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of follow_ups.
     */
    distinct?: Follow_upsScalarFieldEnum | Follow_upsScalarFieldEnum[]
  }

  /**
   * follow_ups findMany
   */
  export type follow_upsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * Filter, which follow_ups to fetch.
     */
    where?: follow_upsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of follow_ups to fetch.
     */
    orderBy?: follow_upsOrderByWithRelationInput | follow_upsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing follow_ups.
     */
    cursor?: follow_upsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` follow_ups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` follow_ups.
     */
    skip?: number
    distinct?: Follow_upsScalarFieldEnum | Follow_upsScalarFieldEnum[]
  }

  /**
   * follow_ups create
   */
  export type follow_upsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * The data needed to create a follow_ups.
     */
    data: XOR<follow_upsCreateInput, follow_upsUncheckedCreateInput>
  }

  /**
   * follow_ups createMany
   */
  export type follow_upsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many follow_ups.
     */
    data: follow_upsCreateManyInput | follow_upsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * follow_ups createManyAndReturn
   */
  export type follow_upsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * The data used to create many follow_ups.
     */
    data: follow_upsCreateManyInput | follow_upsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * follow_ups update
   */
  export type follow_upsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * The data needed to update a follow_ups.
     */
    data: XOR<follow_upsUpdateInput, follow_upsUncheckedUpdateInput>
    /**
     * Choose, which follow_ups to update.
     */
    where: follow_upsWhereUniqueInput
  }

  /**
   * follow_ups updateMany
   */
  export type follow_upsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update follow_ups.
     */
    data: XOR<follow_upsUpdateManyMutationInput, follow_upsUncheckedUpdateManyInput>
    /**
     * Filter which follow_ups to update
     */
    where?: follow_upsWhereInput
    /**
     * Limit how many follow_ups to update.
     */
    limit?: number
  }

  /**
   * follow_ups updateManyAndReturn
   */
  export type follow_upsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * The data used to update follow_ups.
     */
    data: XOR<follow_upsUpdateManyMutationInput, follow_upsUncheckedUpdateManyInput>
    /**
     * Filter which follow_ups to update
     */
    where?: follow_upsWhereInput
    /**
     * Limit how many follow_ups to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * follow_ups upsert
   */
  export type follow_upsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * The filter to search for the follow_ups to update in case it exists.
     */
    where: follow_upsWhereUniqueInput
    /**
     * In case the follow_ups found by the `where` argument doesn't exist, create a new follow_ups with this data.
     */
    create: XOR<follow_upsCreateInput, follow_upsUncheckedCreateInput>
    /**
     * In case the follow_ups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<follow_upsUpdateInput, follow_upsUncheckedUpdateInput>
  }

  /**
   * follow_ups delete
   */
  export type follow_upsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    /**
     * Filter which follow_ups to delete.
     */
    where: follow_upsWhereUniqueInput
  }

  /**
   * follow_ups deleteMany
   */
  export type follow_upsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which follow_ups to delete
     */
    where?: follow_upsWhereInput
    /**
     * Limit how many follow_ups to delete.
     */
    limit?: number
  }

  /**
   * follow_ups.follow_up_comments
   */
  export type follow_ups$follow_up_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    where?: follow_up_commentsWhereInput
    orderBy?: follow_up_commentsOrderByWithRelationInput | follow_up_commentsOrderByWithRelationInput[]
    cursor?: follow_up_commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Follow_up_commentsScalarFieldEnum | Follow_up_commentsScalarFieldEnum[]
  }

  /**
   * follow_ups.users_follow_ups_assigned_toTousers
   */
  export type follow_ups$users_follow_ups_assigned_toTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * follow_ups.users_follow_ups_created_byTousers
   */
  export type follow_ups$users_follow_ups_created_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * follow_ups.tenants
   */
  export type follow_ups$tenantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    where?: tenantsWhereInput
  }

  /**
   * follow_ups without action
   */
  export type follow_upsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
  }


  /**
   * Model leads
   */

  export type AggregateLeads = {
    _count: LeadsCountAggregateOutputType | null
    _avg: LeadsAvgAggregateOutputType | null
    _sum: LeadsSumAggregateOutputType | null
    _min: LeadsMinAggregateOutputType | null
    _max: LeadsMaxAggregateOutputType | null
  }

  export type LeadsAvgAggregateOutputType = {
    id: number | null
    assigned_to: number | null
    tenant_id: number | null
  }

  export type LeadsSumAggregateOutputType = {
    id: number | null
    assigned_to: number | null
    tenant_id: number | null
  }

  export type LeadsMinAggregateOutputType = {
    id: number | null
    name: string | null
    phone: string | null
    email: string | null
    source: string | null
    status: $Enums.lead_status | null
    notes: string | null
    assigned_to: number | null
    created_at: Date | null
    updated_at: Date | null
    course: string | null
    tenant_id: number | null
  }

  export type LeadsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    phone: string | null
    email: string | null
    source: string | null
    status: $Enums.lead_status | null
    notes: string | null
    assigned_to: number | null
    created_at: Date | null
    updated_at: Date | null
    course: string | null
    tenant_id: number | null
  }

  export type LeadsCountAggregateOutputType = {
    id: number
    name: number
    phone: number
    email: number
    source: number
    status: number
    notes: number
    assigned_to: number
    created_at: number
    updated_at: number
    course: number
    tenant_id: number
    _all: number
  }


  export type LeadsAvgAggregateInputType = {
    id?: true
    assigned_to?: true
    tenant_id?: true
  }

  export type LeadsSumAggregateInputType = {
    id?: true
    assigned_to?: true
    tenant_id?: true
  }

  export type LeadsMinAggregateInputType = {
    id?: true
    name?: true
    phone?: true
    email?: true
    source?: true
    status?: true
    notes?: true
    assigned_to?: true
    created_at?: true
    updated_at?: true
    course?: true
    tenant_id?: true
  }

  export type LeadsMaxAggregateInputType = {
    id?: true
    name?: true
    phone?: true
    email?: true
    source?: true
    status?: true
    notes?: true
    assigned_to?: true
    created_at?: true
    updated_at?: true
    course?: true
    tenant_id?: true
  }

  export type LeadsCountAggregateInputType = {
    id?: true
    name?: true
    phone?: true
    email?: true
    source?: true
    status?: true
    notes?: true
    assigned_to?: true
    created_at?: true
    updated_at?: true
    course?: true
    tenant_id?: true
    _all?: true
  }

  export type LeadsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leads to aggregate.
     */
    where?: leadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leads to fetch.
     */
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: leadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned leads
    **/
    _count?: true | LeadsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LeadsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LeadsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeadsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeadsMaxAggregateInputType
  }

  export type GetLeadsAggregateType<T extends LeadsAggregateArgs> = {
        [P in keyof T & keyof AggregateLeads]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeads[P]>
      : GetScalarType<T[P], AggregateLeads[P]>
  }




  export type leadsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: leadsWhereInput
    orderBy?: leadsOrderByWithAggregationInput | leadsOrderByWithAggregationInput[]
    by: LeadsScalarFieldEnum[] | LeadsScalarFieldEnum
    having?: leadsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeadsCountAggregateInputType | true
    _avg?: LeadsAvgAggregateInputType
    _sum?: LeadsSumAggregateInputType
    _min?: LeadsMinAggregateInputType
    _max?: LeadsMaxAggregateInputType
  }

  export type LeadsGroupByOutputType = {
    id: number
    name: string
    phone: string
    email: string | null
    source: string
    status: $Enums.lead_status
    notes: string | null
    assigned_to: number | null
    created_at: Date | null
    updated_at: Date | null
    course: string | null
    tenant_id: number | null
    _count: LeadsCountAggregateOutputType | null
    _avg: LeadsAvgAggregateOutputType | null
    _sum: LeadsSumAggregateOutputType | null
    _min: LeadsMinAggregateOutputType | null
    _max: LeadsMaxAggregateOutputType | null
  }

  type GetLeadsGroupByPayload<T extends leadsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeadsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeadsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeadsGroupByOutputType[P]>
            : GetScalarType<T[P], LeadsGroupByOutputType[P]>
        }
      >
    >


  export type leadsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    source?: boolean
    status?: boolean
    notes?: boolean
    assigned_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    course?: boolean
    tenant_id?: boolean
    follow_ups?: boolean | leads$follow_upsArgs<ExtArgs>
    tenants?: boolean | leads$tenantsArgs<ExtArgs>
    _count?: boolean | LeadsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["leads"]>

  export type leadsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    source?: boolean
    status?: boolean
    notes?: boolean
    assigned_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    course?: boolean
    tenant_id?: boolean
    tenants?: boolean | leads$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["leads"]>

  export type leadsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    source?: boolean
    status?: boolean
    notes?: boolean
    assigned_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    course?: boolean
    tenant_id?: boolean
    tenants?: boolean | leads$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["leads"]>

  export type leadsSelectScalar = {
    id?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    source?: boolean
    status?: boolean
    notes?: boolean
    assigned_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    course?: boolean
    tenant_id?: boolean
  }

  export type leadsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "phone" | "email" | "source" | "status" | "notes" | "assigned_to" | "created_at" | "updated_at" | "course" | "tenant_id", ExtArgs["result"]["leads"]>
  export type leadsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follow_ups?: boolean | leads$follow_upsArgs<ExtArgs>
    tenants?: boolean | leads$tenantsArgs<ExtArgs>
    _count?: boolean | LeadsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type leadsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | leads$tenantsArgs<ExtArgs>
  }
  export type leadsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | leads$tenantsArgs<ExtArgs>
  }

  export type $leadsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "leads"
    objects: {
      follow_ups: Prisma.$follow_upsPayload<ExtArgs>[]
      tenants: Prisma.$tenantsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      phone: string
      email: string | null
      source: string
      status: $Enums.lead_status
      notes: string | null
      assigned_to: number | null
      created_at: Date | null
      updated_at: Date | null
      course: string | null
      tenant_id: number | null
    }, ExtArgs["result"]["leads"]>
    composites: {}
  }

  type leadsGetPayload<S extends boolean | null | undefined | leadsDefaultArgs> = $Result.GetResult<Prisma.$leadsPayload, S>

  type leadsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<leadsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LeadsCountAggregateInputType | true
    }

  export interface leadsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['leads'], meta: { name: 'leads' } }
    /**
     * Find zero or one Leads that matches the filter.
     * @param {leadsFindUniqueArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends leadsFindUniqueArgs>(args: SelectSubset<T, leadsFindUniqueArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Leads that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {leadsFindUniqueOrThrowArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends leadsFindUniqueOrThrowArgs>(args: SelectSubset<T, leadsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsFindFirstArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends leadsFindFirstArgs>(args?: SelectSubset<T, leadsFindFirstArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Leads that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsFindFirstOrThrowArgs} args - Arguments to find a Leads
     * @example
     * // Get one Leads
     * const leads = await prisma.leads.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends leadsFindFirstOrThrowArgs>(args?: SelectSubset<T, leadsFindFirstOrThrowArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Leads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Leads
     * const leads = await prisma.leads.findMany()
     * 
     * // Get first 10 Leads
     * const leads = await prisma.leads.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leadsWithIdOnly = await prisma.leads.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends leadsFindManyArgs>(args?: SelectSubset<T, leadsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Leads.
     * @param {leadsCreateArgs} args - Arguments to create a Leads.
     * @example
     * // Create one Leads
     * const Leads = await prisma.leads.create({
     *   data: {
     *     // ... data to create a Leads
     *   }
     * })
     * 
     */
    create<T extends leadsCreateArgs>(args: SelectSubset<T, leadsCreateArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Leads.
     * @param {leadsCreateManyArgs} args - Arguments to create many Leads.
     * @example
     * // Create many Leads
     * const leads = await prisma.leads.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends leadsCreateManyArgs>(args?: SelectSubset<T, leadsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Leads and returns the data saved in the database.
     * @param {leadsCreateManyAndReturnArgs} args - Arguments to create many Leads.
     * @example
     * // Create many Leads
     * const leads = await prisma.leads.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Leads and only return the `id`
     * const leadsWithIdOnly = await prisma.leads.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends leadsCreateManyAndReturnArgs>(args?: SelectSubset<T, leadsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Leads.
     * @param {leadsDeleteArgs} args - Arguments to delete one Leads.
     * @example
     * // Delete one Leads
     * const Leads = await prisma.leads.delete({
     *   where: {
     *     // ... filter to delete one Leads
     *   }
     * })
     * 
     */
    delete<T extends leadsDeleteArgs>(args: SelectSubset<T, leadsDeleteArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Leads.
     * @param {leadsUpdateArgs} args - Arguments to update one Leads.
     * @example
     * // Update one Leads
     * const leads = await prisma.leads.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends leadsUpdateArgs>(args: SelectSubset<T, leadsUpdateArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Leads.
     * @param {leadsDeleteManyArgs} args - Arguments to filter Leads to delete.
     * @example
     * // Delete a few Leads
     * const { count } = await prisma.leads.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends leadsDeleteManyArgs>(args?: SelectSubset<T, leadsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Leads
     * const leads = await prisma.leads.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends leadsUpdateManyArgs>(args: SelectSubset<T, leadsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Leads and returns the data updated in the database.
     * @param {leadsUpdateManyAndReturnArgs} args - Arguments to update many Leads.
     * @example
     * // Update many Leads
     * const leads = await prisma.leads.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Leads and only return the `id`
     * const leadsWithIdOnly = await prisma.leads.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends leadsUpdateManyAndReturnArgs>(args: SelectSubset<T, leadsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Leads.
     * @param {leadsUpsertArgs} args - Arguments to update or create a Leads.
     * @example
     * // Update or create a Leads
     * const leads = await prisma.leads.upsert({
     *   create: {
     *     // ... data to create a Leads
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Leads we want to update
     *   }
     * })
     */
    upsert<T extends leadsUpsertArgs>(args: SelectSubset<T, leadsUpsertArgs<ExtArgs>>): Prisma__leadsClient<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsCountArgs} args - Arguments to filter Leads to count.
     * @example
     * // Count the number of Leads
     * const count = await prisma.leads.count({
     *   where: {
     *     // ... the filter for the Leads we want to count
     *   }
     * })
    **/
    count<T extends leadsCountArgs>(
      args?: Subset<T, leadsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeadsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeadsAggregateArgs>(args: Subset<T, LeadsAggregateArgs>): Prisma.PrismaPromise<GetLeadsAggregateType<T>>

    /**
     * Group by Leads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {leadsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends leadsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: leadsGroupByArgs['orderBy'] }
        : { orderBy?: leadsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, leadsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the leads model
   */
  readonly fields: leadsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for leads.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__leadsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    follow_ups<T extends leads$follow_upsArgs<ExtArgs> = {}>(args?: Subset<T, leads$follow_upsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tenants<T extends leads$tenantsArgs<ExtArgs> = {}>(args?: Subset<T, leads$tenantsArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the leads model
   */
  interface leadsFieldRefs {
    readonly id: FieldRef<"leads", 'Int'>
    readonly name: FieldRef<"leads", 'String'>
    readonly phone: FieldRef<"leads", 'String'>
    readonly email: FieldRef<"leads", 'String'>
    readonly source: FieldRef<"leads", 'String'>
    readonly status: FieldRef<"leads", 'lead_status'>
    readonly notes: FieldRef<"leads", 'String'>
    readonly assigned_to: FieldRef<"leads", 'Int'>
    readonly created_at: FieldRef<"leads", 'DateTime'>
    readonly updated_at: FieldRef<"leads", 'DateTime'>
    readonly course: FieldRef<"leads", 'String'>
    readonly tenant_id: FieldRef<"leads", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * leads findUnique
   */
  export type leadsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where: leadsWhereUniqueInput
  }

  /**
   * leads findUniqueOrThrow
   */
  export type leadsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where: leadsWhereUniqueInput
  }

  /**
   * leads findFirst
   */
  export type leadsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where?: leadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leads to fetch.
     */
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leads.
     */
    cursor?: leadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leads.
     */
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }

  /**
   * leads findFirstOrThrow
   */
  export type leadsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where?: leadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leads to fetch.
     */
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for leads.
     */
    cursor?: leadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of leads.
     */
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }

  /**
   * leads findMany
   */
  export type leadsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter, which leads to fetch.
     */
    where?: leadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of leads to fetch.
     */
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing leads.
     */
    cursor?: leadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` leads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` leads.
     */
    skip?: number
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }

  /**
   * leads create
   */
  export type leadsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * The data needed to create a leads.
     */
    data: XOR<leadsCreateInput, leadsUncheckedCreateInput>
  }

  /**
   * leads createMany
   */
  export type leadsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many leads.
     */
    data: leadsCreateManyInput | leadsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * leads createManyAndReturn
   */
  export type leadsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * The data used to create many leads.
     */
    data: leadsCreateManyInput | leadsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * leads update
   */
  export type leadsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * The data needed to update a leads.
     */
    data: XOR<leadsUpdateInput, leadsUncheckedUpdateInput>
    /**
     * Choose, which leads to update.
     */
    where: leadsWhereUniqueInput
  }

  /**
   * leads updateMany
   */
  export type leadsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update leads.
     */
    data: XOR<leadsUpdateManyMutationInput, leadsUncheckedUpdateManyInput>
    /**
     * Filter which leads to update
     */
    where?: leadsWhereInput
    /**
     * Limit how many leads to update.
     */
    limit?: number
  }

  /**
   * leads updateManyAndReturn
   */
  export type leadsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * The data used to update leads.
     */
    data: XOR<leadsUpdateManyMutationInput, leadsUncheckedUpdateManyInput>
    /**
     * Filter which leads to update
     */
    where?: leadsWhereInput
    /**
     * Limit how many leads to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * leads upsert
   */
  export type leadsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * The filter to search for the leads to update in case it exists.
     */
    where: leadsWhereUniqueInput
    /**
     * In case the leads found by the `where` argument doesn't exist, create a new leads with this data.
     */
    create: XOR<leadsCreateInput, leadsUncheckedCreateInput>
    /**
     * In case the leads was found with the provided `where` argument, update it with this data.
     */
    update: XOR<leadsUpdateInput, leadsUncheckedUpdateInput>
  }

  /**
   * leads delete
   */
  export type leadsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    /**
     * Filter which leads to delete.
     */
    where: leadsWhereUniqueInput
  }

  /**
   * leads deleteMany
   */
  export type leadsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which leads to delete
     */
    where?: leadsWhereInput
    /**
     * Limit how many leads to delete.
     */
    limit?: number
  }

  /**
   * leads.follow_ups
   */
  export type leads$follow_upsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    where?: follow_upsWhereInput
    orderBy?: follow_upsOrderByWithRelationInput | follow_upsOrderByWithRelationInput[]
    cursor?: follow_upsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Follow_upsScalarFieldEnum | Follow_upsScalarFieldEnum[]
  }

  /**
   * leads.tenants
   */
  export type leads$tenantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    where?: tenantsWhereInput
  }

  /**
   * leads without action
   */
  export type leadsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
  }


  /**
   * Model lesson_plans
   */

  export type AggregateLesson_plans = {
    _count: Lesson_plansCountAggregateOutputType | null
    _avg: Lesson_plansAvgAggregateOutputType | null
    _sum: Lesson_plansSumAggregateOutputType | null
    _min: Lesson_plansMinAggregateOutputType | null
    _max: Lesson_plansMaxAggregateOutputType | null
  }

  export type Lesson_plansAvgAggregateOutputType = {
    id: number | null
    course_id: number | null
    week_number: number | null
  }

  export type Lesson_plansSumAggregateOutputType = {
    id: number | null
    course_id: number | null
    week_number: number | null
  }

  export type Lesson_plansMinAggregateOutputType = {
    id: number | null
    course_id: number | null
    title: string | null
    content: string | null
    week_number: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Lesson_plansMaxAggregateOutputType = {
    id: number | null
    course_id: number | null
    title: string | null
    content: string | null
    week_number: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Lesson_plansCountAggregateOutputType = {
    id: number
    course_id: number
    title: number
    content: number
    week_number: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Lesson_plansAvgAggregateInputType = {
    id?: true
    course_id?: true
    week_number?: true
  }

  export type Lesson_plansSumAggregateInputType = {
    id?: true
    course_id?: true
    week_number?: true
  }

  export type Lesson_plansMinAggregateInputType = {
    id?: true
    course_id?: true
    title?: true
    content?: true
    week_number?: true
    created_at?: true
    updated_at?: true
  }

  export type Lesson_plansMaxAggregateInputType = {
    id?: true
    course_id?: true
    title?: true
    content?: true
    week_number?: true
    created_at?: true
    updated_at?: true
  }

  export type Lesson_plansCountAggregateInputType = {
    id?: true
    course_id?: true
    title?: true
    content?: true
    week_number?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Lesson_plansAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which lesson_plans to aggregate.
     */
    where?: lesson_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lesson_plans to fetch.
     */
    orderBy?: lesson_plansOrderByWithRelationInput | lesson_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: lesson_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lesson_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lesson_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned lesson_plans
    **/
    _count?: true | Lesson_plansCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Lesson_plansAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Lesson_plansSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Lesson_plansMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Lesson_plansMaxAggregateInputType
  }

  export type GetLesson_plansAggregateType<T extends Lesson_plansAggregateArgs> = {
        [P in keyof T & keyof AggregateLesson_plans]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLesson_plans[P]>
      : GetScalarType<T[P], AggregateLesson_plans[P]>
  }




  export type lesson_plansGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: lesson_plansWhereInput
    orderBy?: lesson_plansOrderByWithAggregationInput | lesson_plansOrderByWithAggregationInput[]
    by: Lesson_plansScalarFieldEnum[] | Lesson_plansScalarFieldEnum
    having?: lesson_plansScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Lesson_plansCountAggregateInputType | true
    _avg?: Lesson_plansAvgAggregateInputType
    _sum?: Lesson_plansSumAggregateInputType
    _min?: Lesson_plansMinAggregateInputType
    _max?: Lesson_plansMaxAggregateInputType
  }

  export type Lesson_plansGroupByOutputType = {
    id: number
    course_id: number
    title: string
    content: string
    week_number: number
    created_at: Date
    updated_at: Date
    _count: Lesson_plansCountAggregateOutputType | null
    _avg: Lesson_plansAvgAggregateOutputType | null
    _sum: Lesson_plansSumAggregateOutputType | null
    _min: Lesson_plansMinAggregateOutputType | null
    _max: Lesson_plansMaxAggregateOutputType | null
  }

  type GetLesson_plansGroupByPayload<T extends lesson_plansGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Lesson_plansGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Lesson_plansGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Lesson_plansGroupByOutputType[P]>
            : GetScalarType<T[P], Lesson_plansGroupByOutputType[P]>
        }
      >
    >


  export type lesson_plansSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    course_id?: boolean
    title?: boolean
    content?: boolean
    week_number?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["lesson_plans"]>

  export type lesson_plansSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    course_id?: boolean
    title?: boolean
    content?: boolean
    week_number?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["lesson_plans"]>

  export type lesson_plansSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    course_id?: boolean
    title?: boolean
    content?: boolean
    week_number?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["lesson_plans"]>

  export type lesson_plansSelectScalar = {
    id?: boolean
    course_id?: boolean
    title?: boolean
    content?: boolean
    week_number?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type lesson_plansOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "course_id" | "title" | "content" | "week_number" | "created_at" | "updated_at", ExtArgs["result"]["lesson_plans"]>

  export type $lesson_plansPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "lesson_plans"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      course_id: number
      title: string
      content: string
      week_number: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["lesson_plans"]>
    composites: {}
  }

  type lesson_plansGetPayload<S extends boolean | null | undefined | lesson_plansDefaultArgs> = $Result.GetResult<Prisma.$lesson_plansPayload, S>

  type lesson_plansCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<lesson_plansFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Lesson_plansCountAggregateInputType | true
    }

  export interface lesson_plansDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['lesson_plans'], meta: { name: 'lesson_plans' } }
    /**
     * Find zero or one Lesson_plans that matches the filter.
     * @param {lesson_plansFindUniqueArgs} args - Arguments to find a Lesson_plans
     * @example
     * // Get one Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends lesson_plansFindUniqueArgs>(args: SelectSubset<T, lesson_plansFindUniqueArgs<ExtArgs>>): Prisma__lesson_plansClient<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Lesson_plans that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {lesson_plansFindUniqueOrThrowArgs} args - Arguments to find a Lesson_plans
     * @example
     * // Get one Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends lesson_plansFindUniqueOrThrowArgs>(args: SelectSubset<T, lesson_plansFindUniqueOrThrowArgs<ExtArgs>>): Prisma__lesson_plansClient<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lesson_plans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lesson_plansFindFirstArgs} args - Arguments to find a Lesson_plans
     * @example
     * // Get one Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends lesson_plansFindFirstArgs>(args?: SelectSubset<T, lesson_plansFindFirstArgs<ExtArgs>>): Prisma__lesson_plansClient<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lesson_plans that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lesson_plansFindFirstOrThrowArgs} args - Arguments to find a Lesson_plans
     * @example
     * // Get one Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends lesson_plansFindFirstOrThrowArgs>(args?: SelectSubset<T, lesson_plansFindFirstOrThrowArgs<ExtArgs>>): Prisma__lesson_plansClient<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Lesson_plans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lesson_plansFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.findMany()
     * 
     * // Get first 10 Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const lesson_plansWithIdOnly = await prisma.lesson_plans.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends lesson_plansFindManyArgs>(args?: SelectSubset<T, lesson_plansFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Lesson_plans.
     * @param {lesson_plansCreateArgs} args - Arguments to create a Lesson_plans.
     * @example
     * // Create one Lesson_plans
     * const Lesson_plans = await prisma.lesson_plans.create({
     *   data: {
     *     // ... data to create a Lesson_plans
     *   }
     * })
     * 
     */
    create<T extends lesson_plansCreateArgs>(args: SelectSubset<T, lesson_plansCreateArgs<ExtArgs>>): Prisma__lesson_plansClient<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Lesson_plans.
     * @param {lesson_plansCreateManyArgs} args - Arguments to create many Lesson_plans.
     * @example
     * // Create many Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends lesson_plansCreateManyArgs>(args?: SelectSubset<T, lesson_plansCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Lesson_plans and returns the data saved in the database.
     * @param {lesson_plansCreateManyAndReturnArgs} args - Arguments to create many Lesson_plans.
     * @example
     * // Create many Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Lesson_plans and only return the `id`
     * const lesson_plansWithIdOnly = await prisma.lesson_plans.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends lesson_plansCreateManyAndReturnArgs>(args?: SelectSubset<T, lesson_plansCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Lesson_plans.
     * @param {lesson_plansDeleteArgs} args - Arguments to delete one Lesson_plans.
     * @example
     * // Delete one Lesson_plans
     * const Lesson_plans = await prisma.lesson_plans.delete({
     *   where: {
     *     // ... filter to delete one Lesson_plans
     *   }
     * })
     * 
     */
    delete<T extends lesson_plansDeleteArgs>(args: SelectSubset<T, lesson_plansDeleteArgs<ExtArgs>>): Prisma__lesson_plansClient<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Lesson_plans.
     * @param {lesson_plansUpdateArgs} args - Arguments to update one Lesson_plans.
     * @example
     * // Update one Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends lesson_plansUpdateArgs>(args: SelectSubset<T, lesson_plansUpdateArgs<ExtArgs>>): Prisma__lesson_plansClient<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Lesson_plans.
     * @param {lesson_plansDeleteManyArgs} args - Arguments to filter Lesson_plans to delete.
     * @example
     * // Delete a few Lesson_plans
     * const { count } = await prisma.lesson_plans.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends lesson_plansDeleteManyArgs>(args?: SelectSubset<T, lesson_plansDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lesson_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lesson_plansUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends lesson_plansUpdateManyArgs>(args: SelectSubset<T, lesson_plansUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lesson_plans and returns the data updated in the database.
     * @param {lesson_plansUpdateManyAndReturnArgs} args - Arguments to update many Lesson_plans.
     * @example
     * // Update many Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Lesson_plans and only return the `id`
     * const lesson_plansWithIdOnly = await prisma.lesson_plans.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends lesson_plansUpdateManyAndReturnArgs>(args: SelectSubset<T, lesson_plansUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Lesson_plans.
     * @param {lesson_plansUpsertArgs} args - Arguments to update or create a Lesson_plans.
     * @example
     * // Update or create a Lesson_plans
     * const lesson_plans = await prisma.lesson_plans.upsert({
     *   create: {
     *     // ... data to create a Lesson_plans
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lesson_plans we want to update
     *   }
     * })
     */
    upsert<T extends lesson_plansUpsertArgs>(args: SelectSubset<T, lesson_plansUpsertArgs<ExtArgs>>): Prisma__lesson_plansClient<$Result.GetResult<Prisma.$lesson_plansPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Lesson_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lesson_plansCountArgs} args - Arguments to filter Lesson_plans to count.
     * @example
     * // Count the number of Lesson_plans
     * const count = await prisma.lesson_plans.count({
     *   where: {
     *     // ... the filter for the Lesson_plans we want to count
     *   }
     * })
    **/
    count<T extends lesson_plansCountArgs>(
      args?: Subset<T, lesson_plansCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Lesson_plansCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lesson_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Lesson_plansAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Lesson_plansAggregateArgs>(args: Subset<T, Lesson_plansAggregateArgs>): Prisma.PrismaPromise<GetLesson_plansAggregateType<T>>

    /**
     * Group by Lesson_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lesson_plansGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends lesson_plansGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: lesson_plansGroupByArgs['orderBy'] }
        : { orderBy?: lesson_plansGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, lesson_plansGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLesson_plansGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the lesson_plans model
   */
  readonly fields: lesson_plansFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for lesson_plans.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__lesson_plansClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the lesson_plans model
   */
  interface lesson_plansFieldRefs {
    readonly id: FieldRef<"lesson_plans", 'Int'>
    readonly course_id: FieldRef<"lesson_plans", 'Int'>
    readonly title: FieldRef<"lesson_plans", 'String'>
    readonly content: FieldRef<"lesson_plans", 'String'>
    readonly week_number: FieldRef<"lesson_plans", 'Int'>
    readonly created_at: FieldRef<"lesson_plans", 'DateTime'>
    readonly updated_at: FieldRef<"lesson_plans", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * lesson_plans findUnique
   */
  export type lesson_plansFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * Filter, which lesson_plans to fetch.
     */
    where: lesson_plansWhereUniqueInput
  }

  /**
   * lesson_plans findUniqueOrThrow
   */
  export type lesson_plansFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * Filter, which lesson_plans to fetch.
     */
    where: lesson_plansWhereUniqueInput
  }

  /**
   * lesson_plans findFirst
   */
  export type lesson_plansFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * Filter, which lesson_plans to fetch.
     */
    where?: lesson_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lesson_plans to fetch.
     */
    orderBy?: lesson_plansOrderByWithRelationInput | lesson_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lesson_plans.
     */
    cursor?: lesson_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lesson_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lesson_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lesson_plans.
     */
    distinct?: Lesson_plansScalarFieldEnum | Lesson_plansScalarFieldEnum[]
  }

  /**
   * lesson_plans findFirstOrThrow
   */
  export type lesson_plansFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * Filter, which lesson_plans to fetch.
     */
    where?: lesson_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lesson_plans to fetch.
     */
    orderBy?: lesson_plansOrderByWithRelationInput | lesson_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lesson_plans.
     */
    cursor?: lesson_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lesson_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lesson_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lesson_plans.
     */
    distinct?: Lesson_plansScalarFieldEnum | Lesson_plansScalarFieldEnum[]
  }

  /**
   * lesson_plans findMany
   */
  export type lesson_plansFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * Filter, which lesson_plans to fetch.
     */
    where?: lesson_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lesson_plans to fetch.
     */
    orderBy?: lesson_plansOrderByWithRelationInput | lesson_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing lesson_plans.
     */
    cursor?: lesson_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lesson_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lesson_plans.
     */
    skip?: number
    distinct?: Lesson_plansScalarFieldEnum | Lesson_plansScalarFieldEnum[]
  }

  /**
   * lesson_plans create
   */
  export type lesson_plansCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * The data needed to create a lesson_plans.
     */
    data: XOR<lesson_plansCreateInput, lesson_plansUncheckedCreateInput>
  }

  /**
   * lesson_plans createMany
   */
  export type lesson_plansCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many lesson_plans.
     */
    data: lesson_plansCreateManyInput | lesson_plansCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * lesson_plans createManyAndReturn
   */
  export type lesson_plansCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * The data used to create many lesson_plans.
     */
    data: lesson_plansCreateManyInput | lesson_plansCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * lesson_plans update
   */
  export type lesson_plansUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * The data needed to update a lesson_plans.
     */
    data: XOR<lesson_plansUpdateInput, lesson_plansUncheckedUpdateInput>
    /**
     * Choose, which lesson_plans to update.
     */
    where: lesson_plansWhereUniqueInput
  }

  /**
   * lesson_plans updateMany
   */
  export type lesson_plansUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update lesson_plans.
     */
    data: XOR<lesson_plansUpdateManyMutationInput, lesson_plansUncheckedUpdateManyInput>
    /**
     * Filter which lesson_plans to update
     */
    where?: lesson_plansWhereInput
    /**
     * Limit how many lesson_plans to update.
     */
    limit?: number
  }

  /**
   * lesson_plans updateManyAndReturn
   */
  export type lesson_plansUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * The data used to update lesson_plans.
     */
    data: XOR<lesson_plansUpdateManyMutationInput, lesson_plansUncheckedUpdateManyInput>
    /**
     * Filter which lesson_plans to update
     */
    where?: lesson_plansWhereInput
    /**
     * Limit how many lesson_plans to update.
     */
    limit?: number
  }

  /**
   * lesson_plans upsert
   */
  export type lesson_plansUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * The filter to search for the lesson_plans to update in case it exists.
     */
    where: lesson_plansWhereUniqueInput
    /**
     * In case the lesson_plans found by the `where` argument doesn't exist, create a new lesson_plans with this data.
     */
    create: XOR<lesson_plansCreateInput, lesson_plansUncheckedCreateInput>
    /**
     * In case the lesson_plans was found with the provided `where` argument, update it with this data.
     */
    update: XOR<lesson_plansUpdateInput, lesson_plansUncheckedUpdateInput>
  }

  /**
   * lesson_plans delete
   */
  export type lesson_plansDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
    /**
     * Filter which lesson_plans to delete.
     */
    where: lesson_plansWhereUniqueInput
  }

  /**
   * lesson_plans deleteMany
   */
  export type lesson_plansDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which lesson_plans to delete
     */
    where?: lesson_plansWhereInput
    /**
     * Limit how many lesson_plans to delete.
     */
    limit?: number
  }

  /**
   * lesson_plans without action
   */
  export type lesson_plansDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lesson_plans
     */
    select?: lesson_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lesson_plans
     */
    omit?: lesson_plansOmit<ExtArgs> | null
  }


  /**
   * Model password_reset_tokens
   */

  export type AggregatePassword_reset_tokens = {
    _count: Password_reset_tokensCountAggregateOutputType | null
    _avg: Password_reset_tokensAvgAggregateOutputType | null
    _sum: Password_reset_tokensSumAggregateOutputType | null
    _min: Password_reset_tokensMinAggregateOutputType | null
    _max: Password_reset_tokensMaxAggregateOutputType | null
  }

  export type Password_reset_tokensAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    tenant_id: number | null
  }

  export type Password_reset_tokensSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    tenant_id: number | null
  }

  export type Password_reset_tokensMinAggregateOutputType = {
    id: number | null
    token: string | null
    user_id: number | null
    expires_at: Date | null
    created_at: Date | null
    is_used: boolean | null
    tenant_id: number | null
  }

  export type Password_reset_tokensMaxAggregateOutputType = {
    id: number | null
    token: string | null
    user_id: number | null
    expires_at: Date | null
    created_at: Date | null
    is_used: boolean | null
    tenant_id: number | null
  }

  export type Password_reset_tokensCountAggregateOutputType = {
    id: number
    token: number
    user_id: number
    expires_at: number
    created_at: number
    is_used: number
    tenant_id: number
    _all: number
  }


  export type Password_reset_tokensAvgAggregateInputType = {
    id?: true
    user_id?: true
    tenant_id?: true
  }

  export type Password_reset_tokensSumAggregateInputType = {
    id?: true
    user_id?: true
    tenant_id?: true
  }

  export type Password_reset_tokensMinAggregateInputType = {
    id?: true
    token?: true
    user_id?: true
    expires_at?: true
    created_at?: true
    is_used?: true
    tenant_id?: true
  }

  export type Password_reset_tokensMaxAggregateInputType = {
    id?: true
    token?: true
    user_id?: true
    expires_at?: true
    created_at?: true
    is_used?: true
    tenant_id?: true
  }

  export type Password_reset_tokensCountAggregateInputType = {
    id?: true
    token?: true
    user_id?: true
    expires_at?: true
    created_at?: true
    is_used?: true
    tenant_id?: true
    _all?: true
  }

  export type Password_reset_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which password_reset_tokens to aggregate.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned password_reset_tokens
    **/
    _count?: true | Password_reset_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Password_reset_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Password_reset_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Password_reset_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Password_reset_tokensMaxAggregateInputType
  }

  export type GetPassword_reset_tokensAggregateType<T extends Password_reset_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregatePassword_reset_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePassword_reset_tokens[P]>
      : GetScalarType<T[P], AggregatePassword_reset_tokens[P]>
  }




  export type password_reset_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: password_reset_tokensWhereInput
    orderBy?: password_reset_tokensOrderByWithAggregationInput | password_reset_tokensOrderByWithAggregationInput[]
    by: Password_reset_tokensScalarFieldEnum[] | Password_reset_tokensScalarFieldEnum
    having?: password_reset_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Password_reset_tokensCountAggregateInputType | true
    _avg?: Password_reset_tokensAvgAggregateInputType
    _sum?: Password_reset_tokensSumAggregateInputType
    _min?: Password_reset_tokensMinAggregateInputType
    _max?: Password_reset_tokensMaxAggregateInputType
  }

  export type Password_reset_tokensGroupByOutputType = {
    id: number
    token: string
    user_id: number
    expires_at: Date
    created_at: Date
    is_used: boolean
    tenant_id: number | null
    _count: Password_reset_tokensCountAggregateOutputType | null
    _avg: Password_reset_tokensAvgAggregateOutputType | null
    _sum: Password_reset_tokensSumAggregateOutputType | null
    _min: Password_reset_tokensMinAggregateOutputType | null
    _max: Password_reset_tokensMaxAggregateOutputType | null
  }

  type GetPassword_reset_tokensGroupByPayload<T extends password_reset_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Password_reset_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Password_reset_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Password_reset_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Password_reset_tokensGroupByOutputType[P]>
        }
      >
    >


  export type password_reset_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    user_id?: boolean
    expires_at?: boolean
    created_at?: boolean
    is_used?: boolean
    tenant_id?: boolean
    tenants?: boolean | password_reset_tokens$tenantsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    user_id?: boolean
    expires_at?: boolean
    created_at?: boolean
    is_used?: boolean
    tenant_id?: boolean
    tenants?: boolean | password_reset_tokens$tenantsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    user_id?: boolean
    expires_at?: boolean
    created_at?: boolean
    is_used?: boolean
    tenant_id?: boolean
    tenants?: boolean | password_reset_tokens$tenantsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectScalar = {
    id?: boolean
    token?: boolean
    user_id?: boolean
    expires_at?: boolean
    created_at?: boolean
    is_used?: boolean
    tenant_id?: boolean
  }

  export type password_reset_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "token" | "user_id" | "expires_at" | "created_at" | "is_used" | "tenant_id", ExtArgs["result"]["password_reset_tokens"]>
  export type password_reset_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | password_reset_tokens$tenantsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type password_reset_tokensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | password_reset_tokens$tenantsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type password_reset_tokensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | password_reset_tokens$tenantsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $password_reset_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "password_reset_tokens"
    objects: {
      tenants: Prisma.$tenantsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      token: string
      user_id: number
      expires_at: Date
      created_at: Date
      is_used: boolean
      tenant_id: number | null
    }, ExtArgs["result"]["password_reset_tokens"]>
    composites: {}
  }

  type password_reset_tokensGetPayload<S extends boolean | null | undefined | password_reset_tokensDefaultArgs> = $Result.GetResult<Prisma.$password_reset_tokensPayload, S>

  type password_reset_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<password_reset_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Password_reset_tokensCountAggregateInputType | true
    }

  export interface password_reset_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['password_reset_tokens'], meta: { name: 'password_reset_tokens' } }
    /**
     * Find zero or one Password_reset_tokens that matches the filter.
     * @param {password_reset_tokensFindUniqueArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends password_reset_tokensFindUniqueArgs>(args: SelectSubset<T, password_reset_tokensFindUniqueArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Password_reset_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {password_reset_tokensFindUniqueOrThrowArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends password_reset_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, password_reset_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Password_reset_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindFirstArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends password_reset_tokensFindFirstArgs>(args?: SelectSubset<T, password_reset_tokensFindFirstArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Password_reset_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindFirstOrThrowArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends password_reset_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, password_reset_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Password_reset_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findMany()
     * 
     * // Get first 10 Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const password_reset_tokensWithIdOnly = await prisma.password_reset_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends password_reset_tokensFindManyArgs>(args?: SelectSubset<T, password_reset_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Password_reset_tokens.
     * @param {password_reset_tokensCreateArgs} args - Arguments to create a Password_reset_tokens.
     * @example
     * // Create one Password_reset_tokens
     * const Password_reset_tokens = await prisma.password_reset_tokens.create({
     *   data: {
     *     // ... data to create a Password_reset_tokens
     *   }
     * })
     * 
     */
    create<T extends password_reset_tokensCreateArgs>(args: SelectSubset<T, password_reset_tokensCreateArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Password_reset_tokens.
     * @param {password_reset_tokensCreateManyArgs} args - Arguments to create many Password_reset_tokens.
     * @example
     * // Create many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends password_reset_tokensCreateManyArgs>(args?: SelectSubset<T, password_reset_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Password_reset_tokens and returns the data saved in the database.
     * @param {password_reset_tokensCreateManyAndReturnArgs} args - Arguments to create many Password_reset_tokens.
     * @example
     * // Create many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Password_reset_tokens and only return the `id`
     * const password_reset_tokensWithIdOnly = await prisma.password_reset_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends password_reset_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, password_reset_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Password_reset_tokens.
     * @param {password_reset_tokensDeleteArgs} args - Arguments to delete one Password_reset_tokens.
     * @example
     * // Delete one Password_reset_tokens
     * const Password_reset_tokens = await prisma.password_reset_tokens.delete({
     *   where: {
     *     // ... filter to delete one Password_reset_tokens
     *   }
     * })
     * 
     */
    delete<T extends password_reset_tokensDeleteArgs>(args: SelectSubset<T, password_reset_tokensDeleteArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Password_reset_tokens.
     * @param {password_reset_tokensUpdateArgs} args - Arguments to update one Password_reset_tokens.
     * @example
     * // Update one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends password_reset_tokensUpdateArgs>(args: SelectSubset<T, password_reset_tokensUpdateArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Password_reset_tokens.
     * @param {password_reset_tokensDeleteManyArgs} args - Arguments to filter Password_reset_tokens to delete.
     * @example
     * // Delete a few Password_reset_tokens
     * const { count } = await prisma.password_reset_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends password_reset_tokensDeleteManyArgs>(args?: SelectSubset<T, password_reset_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends password_reset_tokensUpdateManyArgs>(args: SelectSubset<T, password_reset_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Password_reset_tokens and returns the data updated in the database.
     * @param {password_reset_tokensUpdateManyAndReturnArgs} args - Arguments to update many Password_reset_tokens.
     * @example
     * // Update many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Password_reset_tokens and only return the `id`
     * const password_reset_tokensWithIdOnly = await prisma.password_reset_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends password_reset_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, password_reset_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Password_reset_tokens.
     * @param {password_reset_tokensUpsertArgs} args - Arguments to update or create a Password_reset_tokens.
     * @example
     * // Update or create a Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.upsert({
     *   create: {
     *     // ... data to create a Password_reset_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Password_reset_tokens we want to update
     *   }
     * })
     */
    upsert<T extends password_reset_tokensUpsertArgs>(args: SelectSubset<T, password_reset_tokensUpsertArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensCountArgs} args - Arguments to filter Password_reset_tokens to count.
     * @example
     * // Count the number of Password_reset_tokens
     * const count = await prisma.password_reset_tokens.count({
     *   where: {
     *     // ... the filter for the Password_reset_tokens we want to count
     *   }
     * })
    **/
    count<T extends password_reset_tokensCountArgs>(
      args?: Subset<T, password_reset_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Password_reset_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Password_reset_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Password_reset_tokensAggregateArgs>(args: Subset<T, Password_reset_tokensAggregateArgs>): Prisma.PrismaPromise<GetPassword_reset_tokensAggregateType<T>>

    /**
     * Group by Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends password_reset_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: password_reset_tokensGroupByArgs['orderBy'] }
        : { orderBy?: password_reset_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, password_reset_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPassword_reset_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the password_reset_tokens model
   */
  readonly fields: password_reset_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for password_reset_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__password_reset_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tenants<T extends password_reset_tokens$tenantsArgs<ExtArgs> = {}>(args?: Subset<T, password_reset_tokens$tenantsArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the password_reset_tokens model
   */
  interface password_reset_tokensFieldRefs {
    readonly id: FieldRef<"password_reset_tokens", 'Int'>
    readonly token: FieldRef<"password_reset_tokens", 'String'>
    readonly user_id: FieldRef<"password_reset_tokens", 'Int'>
    readonly expires_at: FieldRef<"password_reset_tokens", 'DateTime'>
    readonly created_at: FieldRef<"password_reset_tokens", 'DateTime'>
    readonly is_used: FieldRef<"password_reset_tokens", 'Boolean'>
    readonly tenant_id: FieldRef<"password_reset_tokens", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * password_reset_tokens findUnique
   */
  export type password_reset_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens findUniqueOrThrow
   */
  export type password_reset_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens findFirst
   */
  export type password_reset_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of password_reset_tokens.
     */
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens findFirstOrThrow
   */
  export type password_reset_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of password_reset_tokens.
     */
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens findMany
   */
  export type password_reset_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens create
   */
  export type password_reset_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a password_reset_tokens.
     */
    data: XOR<password_reset_tokensCreateInput, password_reset_tokensUncheckedCreateInput>
  }

  /**
   * password_reset_tokens createMany
   */
  export type password_reset_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many password_reset_tokens.
     */
    data: password_reset_tokensCreateManyInput | password_reset_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * password_reset_tokens createManyAndReturn
   */
  export type password_reset_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many password_reset_tokens.
     */
    data: password_reset_tokensCreateManyInput | password_reset_tokensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * password_reset_tokens update
   */
  export type password_reset_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateInput, password_reset_tokensUncheckedUpdateInput>
    /**
     * Choose, which password_reset_tokens to update.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens updateMany
   */
  export type password_reset_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyInput>
    /**
     * Filter which password_reset_tokens to update
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to update.
     */
    limit?: number
  }

  /**
   * password_reset_tokens updateManyAndReturn
   */
  export type password_reset_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * The data used to update password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyInput>
    /**
     * Filter which password_reset_tokens to update
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * password_reset_tokens upsert
   */
  export type password_reset_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the password_reset_tokens to update in case it exists.
     */
    where: password_reset_tokensWhereUniqueInput
    /**
     * In case the password_reset_tokens found by the `where` argument doesn't exist, create a new password_reset_tokens with this data.
     */
    create: XOR<password_reset_tokensCreateInput, password_reset_tokensUncheckedCreateInput>
    /**
     * In case the password_reset_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<password_reset_tokensUpdateInput, password_reset_tokensUncheckedUpdateInput>
  }

  /**
   * password_reset_tokens delete
   */
  export type password_reset_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter which password_reset_tokens to delete.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens deleteMany
   */
  export type password_reset_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which password_reset_tokens to delete
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to delete.
     */
    limit?: number
  }

  /**
   * password_reset_tokens.tenants
   */
  export type password_reset_tokens$tenantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    where?: tenantsWhereInput
  }

  /**
   * password_reset_tokens without action
   */
  export type password_reset_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
  }


  /**
   * Model payments
   */

  export type AggregatePayments = {
    _count: PaymentsCountAggregateOutputType | null
    _avg: PaymentsAvgAggregateOutputType | null
    _sum: PaymentsSumAggregateOutputType | null
    _min: PaymentsMinAggregateOutputType | null
    _max: PaymentsMaxAggregateOutputType | null
  }

  export type PaymentsAvgAggregateOutputType = {
    id: number | null
    student_id: number | null
    amount: Decimal | null
    tenant_id: number | null
  }

  export type PaymentsSumAggregateOutputType = {
    id: number | null
    student_id: number | null
    amount: Decimal | null
    tenant_id: number | null
  }

  export type PaymentsMinAggregateOutputType = {
    id: number | null
    student_id: number | null
    amount: Decimal | null
    payment_date: Date | null
    payment_method: $Enums.payment_method | null
    receipt_number: string | null
    transaction_id: string | null
    notes: string | null
    created_at: Date | null
    reference: string | null
    next_payment_due_date: Date | null
    tenant_id: number | null
    status: string | null
  }

  export type PaymentsMaxAggregateOutputType = {
    id: number | null
    student_id: number | null
    amount: Decimal | null
    payment_date: Date | null
    payment_method: $Enums.payment_method | null
    receipt_number: string | null
    transaction_id: string | null
    notes: string | null
    created_at: Date | null
    reference: string | null
    next_payment_due_date: Date | null
    tenant_id: number | null
    status: string | null
  }

  export type PaymentsCountAggregateOutputType = {
    id: number
    student_id: number
    amount: number
    payment_date: number
    payment_method: number
    receipt_number: number
    transaction_id: number
    notes: number
    created_at: number
    reference: number
    next_payment_due_date: number
    tenant_id: number
    status: number
    _all: number
  }


  export type PaymentsAvgAggregateInputType = {
    id?: true
    student_id?: true
    amount?: true
    tenant_id?: true
  }

  export type PaymentsSumAggregateInputType = {
    id?: true
    student_id?: true
    amount?: true
    tenant_id?: true
  }

  export type PaymentsMinAggregateInputType = {
    id?: true
    student_id?: true
    amount?: true
    payment_date?: true
    payment_method?: true
    receipt_number?: true
    transaction_id?: true
    notes?: true
    created_at?: true
    reference?: true
    next_payment_due_date?: true
    tenant_id?: true
    status?: true
  }

  export type PaymentsMaxAggregateInputType = {
    id?: true
    student_id?: true
    amount?: true
    payment_date?: true
    payment_method?: true
    receipt_number?: true
    transaction_id?: true
    notes?: true
    created_at?: true
    reference?: true
    next_payment_due_date?: true
    tenant_id?: true
    status?: true
  }

  export type PaymentsCountAggregateInputType = {
    id?: true
    student_id?: true
    amount?: true
    payment_date?: true
    payment_method?: true
    receipt_number?: true
    transaction_id?: true
    notes?: true
    created_at?: true
    reference?: true
    next_payment_due_date?: true
    tenant_id?: true
    status?: true
    _all?: true
  }

  export type PaymentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which payments to aggregate.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned payments
    **/
    _count?: true | PaymentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentsMaxAggregateInputType
  }

  export type GetPaymentsAggregateType<T extends PaymentsAggregateArgs> = {
        [P in keyof T & keyof AggregatePayments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayments[P]>
      : GetScalarType<T[P], AggregatePayments[P]>
  }




  export type paymentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: paymentsWhereInput
    orderBy?: paymentsOrderByWithAggregationInput | paymentsOrderByWithAggregationInput[]
    by: PaymentsScalarFieldEnum[] | PaymentsScalarFieldEnum
    having?: paymentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentsCountAggregateInputType | true
    _avg?: PaymentsAvgAggregateInputType
    _sum?: PaymentsSumAggregateInputType
    _min?: PaymentsMinAggregateInputType
    _max?: PaymentsMaxAggregateInputType
  }

  export type PaymentsGroupByOutputType = {
    id: number
    student_id: number
    amount: Decimal
    payment_date: Date
    payment_method: $Enums.payment_method
    receipt_number: string | null
    transaction_id: string | null
    notes: string | null
    created_at: Date | null
    reference: string | null
    next_payment_due_date: Date | null
    tenant_id: number | null
    status: string | null
    _count: PaymentsCountAggregateOutputType | null
    _avg: PaymentsAvgAggregateOutputType | null
    _sum: PaymentsSumAggregateOutputType | null
    _min: PaymentsMinAggregateOutputType | null
    _max: PaymentsMaxAggregateOutputType | null
  }

  type GetPaymentsGroupByPayload<T extends paymentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentsGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentsGroupByOutputType[P]>
        }
      >
    >


  export type paymentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    student_id?: boolean
    amount?: boolean
    payment_date?: boolean
    payment_method?: boolean
    receipt_number?: boolean
    transaction_id?: boolean
    notes?: boolean
    created_at?: boolean
    reference?: boolean
    next_payment_due_date?: boolean
    tenant_id?: boolean
    status?: boolean
    tenants?: boolean | payments$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["payments"]>

  export type paymentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    student_id?: boolean
    amount?: boolean
    payment_date?: boolean
    payment_method?: boolean
    receipt_number?: boolean
    transaction_id?: boolean
    notes?: boolean
    created_at?: boolean
    reference?: boolean
    next_payment_due_date?: boolean
    tenant_id?: boolean
    status?: boolean
    tenants?: boolean | payments$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["payments"]>

  export type paymentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    student_id?: boolean
    amount?: boolean
    payment_date?: boolean
    payment_method?: boolean
    receipt_number?: boolean
    transaction_id?: boolean
    notes?: boolean
    created_at?: boolean
    reference?: boolean
    next_payment_due_date?: boolean
    tenant_id?: boolean
    status?: boolean
    tenants?: boolean | payments$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["payments"]>

  export type paymentsSelectScalar = {
    id?: boolean
    student_id?: boolean
    amount?: boolean
    payment_date?: boolean
    payment_method?: boolean
    receipt_number?: boolean
    transaction_id?: boolean
    notes?: boolean
    created_at?: boolean
    reference?: boolean
    next_payment_due_date?: boolean
    tenant_id?: boolean
    status?: boolean
  }

  export type paymentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "student_id" | "amount" | "payment_date" | "payment_method" | "receipt_number" | "transaction_id" | "notes" | "created_at" | "reference" | "next_payment_due_date" | "tenant_id" | "status", ExtArgs["result"]["payments"]>
  export type paymentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | payments$tenantsArgs<ExtArgs>
  }
  export type paymentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | payments$tenantsArgs<ExtArgs>
  }
  export type paymentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | payments$tenantsArgs<ExtArgs>
  }

  export type $paymentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "payments"
    objects: {
      tenants: Prisma.$tenantsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      student_id: number
      amount: Prisma.Decimal
      payment_date: Date
      payment_method: $Enums.payment_method
      receipt_number: string | null
      transaction_id: string | null
      notes: string | null
      created_at: Date | null
      reference: string | null
      next_payment_due_date: Date | null
      tenant_id: number | null
      status: string | null
    }, ExtArgs["result"]["payments"]>
    composites: {}
  }

  type paymentsGetPayload<S extends boolean | null | undefined | paymentsDefaultArgs> = $Result.GetResult<Prisma.$paymentsPayload, S>

  type paymentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<paymentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentsCountAggregateInputType | true
    }

  export interface paymentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['payments'], meta: { name: 'payments' } }
    /**
     * Find zero or one Payments that matches the filter.
     * @param {paymentsFindUniqueArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends paymentsFindUniqueArgs>(args: SelectSubset<T, paymentsFindUniqueArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {paymentsFindUniqueOrThrowArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends paymentsFindUniqueOrThrowArgs>(args: SelectSubset<T, paymentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindFirstArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends paymentsFindFirstArgs>(args?: SelectSubset<T, paymentsFindFirstArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindFirstOrThrowArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends paymentsFindFirstOrThrowArgs>(args?: SelectSubset<T, paymentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payments.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentsWithIdOnly = await prisma.payments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends paymentsFindManyArgs>(args?: SelectSubset<T, paymentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payments.
     * @param {paymentsCreateArgs} args - Arguments to create a Payments.
     * @example
     * // Create one Payments
     * const Payments = await prisma.payments.create({
     *   data: {
     *     // ... data to create a Payments
     *   }
     * })
     * 
     */
    create<T extends paymentsCreateArgs>(args: SelectSubset<T, paymentsCreateArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {paymentsCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payments = await prisma.payments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends paymentsCreateManyArgs>(args?: SelectSubset<T, paymentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {paymentsCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payments = await prisma.payments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentsWithIdOnly = await prisma.payments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends paymentsCreateManyAndReturnArgs>(args?: SelectSubset<T, paymentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payments.
     * @param {paymentsDeleteArgs} args - Arguments to delete one Payments.
     * @example
     * // Delete one Payments
     * const Payments = await prisma.payments.delete({
     *   where: {
     *     // ... filter to delete one Payments
     *   }
     * })
     * 
     */
    delete<T extends paymentsDeleteArgs>(args: SelectSubset<T, paymentsDeleteArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payments.
     * @param {paymentsUpdateArgs} args - Arguments to update one Payments.
     * @example
     * // Update one Payments
     * const payments = await prisma.payments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends paymentsUpdateArgs>(args: SelectSubset<T, paymentsUpdateArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {paymentsDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends paymentsDeleteManyArgs>(args?: SelectSubset<T, paymentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payments = await prisma.payments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends paymentsUpdateManyArgs>(args: SelectSubset<T, paymentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {paymentsUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payments = await prisma.payments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentsWithIdOnly = await prisma.payments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends paymentsUpdateManyAndReturnArgs>(args: SelectSubset<T, paymentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payments.
     * @param {paymentsUpsertArgs} args - Arguments to update or create a Payments.
     * @example
     * // Update or create a Payments
     * const payments = await prisma.payments.upsert({
     *   create: {
     *     // ... data to create a Payments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payments we want to update
     *   }
     * })
     */
    upsert<T extends paymentsUpsertArgs>(args: SelectSubset<T, paymentsUpsertArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payments.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends paymentsCountArgs>(
      args?: Subset<T, paymentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentsAggregateArgs>(args: Subset<T, PaymentsAggregateArgs>): Prisma.PrismaPromise<GetPaymentsAggregateType<T>>

    /**
     * Group by Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends paymentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: paymentsGroupByArgs['orderBy'] }
        : { orderBy?: paymentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, paymentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the payments model
   */
  readonly fields: paymentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for payments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__paymentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tenants<T extends payments$tenantsArgs<ExtArgs> = {}>(args?: Subset<T, payments$tenantsArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the payments model
   */
  interface paymentsFieldRefs {
    readonly id: FieldRef<"payments", 'Int'>
    readonly student_id: FieldRef<"payments", 'Int'>
    readonly amount: FieldRef<"payments", 'Decimal'>
    readonly payment_date: FieldRef<"payments", 'DateTime'>
    readonly payment_method: FieldRef<"payments", 'payment_method'>
    readonly receipt_number: FieldRef<"payments", 'String'>
    readonly transaction_id: FieldRef<"payments", 'String'>
    readonly notes: FieldRef<"payments", 'String'>
    readonly created_at: FieldRef<"payments", 'DateTime'>
    readonly reference: FieldRef<"payments", 'String'>
    readonly next_payment_due_date: FieldRef<"payments", 'DateTime'>
    readonly tenant_id: FieldRef<"payments", 'Int'>
    readonly status: FieldRef<"payments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * payments findUnique
   */
  export type paymentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where: paymentsWhereUniqueInput
  }

  /**
   * payments findUniqueOrThrow
   */
  export type paymentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where: paymentsWhereUniqueInput
  }

  /**
   * payments findFirst
   */
  export type paymentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of payments.
     */
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * payments findFirstOrThrow
   */
  export type paymentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of payments.
     */
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * payments findMany
   */
  export type paymentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * payments create
   */
  export type paymentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The data needed to create a payments.
     */
    data: XOR<paymentsCreateInput, paymentsUncheckedCreateInput>
  }

  /**
   * payments createMany
   */
  export type paymentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many payments.
     */
    data: paymentsCreateManyInput | paymentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * payments createManyAndReturn
   */
  export type paymentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * The data used to create many payments.
     */
    data: paymentsCreateManyInput | paymentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * payments update
   */
  export type paymentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The data needed to update a payments.
     */
    data: XOR<paymentsUpdateInput, paymentsUncheckedUpdateInput>
    /**
     * Choose, which payments to update.
     */
    where: paymentsWhereUniqueInput
  }

  /**
   * payments updateMany
   */
  export type paymentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update payments.
     */
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyInput>
    /**
     * Filter which payments to update
     */
    where?: paymentsWhereInput
    /**
     * Limit how many payments to update.
     */
    limit?: number
  }

  /**
   * payments updateManyAndReturn
   */
  export type paymentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * The data used to update payments.
     */
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyInput>
    /**
     * Filter which payments to update
     */
    where?: paymentsWhereInput
    /**
     * Limit how many payments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * payments upsert
   */
  export type paymentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The filter to search for the payments to update in case it exists.
     */
    where: paymentsWhereUniqueInput
    /**
     * In case the payments found by the `where` argument doesn't exist, create a new payments with this data.
     */
    create: XOR<paymentsCreateInput, paymentsUncheckedCreateInput>
    /**
     * In case the payments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<paymentsUpdateInput, paymentsUncheckedUpdateInput>
  }

  /**
   * payments delete
   */
  export type paymentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter which payments to delete.
     */
    where: paymentsWhereUniqueInput
  }

  /**
   * payments deleteMany
   */
  export type paymentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which payments to delete
     */
    where?: paymentsWhereInput
    /**
     * Limit how many payments to delete.
     */
    limit?: number
  }

  /**
   * payments.tenants
   */
  export type payments$tenantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    where?: tenantsWhereInput
  }

  /**
   * payments without action
   */
  export type paymentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
  }


  /**
   * Model sessions
   */

  export type AggregateSessions = {
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  export type SessionsMinAggregateOutputType = {
    sid: string | null
    expire: Date | null
  }

  export type SessionsMaxAggregateOutputType = {
    sid: string | null
    expire: Date | null
  }

  export type SessionsCountAggregateOutputType = {
    sid: number
    sess: number
    expire: number
    _all: number
  }


  export type SessionsMinAggregateInputType = {
    sid?: true
    expire?: true
  }

  export type SessionsMaxAggregateInputType = {
    sid?: true
    expire?: true
  }

  export type SessionsCountAggregateInputType = {
    sid?: true
    sess?: true
    expire?: true
    _all?: true
  }

  export type SessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to aggregate.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sessions
    **/
    _count?: true | SessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionsMaxAggregateInputType
  }

  export type GetSessionsAggregateType<T extends SessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSessions[P]>
      : GetScalarType<T[P], AggregateSessions[P]>
  }




  export type sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sessionsWhereInput
    orderBy?: sessionsOrderByWithAggregationInput | sessionsOrderByWithAggregationInput[]
    by: SessionsScalarFieldEnum[] | SessionsScalarFieldEnum
    having?: sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionsCountAggregateInputType | true
    _min?: SessionsMinAggregateInputType
    _max?: SessionsMaxAggregateInputType
  }

  export type SessionsGroupByOutputType = {
    sid: string
    sess: JsonValue
    expire: Date
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  type GetSessionsGroupByPayload<T extends sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionsGroupByOutputType[P]>
            : GetScalarType<T[P], SessionsGroupByOutputType[P]>
        }
      >
    >


  export type sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectScalar = {
    sid?: boolean
    sess?: boolean
    expire?: boolean
  }

  export type sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"sid" | "sess" | "expire", ExtArgs["result"]["sessions"]>

  export type $sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sessions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      sid: string
      sess: Prisma.JsonValue
      expire: Date
    }, ExtArgs["result"]["sessions"]>
    composites: {}
  }

  type sessionsGetPayload<S extends boolean | null | undefined | sessionsDefaultArgs> = $Result.GetResult<Prisma.$sessionsPayload, S>

  type sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionsCountAggregateInputType | true
    }

  export interface sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sessions'], meta: { name: 'sessions' } }
    /**
     * Find zero or one Sessions that matches the filter.
     * @param {sessionsFindUniqueArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sessionsFindUniqueArgs>(args: SelectSubset<T, sessionsFindUniqueArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sessionsFindUniqueOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sessionsFindFirstArgs>(args?: SelectSubset<T, sessionsFindFirstArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.sessions.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.sessions.findMany({ take: 10 })
     * 
     * // Only select the `sid`
     * const sessionsWithSidOnly = await prisma.sessions.findMany({ select: { sid: true } })
     * 
     */
    findMany<T extends sessionsFindManyArgs>(args?: SelectSubset<T, sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sessions.
     * @param {sessionsCreateArgs} args - Arguments to create a Sessions.
     * @example
     * // Create one Sessions
     * const Sessions = await prisma.sessions.create({
     *   data: {
     *     // ... data to create a Sessions
     *   }
     * })
     * 
     */
    create<T extends sessionsCreateArgs>(args: SelectSubset<T, sessionsCreateArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {sessionsCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const sessions = await prisma.sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sessionsCreateManyArgs>(args?: SelectSubset<T, sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {sessionsCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const sessions = await prisma.sessions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `sid`
     * const sessionsWithSidOnly = await prisma.sessions.createManyAndReturn({
     *   select: { sid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sessions.
     * @param {sessionsDeleteArgs} args - Arguments to delete one Sessions.
     * @example
     * // Delete one Sessions
     * const Sessions = await prisma.sessions.delete({
     *   where: {
     *     // ... filter to delete one Sessions
     *   }
     * })
     * 
     */
    delete<T extends sessionsDeleteArgs>(args: SelectSubset<T, sessionsDeleteArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sessions.
     * @param {sessionsUpdateArgs} args - Arguments to update one Sessions.
     * @example
     * // Update one Sessions
     * const sessions = await prisma.sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sessionsUpdateArgs>(args: SelectSubset<T, sessionsUpdateArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {sessionsDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sessionsDeleteManyArgs>(args?: SelectSubset<T, sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sessionsUpdateManyArgs>(args: SelectSubset<T, sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {sessionsUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `sid`
     * const sessionsWithSidOnly = await prisma.sessions.updateManyAndReturn({
     *   select: { sid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sessions.
     * @param {sessionsUpsertArgs} args - Arguments to update or create a Sessions.
     * @example
     * // Update or create a Sessions
     * const sessions = await prisma.sessions.upsert({
     *   create: {
     *     // ... data to create a Sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sessions we want to update
     *   }
     * })
     */
    upsert<T extends sessionsUpsertArgs>(args: SelectSubset<T, sessionsUpsertArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.sessions.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends sessionsCountArgs>(
      args?: Subset<T, sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionsAggregateArgs>(args: Subset<T, SessionsAggregateArgs>): Prisma.PrismaPromise<GetSessionsAggregateType<T>>

    /**
     * Group by Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sessionsGroupByArgs['orderBy'] }
        : { orderBy?: sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sessions model
   */
  readonly fields: sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sessions model
   */
  interface sessionsFieldRefs {
    readonly sid: FieldRef<"sessions", 'String'>
    readonly sess: FieldRef<"sessions", 'Json'>
    readonly expire: FieldRef<"sessions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sessions findUnique
   */
  export type sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findUniqueOrThrow
   */
  export type sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findFirst
   */
  export type sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions findFirstOrThrow
   */
  export type sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions findMany
   */
  export type sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions create
   */
  export type sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data needed to create a sessions.
     */
    data: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
  }

  /**
   * sessions createMany
   */
  export type sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sessions createManyAndReturn
   */
  export type sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sessions update
   */
  export type sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data needed to update a sessions.
     */
    data: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
    /**
     * Choose, which sessions to update.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions updateMany
   */
  export type sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to update.
     */
    limit?: number
  }

  /**
   * sessions updateManyAndReturn
   */
  export type sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to update.
     */
    limit?: number
  }

  /**
   * sessions upsert
   */
  export type sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The filter to search for the sessions to update in case it exists.
     */
    where: sessionsWhereUniqueInput
    /**
     * In case the sessions found by the `where` argument doesn't exist, create a new sessions with this data.
     */
    create: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
    /**
     * In case the sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
  }

  /**
   * sessions delete
   */
  export type sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Filter which sessions to delete.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions deleteMany
   */
  export type sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to delete
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to delete.
     */
    limit?: number
  }

  /**
   * sessions without action
   */
  export type sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
  }


  /**
   * Model settings
   */

  export type AggregateSettings = {
    _count: SettingsCountAggregateOutputType | null
    _avg: SettingsAvgAggregateOutputType | null
    _sum: SettingsSumAggregateOutputType | null
    _min: SettingsMinAggregateOutputType | null
    _max: SettingsMaxAggregateOutputType | null
  }

  export type SettingsAvgAggregateOutputType = {
    id: number | null
    tenant_id: number | null
  }

  export type SettingsSumAggregateOutputType = {
    id: number | null
    tenant_id: number | null
  }

  export type SettingsMinAggregateOutputType = {
    id: number | null
    tenant_id: number | null
    key: string | null
    value: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type SettingsMaxAggregateOutputType = {
    id: number | null
    tenant_id: number | null
    key: string | null
    value: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type SettingsCountAggregateOutputType = {
    id: number
    tenant_id: number
    key: number
    value: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type SettingsAvgAggregateInputType = {
    id?: true
    tenant_id?: true
  }

  export type SettingsSumAggregateInputType = {
    id?: true
    tenant_id?: true
  }

  export type SettingsMinAggregateInputType = {
    id?: true
    tenant_id?: true
    key?: true
    value?: true
    created_at?: true
    updated_at?: true
  }

  export type SettingsMaxAggregateInputType = {
    id?: true
    tenant_id?: true
    key?: true
    value?: true
    created_at?: true
    updated_at?: true
  }

  export type SettingsCountAggregateInputType = {
    id?: true
    tenant_id?: true
    key?: true
    value?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type SettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which settings to aggregate.
     */
    where?: settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingsOrderByWithRelationInput | settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned settings
    **/
    _count?: true | SettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SettingsMaxAggregateInputType
  }

  export type GetSettingsAggregateType<T extends SettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSettings[P]>
      : GetScalarType<T[P], AggregateSettings[P]>
  }




  export type settingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: settingsWhereInput
    orderBy?: settingsOrderByWithAggregationInput | settingsOrderByWithAggregationInput[]
    by: SettingsScalarFieldEnum[] | SettingsScalarFieldEnum
    having?: settingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SettingsCountAggregateInputType | true
    _avg?: SettingsAvgAggregateInputType
    _sum?: SettingsSumAggregateInputType
    _min?: SettingsMinAggregateInputType
    _max?: SettingsMaxAggregateInputType
  }

  export type SettingsGroupByOutputType = {
    id: number
    tenant_id: number
    key: string
    value: string
    created_at: Date
    updated_at: Date
    _count: SettingsCountAggregateOutputType | null
    _avg: SettingsAvgAggregateOutputType | null
    _sum: SettingsSumAggregateOutputType | null
    _min: SettingsMinAggregateOutputType | null
    _max: SettingsMaxAggregateOutputType | null
  }

  type GetSettingsGroupByPayload<T extends settingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SettingsGroupByOutputType[P]>
            : GetScalarType<T[P], SettingsGroupByOutputType[P]>
        }
      >
    >


  export type settingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenant_id?: boolean
    key?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenants?: boolean | tenantsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["settings"]>

  export type settingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenant_id?: boolean
    key?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenants?: boolean | tenantsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["settings"]>

  export type settingsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tenant_id?: boolean
    key?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenants?: boolean | tenantsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["settings"]>

  export type settingsSelectScalar = {
    id?: boolean
    tenant_id?: boolean
    key?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type settingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tenant_id" | "key" | "value" | "created_at" | "updated_at", ExtArgs["result"]["settings"]>
  export type settingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | tenantsDefaultArgs<ExtArgs>
  }
  export type settingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | tenantsDefaultArgs<ExtArgs>
  }
  export type settingsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | tenantsDefaultArgs<ExtArgs>
  }

  export type $settingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "settings"
    objects: {
      tenants: Prisma.$tenantsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tenant_id: number
      key: string
      value: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["settings"]>
    composites: {}
  }

  type settingsGetPayload<S extends boolean | null | undefined | settingsDefaultArgs> = $Result.GetResult<Prisma.$settingsPayload, S>

  type settingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<settingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SettingsCountAggregateInputType | true
    }

  export interface settingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['settings'], meta: { name: 'settings' } }
    /**
     * Find zero or one Settings that matches the filter.
     * @param {settingsFindUniqueArgs} args - Arguments to find a Settings
     * @example
     * // Get one Settings
     * const settings = await prisma.settings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends settingsFindUniqueArgs>(args: SelectSubset<T, settingsFindUniqueArgs<ExtArgs>>): Prisma__settingsClient<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Settings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {settingsFindUniqueOrThrowArgs} args - Arguments to find a Settings
     * @example
     * // Get one Settings
     * const settings = await prisma.settings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends settingsFindUniqueOrThrowArgs>(args: SelectSubset<T, settingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__settingsClient<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingsFindFirstArgs} args - Arguments to find a Settings
     * @example
     * // Get one Settings
     * const settings = await prisma.settings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends settingsFindFirstArgs>(args?: SelectSubset<T, settingsFindFirstArgs<ExtArgs>>): Prisma__settingsClient<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Settings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingsFindFirstOrThrowArgs} args - Arguments to find a Settings
     * @example
     * // Get one Settings
     * const settings = await prisma.settings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends settingsFindFirstOrThrowArgs>(args?: SelectSubset<T, settingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__settingsClient<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Settings
     * const settings = await prisma.settings.findMany()
     * 
     * // Get first 10 Settings
     * const settings = await prisma.settings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const settingsWithIdOnly = await prisma.settings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends settingsFindManyArgs>(args?: SelectSubset<T, settingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Settings.
     * @param {settingsCreateArgs} args - Arguments to create a Settings.
     * @example
     * // Create one Settings
     * const Settings = await prisma.settings.create({
     *   data: {
     *     // ... data to create a Settings
     *   }
     * })
     * 
     */
    create<T extends settingsCreateArgs>(args: SelectSubset<T, settingsCreateArgs<ExtArgs>>): Prisma__settingsClient<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Settings.
     * @param {settingsCreateManyArgs} args - Arguments to create many Settings.
     * @example
     * // Create many Settings
     * const settings = await prisma.settings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends settingsCreateManyArgs>(args?: SelectSubset<T, settingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Settings and returns the data saved in the database.
     * @param {settingsCreateManyAndReturnArgs} args - Arguments to create many Settings.
     * @example
     * // Create many Settings
     * const settings = await prisma.settings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Settings and only return the `id`
     * const settingsWithIdOnly = await prisma.settings.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends settingsCreateManyAndReturnArgs>(args?: SelectSubset<T, settingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Settings.
     * @param {settingsDeleteArgs} args - Arguments to delete one Settings.
     * @example
     * // Delete one Settings
     * const Settings = await prisma.settings.delete({
     *   where: {
     *     // ... filter to delete one Settings
     *   }
     * })
     * 
     */
    delete<T extends settingsDeleteArgs>(args: SelectSubset<T, settingsDeleteArgs<ExtArgs>>): Prisma__settingsClient<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Settings.
     * @param {settingsUpdateArgs} args - Arguments to update one Settings.
     * @example
     * // Update one Settings
     * const settings = await prisma.settings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends settingsUpdateArgs>(args: SelectSubset<T, settingsUpdateArgs<ExtArgs>>): Prisma__settingsClient<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Settings.
     * @param {settingsDeleteManyArgs} args - Arguments to filter Settings to delete.
     * @example
     * // Delete a few Settings
     * const { count } = await prisma.settings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends settingsDeleteManyArgs>(args?: SelectSubset<T, settingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Settings
     * const settings = await prisma.settings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends settingsUpdateManyArgs>(args: SelectSubset<T, settingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Settings and returns the data updated in the database.
     * @param {settingsUpdateManyAndReturnArgs} args - Arguments to update many Settings.
     * @example
     * // Update many Settings
     * const settings = await prisma.settings.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Settings and only return the `id`
     * const settingsWithIdOnly = await prisma.settings.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends settingsUpdateManyAndReturnArgs>(args: SelectSubset<T, settingsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Settings.
     * @param {settingsUpsertArgs} args - Arguments to update or create a Settings.
     * @example
     * // Update or create a Settings
     * const settings = await prisma.settings.upsert({
     *   create: {
     *     // ... data to create a Settings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Settings we want to update
     *   }
     * })
     */
    upsert<T extends settingsUpsertArgs>(args: SelectSubset<T, settingsUpsertArgs<ExtArgs>>): Prisma__settingsClient<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingsCountArgs} args - Arguments to filter Settings to count.
     * @example
     * // Count the number of Settings
     * const count = await prisma.settings.count({
     *   where: {
     *     // ... the filter for the Settings we want to count
     *   }
     * })
    **/
    count<T extends settingsCountArgs>(
      args?: Subset<T, settingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SettingsAggregateArgs>(args: Subset<T, SettingsAggregateArgs>): Prisma.PrismaPromise<GetSettingsAggregateType<T>>

    /**
     * Group by Settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {settingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends settingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: settingsGroupByArgs['orderBy'] }
        : { orderBy?: settingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, settingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the settings model
   */
  readonly fields: settingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for settings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__settingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tenants<T extends tenantsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tenantsDefaultArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the settings model
   */
  interface settingsFieldRefs {
    readonly id: FieldRef<"settings", 'Int'>
    readonly tenant_id: FieldRef<"settings", 'Int'>
    readonly key: FieldRef<"settings", 'String'>
    readonly value: FieldRef<"settings", 'String'>
    readonly created_at: FieldRef<"settings", 'DateTime'>
    readonly updated_at: FieldRef<"settings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * settings findUnique
   */
  export type settingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * Filter, which settings to fetch.
     */
    where: settingsWhereUniqueInput
  }

  /**
   * settings findUniqueOrThrow
   */
  export type settingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * Filter, which settings to fetch.
     */
    where: settingsWhereUniqueInput
  }

  /**
   * settings findFirst
   */
  export type settingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * Filter, which settings to fetch.
     */
    where?: settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingsOrderByWithRelationInput | settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for settings.
     */
    cursor?: settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of settings.
     */
    distinct?: SettingsScalarFieldEnum | SettingsScalarFieldEnum[]
  }

  /**
   * settings findFirstOrThrow
   */
  export type settingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * Filter, which settings to fetch.
     */
    where?: settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingsOrderByWithRelationInput | settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for settings.
     */
    cursor?: settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of settings.
     */
    distinct?: SettingsScalarFieldEnum | SettingsScalarFieldEnum[]
  }

  /**
   * settings findMany
   */
  export type settingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * Filter, which settings to fetch.
     */
    where?: settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of settings to fetch.
     */
    orderBy?: settingsOrderByWithRelationInput | settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing settings.
     */
    cursor?: settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` settings.
     */
    skip?: number
    distinct?: SettingsScalarFieldEnum | SettingsScalarFieldEnum[]
  }

  /**
   * settings create
   */
  export type settingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * The data needed to create a settings.
     */
    data: XOR<settingsCreateInput, settingsUncheckedCreateInput>
  }

  /**
   * settings createMany
   */
  export type settingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many settings.
     */
    data: settingsCreateManyInput | settingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * settings createManyAndReturn
   */
  export type settingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * The data used to create many settings.
     */
    data: settingsCreateManyInput | settingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * settings update
   */
  export type settingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * The data needed to update a settings.
     */
    data: XOR<settingsUpdateInput, settingsUncheckedUpdateInput>
    /**
     * Choose, which settings to update.
     */
    where: settingsWhereUniqueInput
  }

  /**
   * settings updateMany
   */
  export type settingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update settings.
     */
    data: XOR<settingsUpdateManyMutationInput, settingsUncheckedUpdateManyInput>
    /**
     * Filter which settings to update
     */
    where?: settingsWhereInput
    /**
     * Limit how many settings to update.
     */
    limit?: number
  }

  /**
   * settings updateManyAndReturn
   */
  export type settingsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * The data used to update settings.
     */
    data: XOR<settingsUpdateManyMutationInput, settingsUncheckedUpdateManyInput>
    /**
     * Filter which settings to update
     */
    where?: settingsWhereInput
    /**
     * Limit how many settings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * settings upsert
   */
  export type settingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * The filter to search for the settings to update in case it exists.
     */
    where: settingsWhereUniqueInput
    /**
     * In case the settings found by the `where` argument doesn't exist, create a new settings with this data.
     */
    create: XOR<settingsCreateInput, settingsUncheckedCreateInput>
    /**
     * In case the settings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<settingsUpdateInput, settingsUncheckedUpdateInput>
  }

  /**
   * settings delete
   */
  export type settingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    /**
     * Filter which settings to delete.
     */
    where: settingsWhereUniqueInput
  }

  /**
   * settings deleteMany
   */
  export type settingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which settings to delete
     */
    where?: settingsWhereInput
    /**
     * Limit how many settings to delete.
     */
    limit?: number
  }

  /**
   * settings without action
   */
  export type settingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
  }


  /**
   * Model students
   */

  export type AggregateStudents = {
    _count: StudentsCountAggregateOutputType | null
    _avg: StudentsAvgAggregateOutputType | null
    _sum: StudentsSumAggregateOutputType | null
    _min: StudentsMinAggregateOutputType | null
    _max: StudentsMaxAggregateOutputType | null
  }

  export type StudentsAvgAggregateOutputType = {
    id: number | null
    batch_id: number | null
    total_fee: Decimal | null
    fee_paid: Decimal | null
    fee_due: Decimal | null
    converted_from_lead_id: number | null
    tenant_id: number | null
    user_id: number | null
  }

  export type StudentsSumAggregateOutputType = {
    id: number | null
    batch_id: number | null
    total_fee: Decimal | null
    fee_paid: Decimal | null
    fee_due: Decimal | null
    converted_from_lead_id: number | null
    tenant_id: number | null
    user_id: number | null
  }

  export type StudentsMinAggregateOutputType = {
    id: number | null
    name: string | null
    phone: string | null
    email: string | null
    parent_mobile: string | null
    batch_id: number | null
    enrollment_date: Date | null
    total_fee: Decimal | null
    fee_paid: Decimal | null
    fee_due: Decimal | null
    is_active: boolean | null
    converted_from_lead_id: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    tenant_id: number | null
    user_id: number | null
  }

  export type StudentsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    phone: string | null
    email: string | null
    parent_mobile: string | null
    batch_id: number | null
    enrollment_date: Date | null
    total_fee: Decimal | null
    fee_paid: Decimal | null
    fee_due: Decimal | null
    is_active: boolean | null
    converted_from_lead_id: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    tenant_id: number | null
    user_id: number | null
  }

  export type StudentsCountAggregateOutputType = {
    id: number
    name: number
    phone: number
    email: number
    parent_mobile: number
    batch_id: number
    enrollment_date: number
    total_fee: number
    fee_paid: number
    fee_due: number
    is_active: number
    converted_from_lead_id: number
    notes: number
    created_at: number
    updated_at: number
    tenant_id: number
    user_id: number
    _all: number
  }


  export type StudentsAvgAggregateInputType = {
    id?: true
    batch_id?: true
    total_fee?: true
    fee_paid?: true
    fee_due?: true
    converted_from_lead_id?: true
    tenant_id?: true
    user_id?: true
  }

  export type StudentsSumAggregateInputType = {
    id?: true
    batch_id?: true
    total_fee?: true
    fee_paid?: true
    fee_due?: true
    converted_from_lead_id?: true
    tenant_id?: true
    user_id?: true
  }

  export type StudentsMinAggregateInputType = {
    id?: true
    name?: true
    phone?: true
    email?: true
    parent_mobile?: true
    batch_id?: true
    enrollment_date?: true
    total_fee?: true
    fee_paid?: true
    fee_due?: true
    is_active?: true
    converted_from_lead_id?: true
    notes?: true
    created_at?: true
    updated_at?: true
    tenant_id?: true
    user_id?: true
  }

  export type StudentsMaxAggregateInputType = {
    id?: true
    name?: true
    phone?: true
    email?: true
    parent_mobile?: true
    batch_id?: true
    enrollment_date?: true
    total_fee?: true
    fee_paid?: true
    fee_due?: true
    is_active?: true
    converted_from_lead_id?: true
    notes?: true
    created_at?: true
    updated_at?: true
    tenant_id?: true
    user_id?: true
  }

  export type StudentsCountAggregateInputType = {
    id?: true
    name?: true
    phone?: true
    email?: true
    parent_mobile?: true
    batch_id?: true
    enrollment_date?: true
    total_fee?: true
    fee_paid?: true
    fee_due?: true
    is_active?: true
    converted_from_lead_id?: true
    notes?: true
    created_at?: true
    updated_at?: true
    tenant_id?: true
    user_id?: true
    _all?: true
  }

  export type StudentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which students to aggregate.
     */
    where?: studentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of students to fetch.
     */
    orderBy?: studentsOrderByWithRelationInput | studentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: studentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` students from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` students.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned students
    **/
    _count?: true | StudentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StudentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StudentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StudentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StudentsMaxAggregateInputType
  }

  export type GetStudentsAggregateType<T extends StudentsAggregateArgs> = {
        [P in keyof T & keyof AggregateStudents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStudents[P]>
      : GetScalarType<T[P], AggregateStudents[P]>
  }




  export type studentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: studentsWhereInput
    orderBy?: studentsOrderByWithAggregationInput | studentsOrderByWithAggregationInput[]
    by: StudentsScalarFieldEnum[] | StudentsScalarFieldEnum
    having?: studentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StudentsCountAggregateInputType | true
    _avg?: StudentsAvgAggregateInputType
    _sum?: StudentsSumAggregateInputType
    _min?: StudentsMinAggregateInputType
    _max?: StudentsMaxAggregateInputType
  }

  export type StudentsGroupByOutputType = {
    id: number
    name: string
    phone: string
    email: string
    parent_mobile: string | null
    batch_id: number
    enrollment_date: Date
    total_fee: Decimal
    fee_paid: Decimal
    fee_due: Decimal
    is_active: boolean | null
    converted_from_lead_id: number | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    tenant_id: number | null
    user_id: number | null
    _count: StudentsCountAggregateOutputType | null
    _avg: StudentsAvgAggregateOutputType | null
    _sum: StudentsSumAggregateOutputType | null
    _min: StudentsMinAggregateOutputType | null
    _max: StudentsMaxAggregateOutputType | null
  }

  type GetStudentsGroupByPayload<T extends studentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StudentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StudentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StudentsGroupByOutputType[P]>
            : GetScalarType<T[P], StudentsGroupByOutputType[P]>
        }
      >
    >


  export type studentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    parent_mobile?: boolean
    batch_id?: boolean
    enrollment_date?: boolean
    total_fee?: boolean
    fee_paid?: boolean
    fee_due?: boolean
    is_active?: boolean
    converted_from_lead_id?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    user_id?: boolean
    tenants?: boolean | students$tenantsArgs<ExtArgs>
    users?: boolean | students$usersArgs<ExtArgs>
  }, ExtArgs["result"]["students"]>

  export type studentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    parent_mobile?: boolean
    batch_id?: boolean
    enrollment_date?: boolean
    total_fee?: boolean
    fee_paid?: boolean
    fee_due?: boolean
    is_active?: boolean
    converted_from_lead_id?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    user_id?: boolean
    tenants?: boolean | students$tenantsArgs<ExtArgs>
    users?: boolean | students$usersArgs<ExtArgs>
  }, ExtArgs["result"]["students"]>

  export type studentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    parent_mobile?: boolean
    batch_id?: boolean
    enrollment_date?: boolean
    total_fee?: boolean
    fee_paid?: boolean
    fee_due?: boolean
    is_active?: boolean
    converted_from_lead_id?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    user_id?: boolean
    tenants?: boolean | students$tenantsArgs<ExtArgs>
    users?: boolean | students$usersArgs<ExtArgs>
  }, ExtArgs["result"]["students"]>

  export type studentsSelectScalar = {
    id?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    parent_mobile?: boolean
    batch_id?: boolean
    enrollment_date?: boolean
    total_fee?: boolean
    fee_paid?: boolean
    fee_due?: boolean
    is_active?: boolean
    converted_from_lead_id?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    tenant_id?: boolean
    user_id?: boolean
  }

  export type studentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "phone" | "email" | "parent_mobile" | "batch_id" | "enrollment_date" | "total_fee" | "fee_paid" | "fee_due" | "is_active" | "converted_from_lead_id" | "notes" | "created_at" | "updated_at" | "tenant_id" | "user_id", ExtArgs["result"]["students"]>
  export type studentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | students$tenantsArgs<ExtArgs>
    users?: boolean | students$usersArgs<ExtArgs>
  }
  export type studentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | students$tenantsArgs<ExtArgs>
    users?: boolean | students$usersArgs<ExtArgs>
  }
  export type studentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | students$tenantsArgs<ExtArgs>
    users?: boolean | students$usersArgs<ExtArgs>
  }

  export type $studentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "students"
    objects: {
      tenants: Prisma.$tenantsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      phone: string
      email: string
      parent_mobile: string | null
      batch_id: number
      enrollment_date: Date
      total_fee: Prisma.Decimal
      fee_paid: Prisma.Decimal
      fee_due: Prisma.Decimal
      is_active: boolean | null
      converted_from_lead_id: number | null
      notes: string | null
      created_at: Date | null
      updated_at: Date | null
      tenant_id: number | null
      user_id: number | null
    }, ExtArgs["result"]["students"]>
    composites: {}
  }

  type studentsGetPayload<S extends boolean | null | undefined | studentsDefaultArgs> = $Result.GetResult<Prisma.$studentsPayload, S>

  type studentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<studentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StudentsCountAggregateInputType | true
    }

  export interface studentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['students'], meta: { name: 'students' } }
    /**
     * Find zero or one Students that matches the filter.
     * @param {studentsFindUniqueArgs} args - Arguments to find a Students
     * @example
     * // Get one Students
     * const students = await prisma.students.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends studentsFindUniqueArgs>(args: SelectSubset<T, studentsFindUniqueArgs<ExtArgs>>): Prisma__studentsClient<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Students that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {studentsFindUniqueOrThrowArgs} args - Arguments to find a Students
     * @example
     * // Get one Students
     * const students = await prisma.students.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends studentsFindUniqueOrThrowArgs>(args: SelectSubset<T, studentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__studentsClient<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Students that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {studentsFindFirstArgs} args - Arguments to find a Students
     * @example
     * // Get one Students
     * const students = await prisma.students.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends studentsFindFirstArgs>(args?: SelectSubset<T, studentsFindFirstArgs<ExtArgs>>): Prisma__studentsClient<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Students that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {studentsFindFirstOrThrowArgs} args - Arguments to find a Students
     * @example
     * // Get one Students
     * const students = await prisma.students.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends studentsFindFirstOrThrowArgs>(args?: SelectSubset<T, studentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__studentsClient<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Students that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {studentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Students
     * const students = await prisma.students.findMany()
     * 
     * // Get first 10 Students
     * const students = await prisma.students.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const studentsWithIdOnly = await prisma.students.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends studentsFindManyArgs>(args?: SelectSubset<T, studentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Students.
     * @param {studentsCreateArgs} args - Arguments to create a Students.
     * @example
     * // Create one Students
     * const Students = await prisma.students.create({
     *   data: {
     *     // ... data to create a Students
     *   }
     * })
     * 
     */
    create<T extends studentsCreateArgs>(args: SelectSubset<T, studentsCreateArgs<ExtArgs>>): Prisma__studentsClient<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Students.
     * @param {studentsCreateManyArgs} args - Arguments to create many Students.
     * @example
     * // Create many Students
     * const students = await prisma.students.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends studentsCreateManyArgs>(args?: SelectSubset<T, studentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Students and returns the data saved in the database.
     * @param {studentsCreateManyAndReturnArgs} args - Arguments to create many Students.
     * @example
     * // Create many Students
     * const students = await prisma.students.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Students and only return the `id`
     * const studentsWithIdOnly = await prisma.students.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends studentsCreateManyAndReturnArgs>(args?: SelectSubset<T, studentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Students.
     * @param {studentsDeleteArgs} args - Arguments to delete one Students.
     * @example
     * // Delete one Students
     * const Students = await prisma.students.delete({
     *   where: {
     *     // ... filter to delete one Students
     *   }
     * })
     * 
     */
    delete<T extends studentsDeleteArgs>(args: SelectSubset<T, studentsDeleteArgs<ExtArgs>>): Prisma__studentsClient<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Students.
     * @param {studentsUpdateArgs} args - Arguments to update one Students.
     * @example
     * // Update one Students
     * const students = await prisma.students.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends studentsUpdateArgs>(args: SelectSubset<T, studentsUpdateArgs<ExtArgs>>): Prisma__studentsClient<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Students.
     * @param {studentsDeleteManyArgs} args - Arguments to filter Students to delete.
     * @example
     * // Delete a few Students
     * const { count } = await prisma.students.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends studentsDeleteManyArgs>(args?: SelectSubset<T, studentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Students.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {studentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Students
     * const students = await prisma.students.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends studentsUpdateManyArgs>(args: SelectSubset<T, studentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Students and returns the data updated in the database.
     * @param {studentsUpdateManyAndReturnArgs} args - Arguments to update many Students.
     * @example
     * // Update many Students
     * const students = await prisma.students.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Students and only return the `id`
     * const studentsWithIdOnly = await prisma.students.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends studentsUpdateManyAndReturnArgs>(args: SelectSubset<T, studentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Students.
     * @param {studentsUpsertArgs} args - Arguments to update or create a Students.
     * @example
     * // Update or create a Students
     * const students = await prisma.students.upsert({
     *   create: {
     *     // ... data to create a Students
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Students we want to update
     *   }
     * })
     */
    upsert<T extends studentsUpsertArgs>(args: SelectSubset<T, studentsUpsertArgs<ExtArgs>>): Prisma__studentsClient<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Students.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {studentsCountArgs} args - Arguments to filter Students to count.
     * @example
     * // Count the number of Students
     * const count = await prisma.students.count({
     *   where: {
     *     // ... the filter for the Students we want to count
     *   }
     * })
    **/
    count<T extends studentsCountArgs>(
      args?: Subset<T, studentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StudentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Students.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StudentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StudentsAggregateArgs>(args: Subset<T, StudentsAggregateArgs>): Prisma.PrismaPromise<GetStudentsAggregateType<T>>

    /**
     * Group by Students.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {studentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends studentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: studentsGroupByArgs['orderBy'] }
        : { orderBy?: studentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, studentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the students model
   */
  readonly fields: studentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for students.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__studentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tenants<T extends students$tenantsArgs<ExtArgs> = {}>(args?: Subset<T, students$tenantsArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends students$usersArgs<ExtArgs> = {}>(args?: Subset<T, students$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the students model
   */
  interface studentsFieldRefs {
    readonly id: FieldRef<"students", 'Int'>
    readonly name: FieldRef<"students", 'String'>
    readonly phone: FieldRef<"students", 'String'>
    readonly email: FieldRef<"students", 'String'>
    readonly parent_mobile: FieldRef<"students", 'String'>
    readonly batch_id: FieldRef<"students", 'Int'>
    readonly enrollment_date: FieldRef<"students", 'DateTime'>
    readonly total_fee: FieldRef<"students", 'Decimal'>
    readonly fee_paid: FieldRef<"students", 'Decimal'>
    readonly fee_due: FieldRef<"students", 'Decimal'>
    readonly is_active: FieldRef<"students", 'Boolean'>
    readonly converted_from_lead_id: FieldRef<"students", 'Int'>
    readonly notes: FieldRef<"students", 'String'>
    readonly created_at: FieldRef<"students", 'DateTime'>
    readonly updated_at: FieldRef<"students", 'DateTime'>
    readonly tenant_id: FieldRef<"students", 'Int'>
    readonly user_id: FieldRef<"students", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * students findUnique
   */
  export type studentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * Filter, which students to fetch.
     */
    where: studentsWhereUniqueInput
  }

  /**
   * students findUniqueOrThrow
   */
  export type studentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * Filter, which students to fetch.
     */
    where: studentsWhereUniqueInput
  }

  /**
   * students findFirst
   */
  export type studentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * Filter, which students to fetch.
     */
    where?: studentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of students to fetch.
     */
    orderBy?: studentsOrderByWithRelationInput | studentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for students.
     */
    cursor?: studentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` students from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` students.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of students.
     */
    distinct?: StudentsScalarFieldEnum | StudentsScalarFieldEnum[]
  }

  /**
   * students findFirstOrThrow
   */
  export type studentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * Filter, which students to fetch.
     */
    where?: studentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of students to fetch.
     */
    orderBy?: studentsOrderByWithRelationInput | studentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for students.
     */
    cursor?: studentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` students from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` students.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of students.
     */
    distinct?: StudentsScalarFieldEnum | StudentsScalarFieldEnum[]
  }

  /**
   * students findMany
   */
  export type studentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * Filter, which students to fetch.
     */
    where?: studentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of students to fetch.
     */
    orderBy?: studentsOrderByWithRelationInput | studentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing students.
     */
    cursor?: studentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` students from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` students.
     */
    skip?: number
    distinct?: StudentsScalarFieldEnum | StudentsScalarFieldEnum[]
  }

  /**
   * students create
   */
  export type studentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * The data needed to create a students.
     */
    data: XOR<studentsCreateInput, studentsUncheckedCreateInput>
  }

  /**
   * students createMany
   */
  export type studentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many students.
     */
    data: studentsCreateManyInput | studentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * students createManyAndReturn
   */
  export type studentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * The data used to create many students.
     */
    data: studentsCreateManyInput | studentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * students update
   */
  export type studentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * The data needed to update a students.
     */
    data: XOR<studentsUpdateInput, studentsUncheckedUpdateInput>
    /**
     * Choose, which students to update.
     */
    where: studentsWhereUniqueInput
  }

  /**
   * students updateMany
   */
  export type studentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update students.
     */
    data: XOR<studentsUpdateManyMutationInput, studentsUncheckedUpdateManyInput>
    /**
     * Filter which students to update
     */
    where?: studentsWhereInput
    /**
     * Limit how many students to update.
     */
    limit?: number
  }

  /**
   * students updateManyAndReturn
   */
  export type studentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * The data used to update students.
     */
    data: XOR<studentsUpdateManyMutationInput, studentsUncheckedUpdateManyInput>
    /**
     * Filter which students to update
     */
    where?: studentsWhereInput
    /**
     * Limit how many students to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * students upsert
   */
  export type studentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * The filter to search for the students to update in case it exists.
     */
    where: studentsWhereUniqueInput
    /**
     * In case the students found by the `where` argument doesn't exist, create a new students with this data.
     */
    create: XOR<studentsCreateInput, studentsUncheckedCreateInput>
    /**
     * In case the students was found with the provided `where` argument, update it with this data.
     */
    update: XOR<studentsUpdateInput, studentsUncheckedUpdateInput>
  }

  /**
   * students delete
   */
  export type studentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    /**
     * Filter which students to delete.
     */
    where: studentsWhereUniqueInput
  }

  /**
   * students deleteMany
   */
  export type studentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which students to delete
     */
    where?: studentsWhereInput
    /**
     * Limit how many students to delete.
     */
    limit?: number
  }

  /**
   * students.tenants
   */
  export type students$tenantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    where?: tenantsWhereInput
  }

  /**
   * students.users
   */
  export type students$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * students without action
   */
  export type studentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
  }


  /**
   * Model tenants
   */

  export type AggregateTenants = {
    _count: TenantsCountAggregateOutputType | null
    _avg: TenantsAvgAggregateOutputType | null
    _sum: TenantsSumAggregateOutputType | null
    _min: TenantsMinAggregateOutputType | null
    _max: TenantsMaxAggregateOutputType | null
  }

  export type TenantsAvgAggregateOutputType = {
    id: number | null
  }

  export type TenantsSumAggregateOutputType = {
    id: number | null
  }

  export type TenantsMinAggregateOutputType = {
    id: number | null
    name: string | null
    subdomain: string | null
    active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TenantsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    subdomain: string | null
    active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type TenantsCountAggregateOutputType = {
    id: number
    name: number
    subdomain: number
    active: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type TenantsAvgAggregateInputType = {
    id?: true
  }

  export type TenantsSumAggregateInputType = {
    id?: true
  }

  export type TenantsMinAggregateInputType = {
    id?: true
    name?: true
    subdomain?: true
    active?: true
    created_at?: true
    updated_at?: true
  }

  export type TenantsMaxAggregateInputType = {
    id?: true
    name?: true
    subdomain?: true
    active?: true
    created_at?: true
    updated_at?: true
  }

  export type TenantsCountAggregateInputType = {
    id?: true
    name?: true
    subdomain?: true
    active?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type TenantsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tenants to aggregate.
     */
    where?: tenantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tenants to fetch.
     */
    orderBy?: tenantsOrderByWithRelationInput | tenantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tenantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tenants
    **/
    _count?: true | TenantsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TenantsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TenantsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TenantsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TenantsMaxAggregateInputType
  }

  export type GetTenantsAggregateType<T extends TenantsAggregateArgs> = {
        [P in keyof T & keyof AggregateTenants]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTenants[P]>
      : GetScalarType<T[P], AggregateTenants[P]>
  }




  export type tenantsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tenantsWhereInput
    orderBy?: tenantsOrderByWithAggregationInput | tenantsOrderByWithAggregationInput[]
    by: TenantsScalarFieldEnum[] | TenantsScalarFieldEnum
    having?: tenantsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TenantsCountAggregateInputType | true
    _avg?: TenantsAvgAggregateInputType
    _sum?: TenantsSumAggregateInputType
    _min?: TenantsMinAggregateInputType
    _max?: TenantsMaxAggregateInputType
  }

  export type TenantsGroupByOutputType = {
    id: number
    name: string
    subdomain: string
    active: boolean
    created_at: Date
    updated_at: Date
    _count: TenantsCountAggregateOutputType | null
    _avg: TenantsAvgAggregateOutputType | null
    _sum: TenantsSumAggregateOutputType | null
    _min: TenantsMinAggregateOutputType | null
    _max: TenantsMaxAggregateOutputType | null
  }

  type GetTenantsGroupByPayload<T extends tenantsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TenantsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TenantsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TenantsGroupByOutputType[P]>
            : GetScalarType<T[P], TenantsGroupByOutputType[P]>
        }
      >
    >


  export type tenantsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    subdomain?: boolean
    active?: boolean
    created_at?: boolean
    updated_at?: boolean
    batches?: boolean | tenants$batchesArgs<ExtArgs>
    courses?: boolean | tenants$coursesArgs<ExtArgs>
    follow_ups?: boolean | tenants$follow_upsArgs<ExtArgs>
    leads?: boolean | tenants$leadsArgs<ExtArgs>
    password_reset_tokens?: boolean | tenants$password_reset_tokensArgs<ExtArgs>
    payments?: boolean | tenants$paymentsArgs<ExtArgs>
    settings?: boolean | tenants$settingsArgs<ExtArgs>
    students?: boolean | tenants$studentsArgs<ExtArgs>
    users?: boolean | tenants$usersArgs<ExtArgs>
    _count?: boolean | TenantsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tenants"]>

  export type tenantsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    subdomain?: boolean
    active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["tenants"]>

  export type tenantsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    subdomain?: boolean
    active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["tenants"]>

  export type tenantsSelectScalar = {
    id?: boolean
    name?: boolean
    subdomain?: boolean
    active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type tenantsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "subdomain" | "active" | "created_at" | "updated_at", ExtArgs["result"]["tenants"]>
  export type tenantsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batches?: boolean | tenants$batchesArgs<ExtArgs>
    courses?: boolean | tenants$coursesArgs<ExtArgs>
    follow_ups?: boolean | tenants$follow_upsArgs<ExtArgs>
    leads?: boolean | tenants$leadsArgs<ExtArgs>
    password_reset_tokens?: boolean | tenants$password_reset_tokensArgs<ExtArgs>
    payments?: boolean | tenants$paymentsArgs<ExtArgs>
    settings?: boolean | tenants$settingsArgs<ExtArgs>
    students?: boolean | tenants$studentsArgs<ExtArgs>
    users?: boolean | tenants$usersArgs<ExtArgs>
    _count?: boolean | TenantsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tenantsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tenantsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tenantsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tenants"
    objects: {
      batches: Prisma.$batchesPayload<ExtArgs>[]
      courses: Prisma.$coursesPayload<ExtArgs>[]
      follow_ups: Prisma.$follow_upsPayload<ExtArgs>[]
      leads: Prisma.$leadsPayload<ExtArgs>[]
      password_reset_tokens: Prisma.$password_reset_tokensPayload<ExtArgs>[]
      payments: Prisma.$paymentsPayload<ExtArgs>[]
      settings: Prisma.$settingsPayload<ExtArgs>[]
      students: Prisma.$studentsPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      subdomain: string
      active: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["tenants"]>
    composites: {}
  }

  type tenantsGetPayload<S extends boolean | null | undefined | tenantsDefaultArgs> = $Result.GetResult<Prisma.$tenantsPayload, S>

  type tenantsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tenantsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TenantsCountAggregateInputType | true
    }

  export interface tenantsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tenants'], meta: { name: 'tenants' } }
    /**
     * Find zero or one Tenants that matches the filter.
     * @param {tenantsFindUniqueArgs} args - Arguments to find a Tenants
     * @example
     * // Get one Tenants
     * const tenants = await prisma.tenants.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tenantsFindUniqueArgs>(args: SelectSubset<T, tenantsFindUniqueArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tenants that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tenantsFindUniqueOrThrowArgs} args - Arguments to find a Tenants
     * @example
     * // Get one Tenants
     * const tenants = await prisma.tenants.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tenantsFindUniqueOrThrowArgs>(args: SelectSubset<T, tenantsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tenants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tenantsFindFirstArgs} args - Arguments to find a Tenants
     * @example
     * // Get one Tenants
     * const tenants = await prisma.tenants.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tenantsFindFirstArgs>(args?: SelectSubset<T, tenantsFindFirstArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tenants that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tenantsFindFirstOrThrowArgs} args - Arguments to find a Tenants
     * @example
     * // Get one Tenants
     * const tenants = await prisma.tenants.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tenantsFindFirstOrThrowArgs>(args?: SelectSubset<T, tenantsFindFirstOrThrowArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tenants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tenantsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tenants
     * const tenants = await prisma.tenants.findMany()
     * 
     * // Get first 10 Tenants
     * const tenants = await prisma.tenants.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tenantsWithIdOnly = await prisma.tenants.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tenantsFindManyArgs>(args?: SelectSubset<T, tenantsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tenants.
     * @param {tenantsCreateArgs} args - Arguments to create a Tenants.
     * @example
     * // Create one Tenants
     * const Tenants = await prisma.tenants.create({
     *   data: {
     *     // ... data to create a Tenants
     *   }
     * })
     * 
     */
    create<T extends tenantsCreateArgs>(args: SelectSubset<T, tenantsCreateArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tenants.
     * @param {tenantsCreateManyArgs} args - Arguments to create many Tenants.
     * @example
     * // Create many Tenants
     * const tenants = await prisma.tenants.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tenantsCreateManyArgs>(args?: SelectSubset<T, tenantsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tenants and returns the data saved in the database.
     * @param {tenantsCreateManyAndReturnArgs} args - Arguments to create many Tenants.
     * @example
     * // Create many Tenants
     * const tenants = await prisma.tenants.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tenants and only return the `id`
     * const tenantsWithIdOnly = await prisma.tenants.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tenantsCreateManyAndReturnArgs>(args?: SelectSubset<T, tenantsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tenants.
     * @param {tenantsDeleteArgs} args - Arguments to delete one Tenants.
     * @example
     * // Delete one Tenants
     * const Tenants = await prisma.tenants.delete({
     *   where: {
     *     // ... filter to delete one Tenants
     *   }
     * })
     * 
     */
    delete<T extends tenantsDeleteArgs>(args: SelectSubset<T, tenantsDeleteArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tenants.
     * @param {tenantsUpdateArgs} args - Arguments to update one Tenants.
     * @example
     * // Update one Tenants
     * const tenants = await prisma.tenants.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tenantsUpdateArgs>(args: SelectSubset<T, tenantsUpdateArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tenants.
     * @param {tenantsDeleteManyArgs} args - Arguments to filter Tenants to delete.
     * @example
     * // Delete a few Tenants
     * const { count } = await prisma.tenants.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tenantsDeleteManyArgs>(args?: SelectSubset<T, tenantsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tenantsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tenants
     * const tenants = await prisma.tenants.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tenantsUpdateManyArgs>(args: SelectSubset<T, tenantsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tenants and returns the data updated in the database.
     * @param {tenantsUpdateManyAndReturnArgs} args - Arguments to update many Tenants.
     * @example
     * // Update many Tenants
     * const tenants = await prisma.tenants.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tenants and only return the `id`
     * const tenantsWithIdOnly = await prisma.tenants.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tenantsUpdateManyAndReturnArgs>(args: SelectSubset<T, tenantsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tenants.
     * @param {tenantsUpsertArgs} args - Arguments to update or create a Tenants.
     * @example
     * // Update or create a Tenants
     * const tenants = await prisma.tenants.upsert({
     *   create: {
     *     // ... data to create a Tenants
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tenants we want to update
     *   }
     * })
     */
    upsert<T extends tenantsUpsertArgs>(args: SelectSubset<T, tenantsUpsertArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tenantsCountArgs} args - Arguments to filter Tenants to count.
     * @example
     * // Count the number of Tenants
     * const count = await prisma.tenants.count({
     *   where: {
     *     // ... the filter for the Tenants we want to count
     *   }
     * })
    **/
    count<T extends tenantsCountArgs>(
      args?: Subset<T, tenantsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TenantsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TenantsAggregateArgs>(args: Subset<T, TenantsAggregateArgs>): Prisma.PrismaPromise<GetTenantsAggregateType<T>>

    /**
     * Group by Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tenantsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tenantsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tenantsGroupByArgs['orderBy'] }
        : { orderBy?: tenantsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tenantsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTenantsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tenants model
   */
  readonly fields: tenantsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tenants.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tenantsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    batches<T extends tenants$batchesArgs<ExtArgs> = {}>(args?: Subset<T, tenants$batchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    courses<T extends tenants$coursesArgs<ExtArgs> = {}>(args?: Subset<T, tenants$coursesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$coursesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    follow_ups<T extends tenants$follow_upsArgs<ExtArgs> = {}>(args?: Subset<T, tenants$follow_upsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    leads<T extends tenants$leadsArgs<ExtArgs> = {}>(args?: Subset<T, tenants$leadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$leadsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    password_reset_tokens<T extends tenants$password_reset_tokensArgs<ExtArgs> = {}>(args?: Subset<T, tenants$password_reset_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    payments<T extends tenants$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, tenants$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    settings<T extends tenants$settingsArgs<ExtArgs> = {}>(args?: Subset<T, tenants$settingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$settingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    students<T extends tenants$studentsArgs<ExtArgs> = {}>(args?: Subset<T, tenants$studentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends tenants$usersArgs<ExtArgs> = {}>(args?: Subset<T, tenants$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tenants model
   */
  interface tenantsFieldRefs {
    readonly id: FieldRef<"tenants", 'Int'>
    readonly name: FieldRef<"tenants", 'String'>
    readonly subdomain: FieldRef<"tenants", 'String'>
    readonly active: FieldRef<"tenants", 'Boolean'>
    readonly created_at: FieldRef<"tenants", 'DateTime'>
    readonly updated_at: FieldRef<"tenants", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tenants findUnique
   */
  export type tenantsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * Filter, which tenants to fetch.
     */
    where: tenantsWhereUniqueInput
  }

  /**
   * tenants findUniqueOrThrow
   */
  export type tenantsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * Filter, which tenants to fetch.
     */
    where: tenantsWhereUniqueInput
  }

  /**
   * tenants findFirst
   */
  export type tenantsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * Filter, which tenants to fetch.
     */
    where?: tenantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tenants to fetch.
     */
    orderBy?: tenantsOrderByWithRelationInput | tenantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tenants.
     */
    cursor?: tenantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tenants.
     */
    distinct?: TenantsScalarFieldEnum | TenantsScalarFieldEnum[]
  }

  /**
   * tenants findFirstOrThrow
   */
  export type tenantsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * Filter, which tenants to fetch.
     */
    where?: tenantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tenants to fetch.
     */
    orderBy?: tenantsOrderByWithRelationInput | tenantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tenants.
     */
    cursor?: tenantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tenants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tenants.
     */
    distinct?: TenantsScalarFieldEnum | TenantsScalarFieldEnum[]
  }

  /**
   * tenants findMany
   */
  export type tenantsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * Filter, which tenants to fetch.
     */
    where?: tenantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tenants to fetch.
     */
    orderBy?: tenantsOrderByWithRelationInput | tenantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tenants.
     */
    cursor?: tenantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tenants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tenants.
     */
    skip?: number
    distinct?: TenantsScalarFieldEnum | TenantsScalarFieldEnum[]
  }

  /**
   * tenants create
   */
  export type tenantsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * The data needed to create a tenants.
     */
    data: XOR<tenantsCreateInput, tenantsUncheckedCreateInput>
  }

  /**
   * tenants createMany
   */
  export type tenantsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tenants.
     */
    data: tenantsCreateManyInput | tenantsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tenants createManyAndReturn
   */
  export type tenantsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * The data used to create many tenants.
     */
    data: tenantsCreateManyInput | tenantsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tenants update
   */
  export type tenantsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * The data needed to update a tenants.
     */
    data: XOR<tenantsUpdateInput, tenantsUncheckedUpdateInput>
    /**
     * Choose, which tenants to update.
     */
    where: tenantsWhereUniqueInput
  }

  /**
   * tenants updateMany
   */
  export type tenantsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tenants.
     */
    data: XOR<tenantsUpdateManyMutationInput, tenantsUncheckedUpdateManyInput>
    /**
     * Filter which tenants to update
     */
    where?: tenantsWhereInput
    /**
     * Limit how many tenants to update.
     */
    limit?: number
  }

  /**
   * tenants updateManyAndReturn
   */
  export type tenantsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * The data used to update tenants.
     */
    data: XOR<tenantsUpdateManyMutationInput, tenantsUncheckedUpdateManyInput>
    /**
     * Filter which tenants to update
     */
    where?: tenantsWhereInput
    /**
     * Limit how many tenants to update.
     */
    limit?: number
  }

  /**
   * tenants upsert
   */
  export type tenantsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * The filter to search for the tenants to update in case it exists.
     */
    where: tenantsWhereUniqueInput
    /**
     * In case the tenants found by the `where` argument doesn't exist, create a new tenants with this data.
     */
    create: XOR<tenantsCreateInput, tenantsUncheckedCreateInput>
    /**
     * In case the tenants was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tenantsUpdateInput, tenantsUncheckedUpdateInput>
  }

  /**
   * tenants delete
   */
  export type tenantsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    /**
     * Filter which tenants to delete.
     */
    where: tenantsWhereUniqueInput
  }

  /**
   * tenants deleteMany
   */
  export type tenantsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tenants to delete
     */
    where?: tenantsWhereInput
    /**
     * Limit how many tenants to delete.
     */
    limit?: number
  }

  /**
   * tenants.batches
   */
  export type tenants$batchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    where?: batchesWhereInput
    orderBy?: batchesOrderByWithRelationInput | batchesOrderByWithRelationInput[]
    cursor?: batchesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BatchesScalarFieldEnum | BatchesScalarFieldEnum[]
  }

  /**
   * tenants.courses
   */
  export type tenants$coursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the courses
     */
    select?: coursesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the courses
     */
    omit?: coursesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: coursesInclude<ExtArgs> | null
    where?: coursesWhereInput
    orderBy?: coursesOrderByWithRelationInput | coursesOrderByWithRelationInput[]
    cursor?: coursesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CoursesScalarFieldEnum | CoursesScalarFieldEnum[]
  }

  /**
   * tenants.follow_ups
   */
  export type tenants$follow_upsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    where?: follow_upsWhereInput
    orderBy?: follow_upsOrderByWithRelationInput | follow_upsOrderByWithRelationInput[]
    cursor?: follow_upsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Follow_upsScalarFieldEnum | Follow_upsScalarFieldEnum[]
  }

  /**
   * tenants.leads
   */
  export type tenants$leadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the leads
     */
    select?: leadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the leads
     */
    omit?: leadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: leadsInclude<ExtArgs> | null
    where?: leadsWhereInput
    orderBy?: leadsOrderByWithRelationInput | leadsOrderByWithRelationInput[]
    cursor?: leadsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LeadsScalarFieldEnum | LeadsScalarFieldEnum[]
  }

  /**
   * tenants.password_reset_tokens
   */
  export type tenants$password_reset_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    where?: password_reset_tokensWhereInput
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    cursor?: password_reset_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * tenants.payments
   */
  export type tenants$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    where?: paymentsWhereInput
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    cursor?: paymentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * tenants.settings
   */
  export type tenants$settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the settings
     */
    select?: settingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the settings
     */
    omit?: settingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: settingsInclude<ExtArgs> | null
    where?: settingsWhereInput
    orderBy?: settingsOrderByWithRelationInput | settingsOrderByWithRelationInput[]
    cursor?: settingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SettingsScalarFieldEnum | SettingsScalarFieldEnum[]
  }

  /**
   * tenants.students
   */
  export type tenants$studentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    where?: studentsWhereInput
    orderBy?: studentsOrderByWithRelationInput | studentsOrderByWithRelationInput[]
    cursor?: studentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StudentsScalarFieldEnum | StudentsScalarFieldEnum[]
  }

  /**
   * tenants.users
   */
  export type tenants$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * tenants without action
   */
  export type tenantsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    tenant_id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    tenant_id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    email: string | null
    name: string | null
    role: $Enums.user_role | null
    created_at: Date | null
    phone: string | null
    specialization: string | null
    bio: string | null
    status: string | null
    tenant_id: number | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    email: string | null
    name: string | null
    role: $Enums.user_role | null
    created_at: Date | null
    phone: string | null
    specialization: string | null
    bio: string | null
    status: string | null
    tenant_id: number | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    password: number
    email: number
    name: number
    role: number
    created_at: number
    phone: number
    specialization: number
    bio: number
    status: number
    tenant_id: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    tenant_id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    tenant_id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    name?: true
    role?: true
    created_at?: true
    phone?: true
    specialization?: true
    bio?: true
    status?: true
    tenant_id?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    name?: true
    role?: true
    created_at?: true
    phone?: true
    specialization?: true
    bio?: true
    status?: true
    tenant_id?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    email?: true
    name?: true
    role?: true
    created_at?: true
    phone?: true
    specialization?: true
    bio?: true
    status?: true
    tenant_id?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    username: string
    password: string
    email: string
    name: string
    role: $Enums.user_role
    created_at: Date
    phone: string | null
    specialization: string | null
    bio: string | null
    status: string | null
    tenant_id: number | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    created_at?: boolean
    phone?: boolean
    specialization?: boolean
    bio?: boolean
    status?: boolean
    tenant_id?: boolean
    batches?: boolean | users$batchesArgs<ExtArgs>
    follow_up_comments?: boolean | users$follow_up_commentsArgs<ExtArgs>
    follow_ups_follow_ups_assigned_toTousers?: boolean | users$follow_ups_follow_ups_assigned_toTousersArgs<ExtArgs>
    follow_ups_follow_ups_created_byTousers?: boolean | users$follow_ups_follow_ups_created_byTousersArgs<ExtArgs>
    password_reset_tokens?: boolean | users$password_reset_tokensArgs<ExtArgs>
    students?: boolean | users$studentsArgs<ExtArgs>
    tenants?: boolean | users$tenantsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    created_at?: boolean
    phone?: boolean
    specialization?: boolean
    bio?: boolean
    status?: boolean
    tenant_id?: boolean
    tenants?: boolean | users$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    created_at?: boolean
    phone?: boolean
    specialization?: boolean
    bio?: boolean
    status?: boolean
    tenant_id?: boolean
    tenants?: boolean | users$tenantsArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    name?: boolean
    role?: boolean
    created_at?: boolean
    phone?: boolean
    specialization?: boolean
    bio?: boolean
    status?: boolean
    tenant_id?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password" | "email" | "name" | "role" | "created_at" | "phone" | "specialization" | "bio" | "status" | "tenant_id", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    batches?: boolean | users$batchesArgs<ExtArgs>
    follow_up_comments?: boolean | users$follow_up_commentsArgs<ExtArgs>
    follow_ups_follow_ups_assigned_toTousers?: boolean | users$follow_ups_follow_ups_assigned_toTousersArgs<ExtArgs>
    follow_ups_follow_ups_created_byTousers?: boolean | users$follow_ups_follow_ups_created_byTousersArgs<ExtArgs>
    password_reset_tokens?: boolean | users$password_reset_tokensArgs<ExtArgs>
    students?: boolean | users$studentsArgs<ExtArgs>
    tenants?: boolean | users$tenantsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | users$tenantsArgs<ExtArgs>
  }
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tenants?: boolean | users$tenantsArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      batches: Prisma.$batchesPayload<ExtArgs>[]
      follow_up_comments: Prisma.$follow_up_commentsPayload<ExtArgs>[]
      follow_ups_follow_ups_assigned_toTousers: Prisma.$follow_upsPayload<ExtArgs>[]
      follow_ups_follow_ups_created_byTousers: Prisma.$follow_upsPayload<ExtArgs>[]
      password_reset_tokens: Prisma.$password_reset_tokensPayload<ExtArgs>[]
      students: Prisma.$studentsPayload<ExtArgs>[]
      tenants: Prisma.$tenantsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      email: string
      name: string
      role: $Enums.user_role
      created_at: Date
      phone: string | null
      specialization: string | null
      bio: string | null
      status: string | null
      tenant_id: number | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    batches<T extends users$batchesArgs<ExtArgs> = {}>(args?: Subset<T, users$batchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$batchesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    follow_up_comments<T extends users$follow_up_commentsArgs<ExtArgs> = {}>(args?: Subset<T, users$follow_up_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_up_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    follow_ups_follow_ups_assigned_toTousers<T extends users$follow_ups_follow_ups_assigned_toTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$follow_ups_follow_ups_assigned_toTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    follow_ups_follow_ups_created_byTousers<T extends users$follow_ups_follow_ups_created_byTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$follow_ups_follow_ups_created_byTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$follow_upsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    password_reset_tokens<T extends users$password_reset_tokensArgs<ExtArgs> = {}>(args?: Subset<T, users$password_reset_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    students<T extends users$studentsArgs<ExtArgs> = {}>(args?: Subset<T, users$studentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$studentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tenants<T extends users$tenantsArgs<ExtArgs> = {}>(args?: Subset<T, users$tenantsArgs<ExtArgs>>): Prisma__tenantsClient<$Result.GetResult<Prisma.$tenantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'Int'>
    readonly username: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly name: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'user_role'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly phone: FieldRef<"users", 'String'>
    readonly specialization: FieldRef<"users", 'String'>
    readonly bio: FieldRef<"users", 'String'>
    readonly status: FieldRef<"users", 'String'>
    readonly tenant_id: FieldRef<"users", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.batches
   */
  export type users$batchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the batches
     */
    select?: batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the batches
     */
    omit?: batchesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: batchesInclude<ExtArgs> | null
    where?: batchesWhereInput
    orderBy?: batchesOrderByWithRelationInput | batchesOrderByWithRelationInput[]
    cursor?: batchesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BatchesScalarFieldEnum | BatchesScalarFieldEnum[]
  }

  /**
   * users.follow_up_comments
   */
  export type users$follow_up_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_up_comments
     */
    select?: follow_up_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_up_comments
     */
    omit?: follow_up_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_up_commentsInclude<ExtArgs> | null
    where?: follow_up_commentsWhereInput
    orderBy?: follow_up_commentsOrderByWithRelationInput | follow_up_commentsOrderByWithRelationInput[]
    cursor?: follow_up_commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Follow_up_commentsScalarFieldEnum | Follow_up_commentsScalarFieldEnum[]
  }

  /**
   * users.follow_ups_follow_ups_assigned_toTousers
   */
  export type users$follow_ups_follow_ups_assigned_toTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    where?: follow_upsWhereInput
    orderBy?: follow_upsOrderByWithRelationInput | follow_upsOrderByWithRelationInput[]
    cursor?: follow_upsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Follow_upsScalarFieldEnum | Follow_upsScalarFieldEnum[]
  }

  /**
   * users.follow_ups_follow_ups_created_byTousers
   */
  export type users$follow_ups_follow_ups_created_byTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the follow_ups
     */
    select?: follow_upsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the follow_ups
     */
    omit?: follow_upsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: follow_upsInclude<ExtArgs> | null
    where?: follow_upsWhereInput
    orderBy?: follow_upsOrderByWithRelationInput | follow_upsOrderByWithRelationInput[]
    cursor?: follow_upsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Follow_upsScalarFieldEnum | Follow_upsScalarFieldEnum[]
  }

  /**
   * users.password_reset_tokens
   */
  export type users$password_reset_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    where?: password_reset_tokensWhereInput
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    cursor?: password_reset_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * users.students
   */
  export type users$studentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the students
     */
    select?: studentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the students
     */
    omit?: studentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: studentsInclude<ExtArgs> | null
    where?: studentsWhereInput
    orderBy?: studentsOrderByWithRelationInput | studentsOrderByWithRelationInput[]
    cursor?: studentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StudentsScalarFieldEnum | StudentsScalarFieldEnum[]
  }

  /**
   * users.tenants
   */
  export type users$tenantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tenants
     */
    select?: tenantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tenants
     */
    omit?: tenantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tenantsInclude<ExtArgs> | null
    where?: tenantsWhereInput
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AssignmentsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    course_id: 'course_id',
    due_date: 'due_date',
    max_score: 'max_score',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type AssignmentsScalarFieldEnum = (typeof AssignmentsScalarFieldEnum)[keyof typeof AssignmentsScalarFieldEnum]


  export const BatchesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    start_date: 'start_date',
    end_date: 'end_date',
    fee: 'fee',
    is_active: 'is_active',
    created_at: 'created_at',
    trainer_id: 'trainer_id',
    capacity: 'capacity',
    updated_at: 'updated_at',
    tenant_id: 'tenant_id'
  };

  export type BatchesScalarFieldEnum = (typeof BatchesScalarFieldEnum)[keyof typeof BatchesScalarFieldEnum]


  export const Code_snippetsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    language: 'language',
    code: 'code',
    description: 'description',
    user_id: 'user_id',
    course_id: 'course_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Code_snippetsScalarFieldEnum = (typeof Code_snippetsScalarFieldEnum)[keyof typeof Code_snippetsScalarFieldEnum]


  export const CoursesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    duration: 'duration',
    batch_id: 'batch_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    tenant_id: 'tenant_id'
  };

  export type CoursesScalarFieldEnum = (typeof CoursesScalarFieldEnum)[keyof typeof CoursesScalarFieldEnum]


  export const Follow_up_commentsScalarFieldEnum: {
    id: 'id',
    follow_up_id: 'follow_up_id',
    comment: 'comment',
    created_by: 'created_by',
    created_at: 'created_at'
  };

  export type Follow_up_commentsScalarFieldEnum = (typeof Follow_up_commentsScalarFieldEnum)[keyof typeof Follow_up_commentsScalarFieldEnum]


  export const Follow_upsScalarFieldEnum: {
    id: 'id',
    lead_id: 'lead_id',
    follow_up_date: 'follow_up_date',
    comments: 'comments',
    status: 'status',
    assigned_to: 'assigned_to',
    created_by: 'created_by',
    is_completed: 'is_completed',
    completed_at: 'completed_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    type: 'type',
    next_follow_up_date: 'next_follow_up_date',
    tenant_id: 'tenant_id'
  };

  export type Follow_upsScalarFieldEnum = (typeof Follow_upsScalarFieldEnum)[keyof typeof Follow_upsScalarFieldEnum]


  export const LeadsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    phone: 'phone',
    email: 'email',
    source: 'source',
    status: 'status',
    notes: 'notes',
    assigned_to: 'assigned_to',
    created_at: 'created_at',
    updated_at: 'updated_at',
    course: 'course',
    tenant_id: 'tenant_id'
  };

  export type LeadsScalarFieldEnum = (typeof LeadsScalarFieldEnum)[keyof typeof LeadsScalarFieldEnum]


  export const Lesson_plansScalarFieldEnum: {
    id: 'id',
    course_id: 'course_id',
    title: 'title',
    content: 'content',
    week_number: 'week_number',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Lesson_plansScalarFieldEnum = (typeof Lesson_plansScalarFieldEnum)[keyof typeof Lesson_plansScalarFieldEnum]


  export const Password_reset_tokensScalarFieldEnum: {
    id: 'id',
    token: 'token',
    user_id: 'user_id',
    expires_at: 'expires_at',
    created_at: 'created_at',
    is_used: 'is_used',
    tenant_id: 'tenant_id'
  };

  export type Password_reset_tokensScalarFieldEnum = (typeof Password_reset_tokensScalarFieldEnum)[keyof typeof Password_reset_tokensScalarFieldEnum]


  export const PaymentsScalarFieldEnum: {
    id: 'id',
    student_id: 'student_id',
    amount: 'amount',
    payment_date: 'payment_date',
    payment_method: 'payment_method',
    receipt_number: 'receipt_number',
    transaction_id: 'transaction_id',
    notes: 'notes',
    created_at: 'created_at',
    reference: 'reference',
    next_payment_due_date: 'next_payment_due_date',
    tenant_id: 'tenant_id',
    status: 'status'
  };

  export type PaymentsScalarFieldEnum = (typeof PaymentsScalarFieldEnum)[keyof typeof PaymentsScalarFieldEnum]


  export const SessionsScalarFieldEnum: {
    sid: 'sid',
    sess: 'sess',
    expire: 'expire'
  };

  export type SessionsScalarFieldEnum = (typeof SessionsScalarFieldEnum)[keyof typeof SessionsScalarFieldEnum]


  export const SettingsScalarFieldEnum: {
    id: 'id',
    tenant_id: 'tenant_id',
    key: 'key',
    value: 'value',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type SettingsScalarFieldEnum = (typeof SettingsScalarFieldEnum)[keyof typeof SettingsScalarFieldEnum]


  export const StudentsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    phone: 'phone',
    email: 'email',
    parent_mobile: 'parent_mobile',
    batch_id: 'batch_id',
    enrollment_date: 'enrollment_date',
    total_fee: 'total_fee',
    fee_paid: 'fee_paid',
    fee_due: 'fee_due',
    is_active: 'is_active',
    converted_from_lead_id: 'converted_from_lead_id',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at',
    tenant_id: 'tenant_id',
    user_id: 'user_id'
  };

  export type StudentsScalarFieldEnum = (typeof StudentsScalarFieldEnum)[keyof typeof StudentsScalarFieldEnum]


  export const TenantsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    subdomain: 'subdomain',
    active: 'active',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type TenantsScalarFieldEnum = (typeof TenantsScalarFieldEnum)[keyof typeof TenantsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    email: 'email',
    name: 'name',
    role: 'role',
    created_at: 'created_at',
    phone: 'phone',
    specialization: 'specialization',
    bio: 'bio',
    status: 'status',
    tenant_id: 'tenant_id'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'lead_status'
   */
  export type Enumlead_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'lead_status'>
    


  /**
   * Reference to a field of type 'lead_status[]'
   */
  export type ListEnumlead_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'lead_status[]'>
    


  /**
   * Reference to a field of type 'payment_method'
   */
  export type Enumpayment_methodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'payment_method'>
    


  /**
   * Reference to a field of type 'payment_method[]'
   */
  export type ListEnumpayment_methodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'payment_method[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'user_role'
   */
  export type Enumuser_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_role'>
    


  /**
   * Reference to a field of type 'user_role[]'
   */
  export type ListEnumuser_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_role[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type assignmentsWhereInput = {
    AND?: assignmentsWhereInput | assignmentsWhereInput[]
    OR?: assignmentsWhereInput[]
    NOT?: assignmentsWhereInput | assignmentsWhereInput[]
    id?: IntFilter<"assignments"> | number
    title?: StringFilter<"assignments"> | string
    description?: StringFilter<"assignments"> | string
    course_id?: IntNullableFilter<"assignments"> | number | null
    due_date?: DateTimeFilter<"assignments"> | Date | string
    max_score?: IntFilter<"assignments"> | number
    created_at?: DateTimeFilter<"assignments"> | Date | string
    updated_at?: DateTimeFilter<"assignments"> | Date | string
  }

  export type assignmentsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    course_id?: SortOrderInput | SortOrder
    due_date?: SortOrder
    max_score?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type assignmentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: assignmentsWhereInput | assignmentsWhereInput[]
    OR?: assignmentsWhereInput[]
    NOT?: assignmentsWhereInput | assignmentsWhereInput[]
    title?: StringFilter<"assignments"> | string
    description?: StringFilter<"assignments"> | string
    course_id?: IntNullableFilter<"assignments"> | number | null
    due_date?: DateTimeFilter<"assignments"> | Date | string
    max_score?: IntFilter<"assignments"> | number
    created_at?: DateTimeFilter<"assignments"> | Date | string
    updated_at?: DateTimeFilter<"assignments"> | Date | string
  }, "id">

  export type assignmentsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    course_id?: SortOrderInput | SortOrder
    due_date?: SortOrder
    max_score?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: assignmentsCountOrderByAggregateInput
    _avg?: assignmentsAvgOrderByAggregateInput
    _max?: assignmentsMaxOrderByAggregateInput
    _min?: assignmentsMinOrderByAggregateInput
    _sum?: assignmentsSumOrderByAggregateInput
  }

  export type assignmentsScalarWhereWithAggregatesInput = {
    AND?: assignmentsScalarWhereWithAggregatesInput | assignmentsScalarWhereWithAggregatesInput[]
    OR?: assignmentsScalarWhereWithAggregatesInput[]
    NOT?: assignmentsScalarWhereWithAggregatesInput | assignmentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"assignments"> | number
    title?: StringWithAggregatesFilter<"assignments"> | string
    description?: StringWithAggregatesFilter<"assignments"> | string
    course_id?: IntNullableWithAggregatesFilter<"assignments"> | number | null
    due_date?: DateTimeWithAggregatesFilter<"assignments"> | Date | string
    max_score?: IntWithAggregatesFilter<"assignments"> | number
    created_at?: DateTimeWithAggregatesFilter<"assignments"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"assignments"> | Date | string
  }

  export type batchesWhereInput = {
    AND?: batchesWhereInput | batchesWhereInput[]
    OR?: batchesWhereInput[]
    NOT?: batchesWhereInput | batchesWhereInput[]
    id?: IntFilter<"batches"> | number
    name?: StringFilter<"batches"> | string
    description?: StringNullableFilter<"batches"> | string | null
    start_date?: DateTimeFilter<"batches"> | Date | string
    end_date?: DateTimeFilter<"batches"> | Date | string
    fee?: DecimalFilter<"batches"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolNullableFilter<"batches"> | boolean | null
    created_at?: DateTimeNullableFilter<"batches"> | Date | string | null
    trainer_id?: IntNullableFilter<"batches"> | number | null
    capacity?: IntNullableFilter<"batches"> | number | null
    updated_at?: DateTimeNullableFilter<"batches"> | Date | string | null
    tenant_id?: IntNullableFilter<"batches"> | number | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type batchesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    fee?: SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    trainer_id?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    tenants?: tenantsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type batchesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: batchesWhereInput | batchesWhereInput[]
    OR?: batchesWhereInput[]
    NOT?: batchesWhereInput | batchesWhereInput[]
    name?: StringFilter<"batches"> | string
    description?: StringNullableFilter<"batches"> | string | null
    start_date?: DateTimeFilter<"batches"> | Date | string
    end_date?: DateTimeFilter<"batches"> | Date | string
    fee?: DecimalFilter<"batches"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolNullableFilter<"batches"> | boolean | null
    created_at?: DateTimeNullableFilter<"batches"> | Date | string | null
    trainer_id?: IntNullableFilter<"batches"> | number | null
    capacity?: IntNullableFilter<"batches"> | number | null
    updated_at?: DateTimeNullableFilter<"batches"> | Date | string | null
    tenant_id?: IntNullableFilter<"batches"> | number | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type batchesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    fee?: SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    trainer_id?: SortOrderInput | SortOrder
    capacity?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    _count?: batchesCountOrderByAggregateInput
    _avg?: batchesAvgOrderByAggregateInput
    _max?: batchesMaxOrderByAggregateInput
    _min?: batchesMinOrderByAggregateInput
    _sum?: batchesSumOrderByAggregateInput
  }

  export type batchesScalarWhereWithAggregatesInput = {
    AND?: batchesScalarWhereWithAggregatesInput | batchesScalarWhereWithAggregatesInput[]
    OR?: batchesScalarWhereWithAggregatesInput[]
    NOT?: batchesScalarWhereWithAggregatesInput | batchesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"batches"> | number
    name?: StringWithAggregatesFilter<"batches"> | string
    description?: StringNullableWithAggregatesFilter<"batches"> | string | null
    start_date?: DateTimeWithAggregatesFilter<"batches"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"batches"> | Date | string
    fee?: DecimalWithAggregatesFilter<"batches"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolNullableWithAggregatesFilter<"batches"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"batches"> | Date | string | null
    trainer_id?: IntNullableWithAggregatesFilter<"batches"> | number | null
    capacity?: IntNullableWithAggregatesFilter<"batches"> | number | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"batches"> | Date | string | null
    tenant_id?: IntNullableWithAggregatesFilter<"batches"> | number | null
  }

  export type code_snippetsWhereInput = {
    AND?: code_snippetsWhereInput | code_snippetsWhereInput[]
    OR?: code_snippetsWhereInput[]
    NOT?: code_snippetsWhereInput | code_snippetsWhereInput[]
    id?: IntFilter<"code_snippets"> | number
    title?: StringFilter<"code_snippets"> | string
    language?: StringFilter<"code_snippets"> | string
    code?: StringFilter<"code_snippets"> | string
    description?: StringNullableFilter<"code_snippets"> | string | null
    user_id?: IntNullableFilter<"code_snippets"> | number | null
    course_id?: IntNullableFilter<"code_snippets"> | number | null
    created_at?: DateTimeFilter<"code_snippets"> | Date | string
    updated_at?: DateTimeFilter<"code_snippets"> | Date | string
  }

  export type code_snippetsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    language?: SortOrder
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    course_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type code_snippetsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: code_snippetsWhereInput | code_snippetsWhereInput[]
    OR?: code_snippetsWhereInput[]
    NOT?: code_snippetsWhereInput | code_snippetsWhereInput[]
    title?: StringFilter<"code_snippets"> | string
    language?: StringFilter<"code_snippets"> | string
    code?: StringFilter<"code_snippets"> | string
    description?: StringNullableFilter<"code_snippets"> | string | null
    user_id?: IntNullableFilter<"code_snippets"> | number | null
    course_id?: IntNullableFilter<"code_snippets"> | number | null
    created_at?: DateTimeFilter<"code_snippets"> | Date | string
    updated_at?: DateTimeFilter<"code_snippets"> | Date | string
  }, "id">

  export type code_snippetsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    language?: SortOrder
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    course_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: code_snippetsCountOrderByAggregateInput
    _avg?: code_snippetsAvgOrderByAggregateInput
    _max?: code_snippetsMaxOrderByAggregateInput
    _min?: code_snippetsMinOrderByAggregateInput
    _sum?: code_snippetsSumOrderByAggregateInput
  }

  export type code_snippetsScalarWhereWithAggregatesInput = {
    AND?: code_snippetsScalarWhereWithAggregatesInput | code_snippetsScalarWhereWithAggregatesInput[]
    OR?: code_snippetsScalarWhereWithAggregatesInput[]
    NOT?: code_snippetsScalarWhereWithAggregatesInput | code_snippetsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"code_snippets"> | number
    title?: StringWithAggregatesFilter<"code_snippets"> | string
    language?: StringWithAggregatesFilter<"code_snippets"> | string
    code?: StringWithAggregatesFilter<"code_snippets"> | string
    description?: StringNullableWithAggregatesFilter<"code_snippets"> | string | null
    user_id?: IntNullableWithAggregatesFilter<"code_snippets"> | number | null
    course_id?: IntNullableWithAggregatesFilter<"code_snippets"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"code_snippets"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"code_snippets"> | Date | string
  }

  export type coursesWhereInput = {
    AND?: coursesWhereInput | coursesWhereInput[]
    OR?: coursesWhereInput[]
    NOT?: coursesWhereInput | coursesWhereInput[]
    id?: IntFilter<"courses"> | number
    title?: StringFilter<"courses"> | string
    description?: StringNullableFilter<"courses"> | string | null
    duration?: IntFilter<"courses"> | number
    batch_id?: IntNullableFilter<"courses"> | number | null
    created_at?: DateTimeFilter<"courses"> | Date | string
    updated_at?: DateTimeFilter<"courses"> | Date | string
    tenant_id?: IntNullableFilter<"courses"> | number | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }

  export type coursesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    duration?: SortOrder
    batch_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrderInput | SortOrder
    tenants?: tenantsOrderByWithRelationInput
  }

  export type coursesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: coursesWhereInput | coursesWhereInput[]
    OR?: coursesWhereInput[]
    NOT?: coursesWhereInput | coursesWhereInput[]
    title?: StringFilter<"courses"> | string
    description?: StringNullableFilter<"courses"> | string | null
    duration?: IntFilter<"courses"> | number
    batch_id?: IntNullableFilter<"courses"> | number | null
    created_at?: DateTimeFilter<"courses"> | Date | string
    updated_at?: DateTimeFilter<"courses"> | Date | string
    tenant_id?: IntNullableFilter<"courses"> | number | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }, "id">

  export type coursesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    duration?: SortOrder
    batch_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrderInput | SortOrder
    _count?: coursesCountOrderByAggregateInput
    _avg?: coursesAvgOrderByAggregateInput
    _max?: coursesMaxOrderByAggregateInput
    _min?: coursesMinOrderByAggregateInput
    _sum?: coursesSumOrderByAggregateInput
  }

  export type coursesScalarWhereWithAggregatesInput = {
    AND?: coursesScalarWhereWithAggregatesInput | coursesScalarWhereWithAggregatesInput[]
    OR?: coursesScalarWhereWithAggregatesInput[]
    NOT?: coursesScalarWhereWithAggregatesInput | coursesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"courses"> | number
    title?: StringWithAggregatesFilter<"courses"> | string
    description?: StringNullableWithAggregatesFilter<"courses"> | string | null
    duration?: IntWithAggregatesFilter<"courses"> | number
    batch_id?: IntNullableWithAggregatesFilter<"courses"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"courses"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"courses"> | Date | string
    tenant_id?: IntNullableWithAggregatesFilter<"courses"> | number | null
  }

  export type follow_up_commentsWhereInput = {
    AND?: follow_up_commentsWhereInput | follow_up_commentsWhereInput[]
    OR?: follow_up_commentsWhereInput[]
    NOT?: follow_up_commentsWhereInput | follow_up_commentsWhereInput[]
    id?: IntFilter<"follow_up_comments"> | number
    follow_up_id?: IntFilter<"follow_up_comments"> | number
    comment?: StringFilter<"follow_up_comments"> | string
    created_by?: IntNullableFilter<"follow_up_comments"> | number | null
    created_at?: DateTimeFilter<"follow_up_comments"> | Date | string
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    follow_ups?: XOR<Follow_upsScalarRelationFilter, follow_upsWhereInput>
  }

  export type follow_up_commentsOrderByWithRelationInput = {
    id?: SortOrder
    follow_up_id?: SortOrder
    comment?: SortOrder
    created_by?: SortOrderInput | SortOrder
    created_at?: SortOrder
    users?: usersOrderByWithRelationInput
    follow_ups?: follow_upsOrderByWithRelationInput
  }

  export type follow_up_commentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: follow_up_commentsWhereInput | follow_up_commentsWhereInput[]
    OR?: follow_up_commentsWhereInput[]
    NOT?: follow_up_commentsWhereInput | follow_up_commentsWhereInput[]
    follow_up_id?: IntFilter<"follow_up_comments"> | number
    comment?: StringFilter<"follow_up_comments"> | string
    created_by?: IntNullableFilter<"follow_up_comments"> | number | null
    created_at?: DateTimeFilter<"follow_up_comments"> | Date | string
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    follow_ups?: XOR<Follow_upsScalarRelationFilter, follow_upsWhereInput>
  }, "id">

  export type follow_up_commentsOrderByWithAggregationInput = {
    id?: SortOrder
    follow_up_id?: SortOrder
    comment?: SortOrder
    created_by?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: follow_up_commentsCountOrderByAggregateInput
    _avg?: follow_up_commentsAvgOrderByAggregateInput
    _max?: follow_up_commentsMaxOrderByAggregateInput
    _min?: follow_up_commentsMinOrderByAggregateInput
    _sum?: follow_up_commentsSumOrderByAggregateInput
  }

  export type follow_up_commentsScalarWhereWithAggregatesInput = {
    AND?: follow_up_commentsScalarWhereWithAggregatesInput | follow_up_commentsScalarWhereWithAggregatesInput[]
    OR?: follow_up_commentsScalarWhereWithAggregatesInput[]
    NOT?: follow_up_commentsScalarWhereWithAggregatesInput | follow_up_commentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"follow_up_comments"> | number
    follow_up_id?: IntWithAggregatesFilter<"follow_up_comments"> | number
    comment?: StringWithAggregatesFilter<"follow_up_comments"> | string
    created_by?: IntNullableWithAggregatesFilter<"follow_up_comments"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"follow_up_comments"> | Date | string
  }

  export type follow_upsWhereInput = {
    AND?: follow_upsWhereInput | follow_upsWhereInput[]
    OR?: follow_upsWhereInput[]
    NOT?: follow_upsWhereInput | follow_upsWhereInput[]
    id?: IntFilter<"follow_ups"> | number
    lead_id?: IntFilter<"follow_ups"> | number
    follow_up_date?: DateTimeFilter<"follow_ups"> | Date | string
    comments?: StringNullableFilter<"follow_ups"> | string | null
    status?: StringFilter<"follow_ups"> | string
    assigned_to?: IntNullableFilter<"follow_ups"> | number | null
    created_by?: IntNullableFilter<"follow_ups"> | number | null
    is_completed?: BoolNullableFilter<"follow_ups"> | boolean | null
    completed_at?: DateTimeNullableFilter<"follow_ups"> | Date | string | null
    created_at?: DateTimeFilter<"follow_ups"> | Date | string
    updated_at?: DateTimeFilter<"follow_ups"> | Date | string
    type?: StringFilter<"follow_ups"> | string
    next_follow_up_date?: DateTimeNullableFilter<"follow_ups"> | Date | string | null
    tenant_id?: IntNullableFilter<"follow_ups"> | number | null
    follow_up_comments?: Follow_up_commentsListRelationFilter
    users_follow_ups_assigned_toTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    users_follow_ups_created_byTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    leads?: XOR<LeadsScalarRelationFilter, leadsWhereInput>
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }

  export type follow_upsOrderByWithRelationInput = {
    id?: SortOrder
    lead_id?: SortOrder
    follow_up_date?: SortOrder
    comments?: SortOrderInput | SortOrder
    status?: SortOrder
    assigned_to?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    is_completed?: SortOrderInput | SortOrder
    completed_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    type?: SortOrder
    next_follow_up_date?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    follow_up_comments?: follow_up_commentsOrderByRelationAggregateInput
    users_follow_ups_assigned_toTousers?: usersOrderByWithRelationInput
    users_follow_ups_created_byTousers?: usersOrderByWithRelationInput
    leads?: leadsOrderByWithRelationInput
    tenants?: tenantsOrderByWithRelationInput
  }

  export type follow_upsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: follow_upsWhereInput | follow_upsWhereInput[]
    OR?: follow_upsWhereInput[]
    NOT?: follow_upsWhereInput | follow_upsWhereInput[]
    lead_id?: IntFilter<"follow_ups"> | number
    follow_up_date?: DateTimeFilter<"follow_ups"> | Date | string
    comments?: StringNullableFilter<"follow_ups"> | string | null
    status?: StringFilter<"follow_ups"> | string
    assigned_to?: IntNullableFilter<"follow_ups"> | number | null
    created_by?: IntNullableFilter<"follow_ups"> | number | null
    is_completed?: BoolNullableFilter<"follow_ups"> | boolean | null
    completed_at?: DateTimeNullableFilter<"follow_ups"> | Date | string | null
    created_at?: DateTimeFilter<"follow_ups"> | Date | string
    updated_at?: DateTimeFilter<"follow_ups"> | Date | string
    type?: StringFilter<"follow_ups"> | string
    next_follow_up_date?: DateTimeNullableFilter<"follow_ups"> | Date | string | null
    tenant_id?: IntNullableFilter<"follow_ups"> | number | null
    follow_up_comments?: Follow_up_commentsListRelationFilter
    users_follow_ups_assigned_toTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    users_follow_ups_created_byTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    leads?: XOR<LeadsScalarRelationFilter, leadsWhereInput>
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }, "id">

  export type follow_upsOrderByWithAggregationInput = {
    id?: SortOrder
    lead_id?: SortOrder
    follow_up_date?: SortOrder
    comments?: SortOrderInput | SortOrder
    status?: SortOrder
    assigned_to?: SortOrderInput | SortOrder
    created_by?: SortOrderInput | SortOrder
    is_completed?: SortOrderInput | SortOrder
    completed_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    type?: SortOrder
    next_follow_up_date?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    _count?: follow_upsCountOrderByAggregateInput
    _avg?: follow_upsAvgOrderByAggregateInput
    _max?: follow_upsMaxOrderByAggregateInput
    _min?: follow_upsMinOrderByAggregateInput
    _sum?: follow_upsSumOrderByAggregateInput
  }

  export type follow_upsScalarWhereWithAggregatesInput = {
    AND?: follow_upsScalarWhereWithAggregatesInput | follow_upsScalarWhereWithAggregatesInput[]
    OR?: follow_upsScalarWhereWithAggregatesInput[]
    NOT?: follow_upsScalarWhereWithAggregatesInput | follow_upsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"follow_ups"> | number
    lead_id?: IntWithAggregatesFilter<"follow_ups"> | number
    follow_up_date?: DateTimeWithAggregatesFilter<"follow_ups"> | Date | string
    comments?: StringNullableWithAggregatesFilter<"follow_ups"> | string | null
    status?: StringWithAggregatesFilter<"follow_ups"> | string
    assigned_to?: IntNullableWithAggregatesFilter<"follow_ups"> | number | null
    created_by?: IntNullableWithAggregatesFilter<"follow_ups"> | number | null
    is_completed?: BoolNullableWithAggregatesFilter<"follow_ups"> | boolean | null
    completed_at?: DateTimeNullableWithAggregatesFilter<"follow_ups"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"follow_ups"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"follow_ups"> | Date | string
    type?: StringWithAggregatesFilter<"follow_ups"> | string
    next_follow_up_date?: DateTimeNullableWithAggregatesFilter<"follow_ups"> | Date | string | null
    tenant_id?: IntNullableWithAggregatesFilter<"follow_ups"> | number | null
  }

  export type leadsWhereInput = {
    AND?: leadsWhereInput | leadsWhereInput[]
    OR?: leadsWhereInput[]
    NOT?: leadsWhereInput | leadsWhereInput[]
    id?: IntFilter<"leads"> | number
    name?: StringFilter<"leads"> | string
    phone?: StringFilter<"leads"> | string
    email?: StringNullableFilter<"leads"> | string | null
    source?: StringFilter<"leads"> | string
    status?: Enumlead_statusFilter<"leads"> | $Enums.lead_status
    notes?: StringNullableFilter<"leads"> | string | null
    assigned_to?: IntNullableFilter<"leads"> | number | null
    created_at?: DateTimeNullableFilter<"leads"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"leads"> | Date | string | null
    course?: StringNullableFilter<"leads"> | string | null
    tenant_id?: IntNullableFilter<"leads"> | number | null
    follow_ups?: Follow_upsListRelationFilter
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }

  export type leadsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrderInput | SortOrder
    source?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    assigned_to?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    course?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    follow_ups?: follow_upsOrderByRelationAggregateInput
    tenants?: tenantsOrderByWithRelationInput
  }

  export type leadsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: leadsWhereInput | leadsWhereInput[]
    OR?: leadsWhereInput[]
    NOT?: leadsWhereInput | leadsWhereInput[]
    name?: StringFilter<"leads"> | string
    phone?: StringFilter<"leads"> | string
    email?: StringNullableFilter<"leads"> | string | null
    source?: StringFilter<"leads"> | string
    status?: Enumlead_statusFilter<"leads"> | $Enums.lead_status
    notes?: StringNullableFilter<"leads"> | string | null
    assigned_to?: IntNullableFilter<"leads"> | number | null
    created_at?: DateTimeNullableFilter<"leads"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"leads"> | Date | string | null
    course?: StringNullableFilter<"leads"> | string | null
    tenant_id?: IntNullableFilter<"leads"> | number | null
    follow_ups?: Follow_upsListRelationFilter
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }, "id">

  export type leadsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrderInput | SortOrder
    source?: SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    assigned_to?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    course?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    _count?: leadsCountOrderByAggregateInput
    _avg?: leadsAvgOrderByAggregateInput
    _max?: leadsMaxOrderByAggregateInput
    _min?: leadsMinOrderByAggregateInput
    _sum?: leadsSumOrderByAggregateInput
  }

  export type leadsScalarWhereWithAggregatesInput = {
    AND?: leadsScalarWhereWithAggregatesInput | leadsScalarWhereWithAggregatesInput[]
    OR?: leadsScalarWhereWithAggregatesInput[]
    NOT?: leadsScalarWhereWithAggregatesInput | leadsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"leads"> | number
    name?: StringWithAggregatesFilter<"leads"> | string
    phone?: StringWithAggregatesFilter<"leads"> | string
    email?: StringNullableWithAggregatesFilter<"leads"> | string | null
    source?: StringWithAggregatesFilter<"leads"> | string
    status?: Enumlead_statusWithAggregatesFilter<"leads"> | $Enums.lead_status
    notes?: StringNullableWithAggregatesFilter<"leads"> | string | null
    assigned_to?: IntNullableWithAggregatesFilter<"leads"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"leads"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"leads"> | Date | string | null
    course?: StringNullableWithAggregatesFilter<"leads"> | string | null
    tenant_id?: IntNullableWithAggregatesFilter<"leads"> | number | null
  }

  export type lesson_plansWhereInput = {
    AND?: lesson_plansWhereInput | lesson_plansWhereInput[]
    OR?: lesson_plansWhereInput[]
    NOT?: lesson_plansWhereInput | lesson_plansWhereInput[]
    id?: IntFilter<"lesson_plans"> | number
    course_id?: IntFilter<"lesson_plans"> | number
    title?: StringFilter<"lesson_plans"> | string
    content?: StringFilter<"lesson_plans"> | string
    week_number?: IntFilter<"lesson_plans"> | number
    created_at?: DateTimeFilter<"lesson_plans"> | Date | string
    updated_at?: DateTimeFilter<"lesson_plans"> | Date | string
  }

  export type lesson_plansOrderByWithRelationInput = {
    id?: SortOrder
    course_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    week_number?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type lesson_plansWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: lesson_plansWhereInput | lesson_plansWhereInput[]
    OR?: lesson_plansWhereInput[]
    NOT?: lesson_plansWhereInput | lesson_plansWhereInput[]
    course_id?: IntFilter<"lesson_plans"> | number
    title?: StringFilter<"lesson_plans"> | string
    content?: StringFilter<"lesson_plans"> | string
    week_number?: IntFilter<"lesson_plans"> | number
    created_at?: DateTimeFilter<"lesson_plans"> | Date | string
    updated_at?: DateTimeFilter<"lesson_plans"> | Date | string
  }, "id">

  export type lesson_plansOrderByWithAggregationInput = {
    id?: SortOrder
    course_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    week_number?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: lesson_plansCountOrderByAggregateInput
    _avg?: lesson_plansAvgOrderByAggregateInput
    _max?: lesson_plansMaxOrderByAggregateInput
    _min?: lesson_plansMinOrderByAggregateInput
    _sum?: lesson_plansSumOrderByAggregateInput
  }

  export type lesson_plansScalarWhereWithAggregatesInput = {
    AND?: lesson_plansScalarWhereWithAggregatesInput | lesson_plansScalarWhereWithAggregatesInput[]
    OR?: lesson_plansScalarWhereWithAggregatesInput[]
    NOT?: lesson_plansScalarWhereWithAggregatesInput | lesson_plansScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"lesson_plans"> | number
    course_id?: IntWithAggregatesFilter<"lesson_plans"> | number
    title?: StringWithAggregatesFilter<"lesson_plans"> | string
    content?: StringWithAggregatesFilter<"lesson_plans"> | string
    week_number?: IntWithAggregatesFilter<"lesson_plans"> | number
    created_at?: DateTimeWithAggregatesFilter<"lesson_plans"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"lesson_plans"> | Date | string
  }

  export type password_reset_tokensWhereInput = {
    AND?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    OR?: password_reset_tokensWhereInput[]
    NOT?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    id?: IntFilter<"password_reset_tokens"> | number
    token?: StringFilter<"password_reset_tokens"> | string
    user_id?: IntFilter<"password_reset_tokens"> | number
    expires_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    is_used?: BoolFilter<"password_reset_tokens"> | boolean
    tenant_id?: IntNullableFilter<"password_reset_tokens"> | number | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type password_reset_tokensOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    is_used?: SortOrder
    tenant_id?: SortOrderInput | SortOrder
    tenants?: tenantsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type password_reset_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    token?: string
    AND?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    OR?: password_reset_tokensWhereInput[]
    NOT?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    user_id?: IntFilter<"password_reset_tokens"> | number
    expires_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    is_used?: BoolFilter<"password_reset_tokens"> | boolean
    tenant_id?: IntNullableFilter<"password_reset_tokens"> | number | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "token">

  export type password_reset_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    is_used?: SortOrder
    tenant_id?: SortOrderInput | SortOrder
    _count?: password_reset_tokensCountOrderByAggregateInput
    _avg?: password_reset_tokensAvgOrderByAggregateInput
    _max?: password_reset_tokensMaxOrderByAggregateInput
    _min?: password_reset_tokensMinOrderByAggregateInput
    _sum?: password_reset_tokensSumOrderByAggregateInput
  }

  export type password_reset_tokensScalarWhereWithAggregatesInput = {
    AND?: password_reset_tokensScalarWhereWithAggregatesInput | password_reset_tokensScalarWhereWithAggregatesInput[]
    OR?: password_reset_tokensScalarWhereWithAggregatesInput[]
    NOT?: password_reset_tokensScalarWhereWithAggregatesInput | password_reset_tokensScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"password_reset_tokens"> | number
    token?: StringWithAggregatesFilter<"password_reset_tokens"> | string
    user_id?: IntWithAggregatesFilter<"password_reset_tokens"> | number
    expires_at?: DateTimeWithAggregatesFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"password_reset_tokens"> | Date | string
    is_used?: BoolWithAggregatesFilter<"password_reset_tokens"> | boolean
    tenant_id?: IntNullableWithAggregatesFilter<"password_reset_tokens"> | number | null
  }

  export type paymentsWhereInput = {
    AND?: paymentsWhereInput | paymentsWhereInput[]
    OR?: paymentsWhereInput[]
    NOT?: paymentsWhereInput | paymentsWhereInput[]
    id?: IntFilter<"payments"> | number
    student_id?: IntFilter<"payments"> | number
    amount?: DecimalFilter<"payments"> | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFilter<"payments"> | Date | string
    payment_method?: Enumpayment_methodFilter<"payments"> | $Enums.payment_method
    receipt_number?: StringNullableFilter<"payments"> | string | null
    transaction_id?: StringNullableFilter<"payments"> | string | null
    notes?: StringNullableFilter<"payments"> | string | null
    created_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    reference?: StringNullableFilter<"payments"> | string | null
    next_payment_due_date?: DateTimeNullableFilter<"payments"> | Date | string | null
    tenant_id?: IntNullableFilter<"payments"> | number | null
    status?: StringNullableFilter<"payments"> | string | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }

  export type paymentsOrderByWithRelationInput = {
    id?: SortOrder
    student_id?: SortOrder
    amount?: SortOrder
    payment_date?: SortOrder
    payment_method?: SortOrder
    receipt_number?: SortOrderInput | SortOrder
    transaction_id?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    reference?: SortOrderInput | SortOrder
    next_payment_due_date?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    tenants?: tenantsOrderByWithRelationInput
  }

  export type paymentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: paymentsWhereInput | paymentsWhereInput[]
    OR?: paymentsWhereInput[]
    NOT?: paymentsWhereInput | paymentsWhereInput[]
    student_id?: IntFilter<"payments"> | number
    amount?: DecimalFilter<"payments"> | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFilter<"payments"> | Date | string
    payment_method?: Enumpayment_methodFilter<"payments"> | $Enums.payment_method
    receipt_number?: StringNullableFilter<"payments"> | string | null
    transaction_id?: StringNullableFilter<"payments"> | string | null
    notes?: StringNullableFilter<"payments"> | string | null
    created_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    reference?: StringNullableFilter<"payments"> | string | null
    next_payment_due_date?: DateTimeNullableFilter<"payments"> | Date | string | null
    tenant_id?: IntNullableFilter<"payments"> | number | null
    status?: StringNullableFilter<"payments"> | string | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }, "id">

  export type paymentsOrderByWithAggregationInput = {
    id?: SortOrder
    student_id?: SortOrder
    amount?: SortOrder
    payment_date?: SortOrder
    payment_method?: SortOrder
    receipt_number?: SortOrderInput | SortOrder
    transaction_id?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    reference?: SortOrderInput | SortOrder
    next_payment_due_date?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    _count?: paymentsCountOrderByAggregateInput
    _avg?: paymentsAvgOrderByAggregateInput
    _max?: paymentsMaxOrderByAggregateInput
    _min?: paymentsMinOrderByAggregateInput
    _sum?: paymentsSumOrderByAggregateInput
  }

  export type paymentsScalarWhereWithAggregatesInput = {
    AND?: paymentsScalarWhereWithAggregatesInput | paymentsScalarWhereWithAggregatesInput[]
    OR?: paymentsScalarWhereWithAggregatesInput[]
    NOT?: paymentsScalarWhereWithAggregatesInput | paymentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"payments"> | number
    student_id?: IntWithAggregatesFilter<"payments"> | number
    amount?: DecimalWithAggregatesFilter<"payments"> | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeWithAggregatesFilter<"payments"> | Date | string
    payment_method?: Enumpayment_methodWithAggregatesFilter<"payments"> | $Enums.payment_method
    receipt_number?: StringNullableWithAggregatesFilter<"payments"> | string | null
    transaction_id?: StringNullableWithAggregatesFilter<"payments"> | string | null
    notes?: StringNullableWithAggregatesFilter<"payments"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"payments"> | Date | string | null
    reference?: StringNullableWithAggregatesFilter<"payments"> | string | null
    next_payment_due_date?: DateTimeNullableWithAggregatesFilter<"payments"> | Date | string | null
    tenant_id?: IntNullableWithAggregatesFilter<"payments"> | number | null
    status?: StringNullableWithAggregatesFilter<"payments"> | string | null
  }

  export type sessionsWhereInput = {
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    sid?: StringFilter<"sessions"> | string
    sess?: JsonFilter<"sessions">
    expire?: DateTimeFilter<"sessions"> | Date | string
  }

  export type sessionsOrderByWithRelationInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
  }

  export type sessionsWhereUniqueInput = Prisma.AtLeast<{
    sid?: string
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    sess?: JsonFilter<"sessions">
    expire?: DateTimeFilter<"sessions"> | Date | string
  }, "sid">

  export type sessionsOrderByWithAggregationInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
    _count?: sessionsCountOrderByAggregateInput
    _max?: sessionsMaxOrderByAggregateInput
    _min?: sessionsMinOrderByAggregateInput
  }

  export type sessionsScalarWhereWithAggregatesInput = {
    AND?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    OR?: sessionsScalarWhereWithAggregatesInput[]
    NOT?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    sid?: StringWithAggregatesFilter<"sessions"> | string
    sess?: JsonWithAggregatesFilter<"sessions">
    expire?: DateTimeWithAggregatesFilter<"sessions"> | Date | string
  }

  export type settingsWhereInput = {
    AND?: settingsWhereInput | settingsWhereInput[]
    OR?: settingsWhereInput[]
    NOT?: settingsWhereInput | settingsWhereInput[]
    id?: IntFilter<"settings"> | number
    tenant_id?: IntFilter<"settings"> | number
    key?: StringFilter<"settings"> | string
    value?: StringFilter<"settings"> | string
    created_at?: DateTimeFilter<"settings"> | Date | string
    updated_at?: DateTimeFilter<"settings"> | Date | string
    tenants?: XOR<TenantsScalarRelationFilter, tenantsWhereInput>
  }

  export type settingsOrderByWithRelationInput = {
    id?: SortOrder
    tenant_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenants?: tenantsOrderByWithRelationInput
  }

  export type settingsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    tenant_id_key?: settingsTenant_idKeyCompoundUniqueInput
    AND?: settingsWhereInput | settingsWhereInput[]
    OR?: settingsWhereInput[]
    NOT?: settingsWhereInput | settingsWhereInput[]
    tenant_id?: IntFilter<"settings"> | number
    key?: StringFilter<"settings"> | string
    value?: StringFilter<"settings"> | string
    created_at?: DateTimeFilter<"settings"> | Date | string
    updated_at?: DateTimeFilter<"settings"> | Date | string
    tenants?: XOR<TenantsScalarRelationFilter, tenantsWhereInput>
  }, "id" | "tenant_id_key">

  export type settingsOrderByWithAggregationInput = {
    id?: SortOrder
    tenant_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: settingsCountOrderByAggregateInput
    _avg?: settingsAvgOrderByAggregateInput
    _max?: settingsMaxOrderByAggregateInput
    _min?: settingsMinOrderByAggregateInput
    _sum?: settingsSumOrderByAggregateInput
  }

  export type settingsScalarWhereWithAggregatesInput = {
    AND?: settingsScalarWhereWithAggregatesInput | settingsScalarWhereWithAggregatesInput[]
    OR?: settingsScalarWhereWithAggregatesInput[]
    NOT?: settingsScalarWhereWithAggregatesInput | settingsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"settings"> | number
    tenant_id?: IntWithAggregatesFilter<"settings"> | number
    key?: StringWithAggregatesFilter<"settings"> | string
    value?: StringWithAggregatesFilter<"settings"> | string
    created_at?: DateTimeWithAggregatesFilter<"settings"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"settings"> | Date | string
  }

  export type studentsWhereInput = {
    AND?: studentsWhereInput | studentsWhereInput[]
    OR?: studentsWhereInput[]
    NOT?: studentsWhereInput | studentsWhereInput[]
    id?: IntFilter<"students"> | number
    name?: StringFilter<"students"> | string
    phone?: StringFilter<"students"> | string
    email?: StringFilter<"students"> | string
    parent_mobile?: StringNullableFilter<"students"> | string | null
    batch_id?: IntFilter<"students"> | number
    enrollment_date?: DateTimeFilter<"students"> | Date | string
    total_fee?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolNullableFilter<"students"> | boolean | null
    converted_from_lead_id?: IntNullableFilter<"students"> | number | null
    notes?: StringNullableFilter<"students"> | string | null
    created_at?: DateTimeNullableFilter<"students"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"students"> | Date | string | null
    tenant_id?: IntNullableFilter<"students"> | number | null
    user_id?: IntNullableFilter<"students"> | number | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type studentsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    parent_mobile?: SortOrderInput | SortOrder
    batch_id?: SortOrder
    enrollment_date?: SortOrder
    total_fee?: SortOrder
    fee_paid?: SortOrder
    fee_due?: SortOrder
    is_active?: SortOrderInput | SortOrder
    converted_from_lead_id?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    tenants?: tenantsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type studentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    phone?: string
    email?: string
    AND?: studentsWhereInput | studentsWhereInput[]
    OR?: studentsWhereInput[]
    NOT?: studentsWhereInput | studentsWhereInput[]
    name?: StringFilter<"students"> | string
    parent_mobile?: StringNullableFilter<"students"> | string | null
    batch_id?: IntFilter<"students"> | number
    enrollment_date?: DateTimeFilter<"students"> | Date | string
    total_fee?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolNullableFilter<"students"> | boolean | null
    converted_from_lead_id?: IntNullableFilter<"students"> | number | null
    notes?: StringNullableFilter<"students"> | string | null
    created_at?: DateTimeNullableFilter<"students"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"students"> | Date | string | null
    tenant_id?: IntNullableFilter<"students"> | number | null
    user_id?: IntNullableFilter<"students"> | number | null
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id" | "phone" | "email">

  export type studentsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    parent_mobile?: SortOrderInput | SortOrder
    batch_id?: SortOrder
    enrollment_date?: SortOrder
    total_fee?: SortOrder
    fee_paid?: SortOrder
    fee_due?: SortOrder
    is_active?: SortOrderInput | SortOrder
    converted_from_lead_id?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    _count?: studentsCountOrderByAggregateInput
    _avg?: studentsAvgOrderByAggregateInput
    _max?: studentsMaxOrderByAggregateInput
    _min?: studentsMinOrderByAggregateInput
    _sum?: studentsSumOrderByAggregateInput
  }

  export type studentsScalarWhereWithAggregatesInput = {
    AND?: studentsScalarWhereWithAggregatesInput | studentsScalarWhereWithAggregatesInput[]
    OR?: studentsScalarWhereWithAggregatesInput[]
    NOT?: studentsScalarWhereWithAggregatesInput | studentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"students"> | number
    name?: StringWithAggregatesFilter<"students"> | string
    phone?: StringWithAggregatesFilter<"students"> | string
    email?: StringWithAggregatesFilter<"students"> | string
    parent_mobile?: StringNullableWithAggregatesFilter<"students"> | string | null
    batch_id?: IntWithAggregatesFilter<"students"> | number
    enrollment_date?: DateTimeWithAggregatesFilter<"students"> | Date | string
    total_fee?: DecimalWithAggregatesFilter<"students"> | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalWithAggregatesFilter<"students"> | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalWithAggregatesFilter<"students"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolNullableWithAggregatesFilter<"students"> | boolean | null
    converted_from_lead_id?: IntNullableWithAggregatesFilter<"students"> | number | null
    notes?: StringNullableWithAggregatesFilter<"students"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"students"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"students"> | Date | string | null
    tenant_id?: IntNullableWithAggregatesFilter<"students"> | number | null
    user_id?: IntNullableWithAggregatesFilter<"students"> | number | null
  }

  export type tenantsWhereInput = {
    AND?: tenantsWhereInput | tenantsWhereInput[]
    OR?: tenantsWhereInput[]
    NOT?: tenantsWhereInput | tenantsWhereInput[]
    id?: IntFilter<"tenants"> | number
    name?: StringFilter<"tenants"> | string
    subdomain?: StringFilter<"tenants"> | string
    active?: BoolFilter<"tenants"> | boolean
    created_at?: DateTimeFilter<"tenants"> | Date | string
    updated_at?: DateTimeFilter<"tenants"> | Date | string
    batches?: BatchesListRelationFilter
    courses?: CoursesListRelationFilter
    follow_ups?: Follow_upsListRelationFilter
    leads?: LeadsListRelationFilter
    password_reset_tokens?: Password_reset_tokensListRelationFilter
    payments?: PaymentsListRelationFilter
    settings?: SettingsListRelationFilter
    students?: StudentsListRelationFilter
    users?: UsersListRelationFilter
  }

  export type tenantsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    subdomain?: SortOrder
    active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    batches?: batchesOrderByRelationAggregateInput
    courses?: coursesOrderByRelationAggregateInput
    follow_ups?: follow_upsOrderByRelationAggregateInput
    leads?: leadsOrderByRelationAggregateInput
    password_reset_tokens?: password_reset_tokensOrderByRelationAggregateInput
    payments?: paymentsOrderByRelationAggregateInput
    settings?: settingsOrderByRelationAggregateInput
    students?: studentsOrderByRelationAggregateInput
    users?: usersOrderByRelationAggregateInput
  }

  export type tenantsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    subdomain?: string
    AND?: tenantsWhereInput | tenantsWhereInput[]
    OR?: tenantsWhereInput[]
    NOT?: tenantsWhereInput | tenantsWhereInput[]
    name?: StringFilter<"tenants"> | string
    active?: BoolFilter<"tenants"> | boolean
    created_at?: DateTimeFilter<"tenants"> | Date | string
    updated_at?: DateTimeFilter<"tenants"> | Date | string
    batches?: BatchesListRelationFilter
    courses?: CoursesListRelationFilter
    follow_ups?: Follow_upsListRelationFilter
    leads?: LeadsListRelationFilter
    password_reset_tokens?: Password_reset_tokensListRelationFilter
    payments?: PaymentsListRelationFilter
    settings?: SettingsListRelationFilter
    students?: StudentsListRelationFilter
    users?: UsersListRelationFilter
  }, "id" | "subdomain">

  export type tenantsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    subdomain?: SortOrder
    active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: tenantsCountOrderByAggregateInput
    _avg?: tenantsAvgOrderByAggregateInput
    _max?: tenantsMaxOrderByAggregateInput
    _min?: tenantsMinOrderByAggregateInput
    _sum?: tenantsSumOrderByAggregateInput
  }

  export type tenantsScalarWhereWithAggregatesInput = {
    AND?: tenantsScalarWhereWithAggregatesInput | tenantsScalarWhereWithAggregatesInput[]
    OR?: tenantsScalarWhereWithAggregatesInput[]
    NOT?: tenantsScalarWhereWithAggregatesInput | tenantsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tenants"> | number
    name?: StringWithAggregatesFilter<"tenants"> | string
    subdomain?: StringWithAggregatesFilter<"tenants"> | string
    active?: BoolWithAggregatesFilter<"tenants"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"tenants"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"tenants"> | Date | string
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: IntFilter<"users"> | number
    username?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    name?: StringFilter<"users"> | string
    role?: Enumuser_roleFilter<"users"> | $Enums.user_role
    created_at?: DateTimeFilter<"users"> | Date | string
    phone?: StringNullableFilter<"users"> | string | null
    specialization?: StringNullableFilter<"users"> | string | null
    bio?: StringNullableFilter<"users"> | string | null
    status?: StringNullableFilter<"users"> | string | null
    tenant_id?: IntNullableFilter<"users"> | number | null
    batches?: BatchesListRelationFilter
    follow_up_comments?: Follow_up_commentsListRelationFilter
    follow_ups_follow_ups_assigned_toTousers?: Follow_upsListRelationFilter
    follow_ups_follow_ups_created_byTousers?: Follow_upsListRelationFilter
    password_reset_tokens?: Password_reset_tokensListRelationFilter
    students?: StudentsListRelationFilter
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    phone?: SortOrderInput | SortOrder
    specialization?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    batches?: batchesOrderByRelationAggregateInput
    follow_up_comments?: follow_up_commentsOrderByRelationAggregateInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsOrderByRelationAggregateInput
    follow_ups_follow_ups_created_byTousers?: follow_upsOrderByRelationAggregateInput
    password_reset_tokens?: password_reset_tokensOrderByRelationAggregateInput
    students?: studentsOrderByRelationAggregateInput
    tenants?: tenantsOrderByWithRelationInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    password?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    name?: StringFilter<"users"> | string
    role?: Enumuser_roleFilter<"users"> | $Enums.user_role
    created_at?: DateTimeFilter<"users"> | Date | string
    phone?: StringNullableFilter<"users"> | string | null
    specialization?: StringNullableFilter<"users"> | string | null
    bio?: StringNullableFilter<"users"> | string | null
    status?: StringNullableFilter<"users"> | string | null
    tenant_id?: IntNullableFilter<"users"> | number | null
    batches?: BatchesListRelationFilter
    follow_up_comments?: Follow_up_commentsListRelationFilter
    follow_ups_follow_ups_assigned_toTousers?: Follow_upsListRelationFilter
    follow_ups_follow_ups_created_byTousers?: Follow_upsListRelationFilter
    password_reset_tokens?: Password_reset_tokensListRelationFilter
    students?: StudentsListRelationFilter
    tenants?: XOR<TenantsNullableScalarRelationFilter, tenantsWhereInput> | null
  }, "id" | "username">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    phone?: SortOrderInput | SortOrder
    specialization?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    tenant_id?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"users"> | number
    username?: StringWithAggregatesFilter<"users"> | string
    password?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    name?: StringWithAggregatesFilter<"users"> | string
    role?: Enumuser_roleWithAggregatesFilter<"users"> | $Enums.user_role
    created_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    specialization?: StringNullableWithAggregatesFilter<"users"> | string | null
    bio?: StringNullableWithAggregatesFilter<"users"> | string | null
    status?: StringNullableWithAggregatesFilter<"users"> | string | null
    tenant_id?: IntNullableWithAggregatesFilter<"users"> | number | null
  }

  export type assignmentsCreateInput = {
    title: string
    description: string
    course_id?: number | null
    due_date: Date | string
    max_score: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type assignmentsUncheckedCreateInput = {
    id?: number
    title: string
    description: string
    course_id?: number | null
    due_date: Date | string
    max_score: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type assignmentsUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    course_id?: NullableIntFieldUpdateOperationsInput | number | null
    due_date?: DateTimeFieldUpdateOperationsInput | Date | string
    max_score?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type assignmentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    course_id?: NullableIntFieldUpdateOperationsInput | number | null
    due_date?: DateTimeFieldUpdateOperationsInput | Date | string
    max_score?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type assignmentsCreateManyInput = {
    id?: number
    title: string
    description: string
    course_id?: number | null
    due_date: Date | string
    max_score: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type assignmentsUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    course_id?: NullableIntFieldUpdateOperationsInput | number | null
    due_date?: DateTimeFieldUpdateOperationsInput | Date | string
    max_score?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type assignmentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    course_id?: NullableIntFieldUpdateOperationsInput | number | null
    due_date?: DateTimeFieldUpdateOperationsInput | Date | string
    max_score?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type batchesCreateInput = {
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    capacity?: number | null
    updated_at?: Date | string | null
    tenants?: tenantsCreateNestedOneWithoutBatchesInput
    users?: usersCreateNestedOneWithoutBatchesInput
  }

  export type batchesUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    trainer_id?: number | null
    capacity?: number | null
    updated_at?: Date | string | null
    tenant_id?: number | null
  }

  export type batchesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenants?: tenantsUpdateOneWithoutBatchesNestedInput
    users?: usersUpdateOneWithoutBatchesNestedInput
  }

  export type batchesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainer_id?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type batchesCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    trainer_id?: number | null
    capacity?: number | null
    updated_at?: Date | string | null
    tenant_id?: number | null
  }

  export type batchesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type batchesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainer_id?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type code_snippetsCreateInput = {
    title: string
    language: string
    code: string
    description?: string | null
    user_id?: number | null
    course_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type code_snippetsUncheckedCreateInput = {
    id?: number
    title: string
    language: string
    code: string
    description?: string | null
    user_id?: number | null
    course_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type code_snippetsUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    course_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type code_snippetsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    course_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type code_snippetsCreateManyInput = {
    id?: number
    title: string
    language: string
    code: string
    description?: string | null
    user_id?: number | null
    course_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type code_snippetsUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    course_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type code_snippetsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    course_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type coursesCreateInput = {
    title: string
    description?: string | null
    duration: number
    batch_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tenants?: tenantsCreateNestedOneWithoutCoursesInput
  }

  export type coursesUncheckedCreateInput = {
    id?: number
    title: string
    description?: string | null
    duration: number
    batch_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tenant_id?: number | null
  }

  export type coursesUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: IntFieldUpdateOperationsInput | number
    batch_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tenants?: tenantsUpdateOneWithoutCoursesNestedInput
  }

  export type coursesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: IntFieldUpdateOperationsInput | number
    batch_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type coursesCreateManyInput = {
    id?: number
    title: string
    description?: string | null
    duration: number
    batch_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    tenant_id?: number | null
  }

  export type coursesUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: IntFieldUpdateOperationsInput | number
    batch_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type coursesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: IntFieldUpdateOperationsInput | number
    batch_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type follow_up_commentsCreateInput = {
    comment: string
    created_at?: Date | string
    users?: usersCreateNestedOneWithoutFollow_up_commentsInput
    follow_ups: follow_upsCreateNestedOneWithoutFollow_up_commentsInput
  }

  export type follow_up_commentsUncheckedCreateInput = {
    id?: number
    follow_up_id: number
    comment: string
    created_by?: number | null
    created_at?: Date | string
  }

  export type follow_up_commentsUpdateInput = {
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutFollow_up_commentsNestedInput
    follow_ups?: follow_upsUpdateOneRequiredWithoutFollow_up_commentsNestedInput
  }

  export type follow_up_commentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    follow_up_id?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type follow_up_commentsCreateManyInput = {
    id?: number
    follow_up_id: number
    comment: string
    created_by?: number | null
    created_at?: Date | string
  }

  export type follow_up_commentsUpdateManyMutationInput = {
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type follow_up_commentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    follow_up_id?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type follow_upsCreateInput = {
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutFollow_upsInput
    users_follow_ups_assigned_toTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_assigned_toTousersInput
    users_follow_ups_created_byTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_created_byTousersInput
    leads: leadsCreateNestedOneWithoutFollow_upsInput
    tenants?: tenantsCreateNestedOneWithoutFollow_upsInput
  }

  export type follow_upsUncheckedCreateInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutFollow_upsInput
  }

  export type follow_upsUpdateInput = {
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    follow_up_comments?: follow_up_commentsUpdateManyWithoutFollow_upsNestedInput
    users_follow_ups_assigned_toTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_assigned_toTousersNestedInput
    users_follow_ups_created_byTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_created_byTousersNestedInput
    leads?: leadsUpdateOneRequiredWithoutFollow_upsNestedInput
    tenants?: tenantsUpdateOneWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutFollow_upsNestedInput
  }

  export type follow_upsCreateManyInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
  }

  export type follow_upsUpdateManyMutationInput = {
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type follow_upsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type leadsCreateInput = {
    name: string
    phone: string
    email?: string | null
    source: string
    status?: $Enums.lead_status
    notes?: string | null
    assigned_to?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    course?: string | null
    follow_ups?: follow_upsCreateNestedManyWithoutLeadsInput
    tenants?: tenantsCreateNestedOneWithoutLeadsInput
  }

  export type leadsUncheckedCreateInput = {
    id?: number
    name: string
    phone: string
    email?: string | null
    source: string
    status?: $Enums.lead_status
    notes?: string | null
    assigned_to?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    course?: string | null
    tenant_id?: number | null
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutLeadsInput
  }

  export type leadsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    follow_ups?: follow_upsUpdateManyWithoutLeadsNestedInput
    tenants?: tenantsUpdateOneWithoutLeadsNestedInput
  }

  export type leadsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    follow_ups?: follow_upsUncheckedUpdateManyWithoutLeadsNestedInput
  }

  export type leadsCreateManyInput = {
    id?: number
    name: string
    phone: string
    email?: string | null
    source: string
    status?: $Enums.lead_status
    notes?: string | null
    assigned_to?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    course?: string | null
    tenant_id?: number | null
  }

  export type leadsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type leadsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type lesson_plansCreateInput = {
    course_id: number
    title: string
    content: string
    week_number: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type lesson_plansUncheckedCreateInput = {
    id?: number
    course_id: number
    title: string
    content: string
    week_number: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type lesson_plansUpdateInput = {
    course_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    week_number?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type lesson_plansUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    course_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    week_number?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type lesson_plansCreateManyInput = {
    id?: number
    course_id: number
    title: string
    content: string
    week_number: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type lesson_plansUpdateManyMutationInput = {
    course_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    week_number?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type lesson_plansUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    course_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    week_number?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type password_reset_tokensCreateInput = {
    token: string
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
    tenants?: tenantsCreateNestedOneWithoutPassword_reset_tokensInput
    users: usersCreateNestedOneWithoutPassword_reset_tokensInput
  }

  export type password_reset_tokensUncheckedCreateInput = {
    id?: number
    token: string
    user_id: number
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
    tenant_id?: number | null
  }

  export type password_reset_tokensUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
    tenants?: tenantsUpdateOneWithoutPassword_reset_tokensNestedInput
    users?: usersUpdateOneRequiredWithoutPassword_reset_tokensNestedInput
  }

  export type password_reset_tokensUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type password_reset_tokensCreateManyInput = {
    id?: number
    token: string
    user_id: number
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
    tenant_id?: number | null
  }

  export type password_reset_tokensUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
  }

  export type password_reset_tokensUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type paymentsCreateInput = {
    student_id: number
    amount: Decimal | DecimalJsLike | number | string
    payment_date: Date | string
    payment_method: $Enums.payment_method
    receipt_number?: string | null
    transaction_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    reference?: string | null
    next_payment_due_date?: Date | string | null
    status?: string | null
    tenants?: tenantsCreateNestedOneWithoutPaymentsInput
  }

  export type paymentsUncheckedCreateInput = {
    id?: number
    student_id: number
    amount: Decimal | DecimalJsLike | number | string
    payment_date: Date | string
    payment_method: $Enums.payment_method
    receipt_number?: string | null
    transaction_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    reference?: string | null
    next_payment_due_date?: Date | string | null
    tenant_id?: number | null
    status?: string | null
  }

  export type paymentsUpdateInput = {
    student_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    payment_method?: Enumpayment_methodFieldUpdateOperationsInput | $Enums.payment_method
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    next_payment_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenants?: tenantsUpdateOneWithoutPaymentsNestedInput
  }

  export type paymentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    student_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    payment_method?: Enumpayment_methodFieldUpdateOperationsInput | $Enums.payment_method
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    next_payment_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type paymentsCreateManyInput = {
    id?: number
    student_id: number
    amount: Decimal | DecimalJsLike | number | string
    payment_date: Date | string
    payment_method: $Enums.payment_method
    receipt_number?: string | null
    transaction_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    reference?: string | null
    next_payment_due_date?: Date | string | null
    tenant_id?: number | null
    status?: string | null
  }

  export type paymentsUpdateManyMutationInput = {
    student_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    payment_method?: Enumpayment_methodFieldUpdateOperationsInput | $Enums.payment_method
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    next_payment_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type paymentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    student_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    payment_method?: Enumpayment_methodFieldUpdateOperationsInput | $Enums.payment_method
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    next_payment_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sessionsCreateInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type sessionsUncheckedCreateInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type sessionsUpdateInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsUncheckedUpdateInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsCreateManyInput = {
    sid: string
    sess: JsonNullValueInput | InputJsonValue
    expire: Date | string
  }

  export type sessionsUpdateManyMutationInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsUncheckedUpdateManyInput = {
    sid?: StringFieldUpdateOperationsInput | string
    sess?: JsonNullValueInput | InputJsonValue
    expire?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingsCreateInput = {
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
    tenants: tenantsCreateNestedOneWithoutSettingsInput
  }

  export type settingsUncheckedCreateInput = {
    id?: number
    tenant_id: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type settingsUpdateInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    tenants?: tenantsUpdateOneRequiredWithoutSettingsNestedInput
  }

  export type settingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenant_id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingsCreateManyInput = {
    id?: number
    tenant_id: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type settingsUpdateManyMutationInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tenant_id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type studentsCreateInput = {
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tenants?: tenantsCreateNestedOneWithoutStudentsInput
    users?: usersCreateNestedOneWithoutStudentsInput
  }

  export type studentsUncheckedCreateInput = {
    id?: number
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tenant_id?: number | null
    user_id?: number | null
  }

  export type studentsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenants?: tenantsUpdateOneWithoutStudentsNestedInput
    users?: usersUpdateOneWithoutStudentsNestedInput
  }

  export type studentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type studentsCreateManyInput = {
    id?: number
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tenant_id?: number | null
    user_id?: number | null
  }

  export type studentsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type studentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tenantsCreateInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    courses?: coursesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsCreateManyInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type tenantsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tenantsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateInput = {
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    batches?: batchesCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    students?: studentsCreateNestedManyWithoutUsersInput
    tenants?: tenantsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    tenant_id?: number | null
    batches?: batchesUncheckedCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    students?: studentsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    batches?: batchesUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    students?: studentsUpdateManyWithoutUsersNestedInput
    tenants?: tenantsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    batches?: batchesUncheckedUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    students?: studentsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    tenant_id?: number | null
  }

  export type usersUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type assignmentsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    course_id?: SortOrder
    due_date?: SortOrder
    max_score?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type assignmentsAvgOrderByAggregateInput = {
    id?: SortOrder
    course_id?: SortOrder
    max_score?: SortOrder
  }

  export type assignmentsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    course_id?: SortOrder
    due_date?: SortOrder
    max_score?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type assignmentsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    course_id?: SortOrder
    due_date?: SortOrder
    max_score?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type assignmentsSumOrderByAggregateInput = {
    id?: SortOrder
    course_id?: SortOrder
    max_score?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type TenantsNullableScalarRelationFilter = {
    is?: tenantsWhereInput | null
    isNot?: tenantsWhereInput | null
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type batchesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    fee?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    trainer_id?: SortOrder
    capacity?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
  }

  export type batchesAvgOrderByAggregateInput = {
    id?: SortOrder
    fee?: SortOrder
    trainer_id?: SortOrder
    capacity?: SortOrder
    tenant_id?: SortOrder
  }

  export type batchesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    fee?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    trainer_id?: SortOrder
    capacity?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
  }

  export type batchesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    fee?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    trainer_id?: SortOrder
    capacity?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
  }

  export type batchesSumOrderByAggregateInput = {
    id?: SortOrder
    fee?: SortOrder
    trainer_id?: SortOrder
    capacity?: SortOrder
    tenant_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type code_snippetsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    language?: SortOrder
    code?: SortOrder
    description?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type code_snippetsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
  }

  export type code_snippetsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    language?: SortOrder
    code?: SortOrder
    description?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type code_snippetsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    language?: SortOrder
    code?: SortOrder
    description?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type code_snippetsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    course_id?: SortOrder
  }

  export type coursesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    duration?: SortOrder
    batch_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
  }

  export type coursesAvgOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    batch_id?: SortOrder
    tenant_id?: SortOrder
  }

  export type coursesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    duration?: SortOrder
    batch_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
  }

  export type coursesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    duration?: SortOrder
    batch_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
  }

  export type coursesSumOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    batch_id?: SortOrder
    tenant_id?: SortOrder
  }

  export type Follow_upsScalarRelationFilter = {
    is?: follow_upsWhereInput
    isNot?: follow_upsWhereInput
  }

  export type follow_up_commentsCountOrderByAggregateInput = {
    id?: SortOrder
    follow_up_id?: SortOrder
    comment?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
  }

  export type follow_up_commentsAvgOrderByAggregateInput = {
    id?: SortOrder
    follow_up_id?: SortOrder
    created_by?: SortOrder
  }

  export type follow_up_commentsMaxOrderByAggregateInput = {
    id?: SortOrder
    follow_up_id?: SortOrder
    comment?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
  }

  export type follow_up_commentsMinOrderByAggregateInput = {
    id?: SortOrder
    follow_up_id?: SortOrder
    comment?: SortOrder
    created_by?: SortOrder
    created_at?: SortOrder
  }

  export type follow_up_commentsSumOrderByAggregateInput = {
    id?: SortOrder
    follow_up_id?: SortOrder
    created_by?: SortOrder
  }

  export type Follow_up_commentsListRelationFilter = {
    every?: follow_up_commentsWhereInput
    some?: follow_up_commentsWhereInput
    none?: follow_up_commentsWhereInput
  }

  export type LeadsScalarRelationFilter = {
    is?: leadsWhereInput
    isNot?: leadsWhereInput
  }

  export type follow_up_commentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type follow_upsCountOrderByAggregateInput = {
    id?: SortOrder
    lead_id?: SortOrder
    follow_up_date?: SortOrder
    comments?: SortOrder
    status?: SortOrder
    assigned_to?: SortOrder
    created_by?: SortOrder
    is_completed?: SortOrder
    completed_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    type?: SortOrder
    next_follow_up_date?: SortOrder
    tenant_id?: SortOrder
  }

  export type follow_upsAvgOrderByAggregateInput = {
    id?: SortOrder
    lead_id?: SortOrder
    assigned_to?: SortOrder
    created_by?: SortOrder
    tenant_id?: SortOrder
  }

  export type follow_upsMaxOrderByAggregateInput = {
    id?: SortOrder
    lead_id?: SortOrder
    follow_up_date?: SortOrder
    comments?: SortOrder
    status?: SortOrder
    assigned_to?: SortOrder
    created_by?: SortOrder
    is_completed?: SortOrder
    completed_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    type?: SortOrder
    next_follow_up_date?: SortOrder
    tenant_id?: SortOrder
  }

  export type follow_upsMinOrderByAggregateInput = {
    id?: SortOrder
    lead_id?: SortOrder
    follow_up_date?: SortOrder
    comments?: SortOrder
    status?: SortOrder
    assigned_to?: SortOrder
    created_by?: SortOrder
    is_completed?: SortOrder
    completed_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    type?: SortOrder
    next_follow_up_date?: SortOrder
    tenant_id?: SortOrder
  }

  export type follow_upsSumOrderByAggregateInput = {
    id?: SortOrder
    lead_id?: SortOrder
    assigned_to?: SortOrder
    created_by?: SortOrder
    tenant_id?: SortOrder
  }

  export type Enumlead_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.lead_status | Enumlead_statusFieldRefInput<$PrismaModel>
    in?: $Enums.lead_status[] | ListEnumlead_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.lead_status[] | ListEnumlead_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumlead_statusFilter<$PrismaModel> | $Enums.lead_status
  }

  export type Follow_upsListRelationFilter = {
    every?: follow_upsWhereInput
    some?: follow_upsWhereInput
    none?: follow_upsWhereInput
  }

  export type follow_upsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type leadsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    source?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    assigned_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    course?: SortOrder
    tenant_id?: SortOrder
  }

  export type leadsAvgOrderByAggregateInput = {
    id?: SortOrder
    assigned_to?: SortOrder
    tenant_id?: SortOrder
  }

  export type leadsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    source?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    assigned_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    course?: SortOrder
    tenant_id?: SortOrder
  }

  export type leadsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    source?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    assigned_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    course?: SortOrder
    tenant_id?: SortOrder
  }

  export type leadsSumOrderByAggregateInput = {
    id?: SortOrder
    assigned_to?: SortOrder
    tenant_id?: SortOrder
  }

  export type Enumlead_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.lead_status | Enumlead_statusFieldRefInput<$PrismaModel>
    in?: $Enums.lead_status[] | ListEnumlead_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.lead_status[] | ListEnumlead_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumlead_statusWithAggregatesFilter<$PrismaModel> | $Enums.lead_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumlead_statusFilter<$PrismaModel>
    _max?: NestedEnumlead_statusFilter<$PrismaModel>
  }

  export type lesson_plansCountOrderByAggregateInput = {
    id?: SortOrder
    course_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    week_number?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type lesson_plansAvgOrderByAggregateInput = {
    id?: SortOrder
    course_id?: SortOrder
    week_number?: SortOrder
  }

  export type lesson_plansMaxOrderByAggregateInput = {
    id?: SortOrder
    course_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    week_number?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type lesson_plansMinOrderByAggregateInput = {
    id?: SortOrder
    course_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    week_number?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type lesson_plansSumOrderByAggregateInput = {
    id?: SortOrder
    course_id?: SortOrder
    week_number?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type password_reset_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    is_used?: SortOrder
    tenant_id?: SortOrder
  }

  export type password_reset_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    tenant_id?: SortOrder
  }

  export type password_reset_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    is_used?: SortOrder
    tenant_id?: SortOrder
  }

  export type password_reset_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    is_used?: SortOrder
    tenant_id?: SortOrder
  }

  export type password_reset_tokensSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    tenant_id?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type Enumpayment_methodFilter<$PrismaModel = never> = {
    equals?: $Enums.payment_method | Enumpayment_methodFieldRefInput<$PrismaModel>
    in?: $Enums.payment_method[] | ListEnumpayment_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.payment_method[] | ListEnumpayment_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumpayment_methodFilter<$PrismaModel> | $Enums.payment_method
  }

  export type paymentsCountOrderByAggregateInput = {
    id?: SortOrder
    student_id?: SortOrder
    amount?: SortOrder
    payment_date?: SortOrder
    payment_method?: SortOrder
    receipt_number?: SortOrder
    transaction_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    reference?: SortOrder
    next_payment_due_date?: SortOrder
    tenant_id?: SortOrder
    status?: SortOrder
  }

  export type paymentsAvgOrderByAggregateInput = {
    id?: SortOrder
    student_id?: SortOrder
    amount?: SortOrder
    tenant_id?: SortOrder
  }

  export type paymentsMaxOrderByAggregateInput = {
    id?: SortOrder
    student_id?: SortOrder
    amount?: SortOrder
    payment_date?: SortOrder
    payment_method?: SortOrder
    receipt_number?: SortOrder
    transaction_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    reference?: SortOrder
    next_payment_due_date?: SortOrder
    tenant_id?: SortOrder
    status?: SortOrder
  }

  export type paymentsMinOrderByAggregateInput = {
    id?: SortOrder
    student_id?: SortOrder
    amount?: SortOrder
    payment_date?: SortOrder
    payment_method?: SortOrder
    receipt_number?: SortOrder
    transaction_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    reference?: SortOrder
    next_payment_due_date?: SortOrder
    tenant_id?: SortOrder
    status?: SortOrder
  }

  export type paymentsSumOrderByAggregateInput = {
    id?: SortOrder
    student_id?: SortOrder
    amount?: SortOrder
    tenant_id?: SortOrder
  }

  export type Enumpayment_methodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.payment_method | Enumpayment_methodFieldRefInput<$PrismaModel>
    in?: $Enums.payment_method[] | ListEnumpayment_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.payment_method[] | ListEnumpayment_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumpayment_methodWithAggregatesFilter<$PrismaModel> | $Enums.payment_method
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpayment_methodFilter<$PrismaModel>
    _max?: NestedEnumpayment_methodFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type sessionsCountOrderByAggregateInput = {
    sid?: SortOrder
    sess?: SortOrder
    expire?: SortOrder
  }

  export type sessionsMaxOrderByAggregateInput = {
    sid?: SortOrder
    expire?: SortOrder
  }

  export type sessionsMinOrderByAggregateInput = {
    sid?: SortOrder
    expire?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type TenantsScalarRelationFilter = {
    is?: tenantsWhereInput
    isNot?: tenantsWhereInput
  }

  export type settingsTenant_idKeyCompoundUniqueInput = {
    tenant_id: number
    key: string
  }

  export type settingsCountOrderByAggregateInput = {
    id?: SortOrder
    tenant_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type settingsAvgOrderByAggregateInput = {
    id?: SortOrder
    tenant_id?: SortOrder
  }

  export type settingsMaxOrderByAggregateInput = {
    id?: SortOrder
    tenant_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type settingsMinOrderByAggregateInput = {
    id?: SortOrder
    tenant_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type settingsSumOrderByAggregateInput = {
    id?: SortOrder
    tenant_id?: SortOrder
  }

  export type studentsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    parent_mobile?: SortOrder
    batch_id?: SortOrder
    enrollment_date?: SortOrder
    total_fee?: SortOrder
    fee_paid?: SortOrder
    fee_due?: SortOrder
    is_active?: SortOrder
    converted_from_lead_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
    user_id?: SortOrder
  }

  export type studentsAvgOrderByAggregateInput = {
    id?: SortOrder
    batch_id?: SortOrder
    total_fee?: SortOrder
    fee_paid?: SortOrder
    fee_due?: SortOrder
    converted_from_lead_id?: SortOrder
    tenant_id?: SortOrder
    user_id?: SortOrder
  }

  export type studentsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    parent_mobile?: SortOrder
    batch_id?: SortOrder
    enrollment_date?: SortOrder
    total_fee?: SortOrder
    fee_paid?: SortOrder
    fee_due?: SortOrder
    is_active?: SortOrder
    converted_from_lead_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
    user_id?: SortOrder
  }

  export type studentsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    parent_mobile?: SortOrder
    batch_id?: SortOrder
    enrollment_date?: SortOrder
    total_fee?: SortOrder
    fee_paid?: SortOrder
    fee_due?: SortOrder
    is_active?: SortOrder
    converted_from_lead_id?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tenant_id?: SortOrder
    user_id?: SortOrder
  }

  export type studentsSumOrderByAggregateInput = {
    id?: SortOrder
    batch_id?: SortOrder
    total_fee?: SortOrder
    fee_paid?: SortOrder
    fee_due?: SortOrder
    converted_from_lead_id?: SortOrder
    tenant_id?: SortOrder
    user_id?: SortOrder
  }

  export type BatchesListRelationFilter = {
    every?: batchesWhereInput
    some?: batchesWhereInput
    none?: batchesWhereInput
  }

  export type CoursesListRelationFilter = {
    every?: coursesWhereInput
    some?: coursesWhereInput
    none?: coursesWhereInput
  }

  export type LeadsListRelationFilter = {
    every?: leadsWhereInput
    some?: leadsWhereInput
    none?: leadsWhereInput
  }

  export type Password_reset_tokensListRelationFilter = {
    every?: password_reset_tokensWhereInput
    some?: password_reset_tokensWhereInput
    none?: password_reset_tokensWhereInput
  }

  export type PaymentsListRelationFilter = {
    every?: paymentsWhereInput
    some?: paymentsWhereInput
    none?: paymentsWhereInput
  }

  export type SettingsListRelationFilter = {
    every?: settingsWhereInput
    some?: settingsWhereInput
    none?: settingsWhereInput
  }

  export type StudentsListRelationFilter = {
    every?: studentsWhereInput
    some?: studentsWhereInput
    none?: studentsWhereInput
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type batchesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type coursesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type leadsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type password_reset_tokensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type paymentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type settingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type studentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tenantsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    subdomain?: SortOrder
    active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tenantsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tenantsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    subdomain?: SortOrder
    active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tenantsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    subdomain?: SortOrder
    active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type tenantsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumuser_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_roleFilter<$PrismaModel> | $Enums.user_role
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    phone?: SortOrder
    specialization?: SortOrder
    bio?: SortOrder
    status?: SortOrder
    tenant_id?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
    tenant_id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    phone?: SortOrder
    specialization?: SortOrder
    bio?: SortOrder
    status?: SortOrder
    tenant_id?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    name?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    phone?: SortOrder
    specialization?: SortOrder
    bio?: SortOrder
    status?: SortOrder
    tenant_id?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
    tenant_id?: SortOrder
  }

  export type Enumuser_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_roleWithAggregatesFilter<$PrismaModel> | $Enums.user_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_roleFilter<$PrismaModel>
    _max?: NestedEnumuser_roleFilter<$PrismaModel>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tenantsCreateNestedOneWithoutBatchesInput = {
    create?: XOR<tenantsCreateWithoutBatchesInput, tenantsUncheckedCreateWithoutBatchesInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutBatchesInput
    connect?: tenantsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutBatchesInput = {
    create?: XOR<usersCreateWithoutBatchesInput, usersUncheckedCreateWithoutBatchesInput>
    connectOrCreate?: usersCreateOrConnectWithoutBatchesInput
    connect?: usersWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type tenantsUpdateOneWithoutBatchesNestedInput = {
    create?: XOR<tenantsCreateWithoutBatchesInput, tenantsUncheckedCreateWithoutBatchesInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutBatchesInput
    upsert?: tenantsUpsertWithoutBatchesInput
    disconnect?: tenantsWhereInput | boolean
    delete?: tenantsWhereInput | boolean
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutBatchesInput, tenantsUpdateWithoutBatchesInput>, tenantsUncheckedUpdateWithoutBatchesInput>
  }

  export type usersUpdateOneWithoutBatchesNestedInput = {
    create?: XOR<usersCreateWithoutBatchesInput, usersUncheckedCreateWithoutBatchesInput>
    connectOrCreate?: usersCreateOrConnectWithoutBatchesInput
    upsert?: usersUpsertWithoutBatchesInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutBatchesInput, usersUpdateWithoutBatchesInput>, usersUncheckedUpdateWithoutBatchesInput>
  }

  export type tenantsCreateNestedOneWithoutCoursesInput = {
    create?: XOR<tenantsCreateWithoutCoursesInput, tenantsUncheckedCreateWithoutCoursesInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutCoursesInput
    connect?: tenantsWhereUniqueInput
  }

  export type tenantsUpdateOneWithoutCoursesNestedInput = {
    create?: XOR<tenantsCreateWithoutCoursesInput, tenantsUncheckedCreateWithoutCoursesInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutCoursesInput
    upsert?: tenantsUpsertWithoutCoursesInput
    disconnect?: tenantsWhereInput | boolean
    delete?: tenantsWhereInput | boolean
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutCoursesInput, tenantsUpdateWithoutCoursesInput>, tenantsUncheckedUpdateWithoutCoursesInput>
  }

  export type usersCreateNestedOneWithoutFollow_up_commentsInput = {
    create?: XOR<usersCreateWithoutFollow_up_commentsInput, usersUncheckedCreateWithoutFollow_up_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutFollow_up_commentsInput
    connect?: usersWhereUniqueInput
  }

  export type follow_upsCreateNestedOneWithoutFollow_up_commentsInput = {
    create?: XOR<follow_upsCreateWithoutFollow_up_commentsInput, follow_upsUncheckedCreateWithoutFollow_up_commentsInput>
    connectOrCreate?: follow_upsCreateOrConnectWithoutFollow_up_commentsInput
    connect?: follow_upsWhereUniqueInput
  }

  export type usersUpdateOneWithoutFollow_up_commentsNestedInput = {
    create?: XOR<usersCreateWithoutFollow_up_commentsInput, usersUncheckedCreateWithoutFollow_up_commentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutFollow_up_commentsInput
    upsert?: usersUpsertWithoutFollow_up_commentsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutFollow_up_commentsInput, usersUpdateWithoutFollow_up_commentsInput>, usersUncheckedUpdateWithoutFollow_up_commentsInput>
  }

  export type follow_upsUpdateOneRequiredWithoutFollow_up_commentsNestedInput = {
    create?: XOR<follow_upsCreateWithoutFollow_up_commentsInput, follow_upsUncheckedCreateWithoutFollow_up_commentsInput>
    connectOrCreate?: follow_upsCreateOrConnectWithoutFollow_up_commentsInput
    upsert?: follow_upsUpsertWithoutFollow_up_commentsInput
    connect?: follow_upsWhereUniqueInput
    update?: XOR<XOR<follow_upsUpdateToOneWithWhereWithoutFollow_up_commentsInput, follow_upsUpdateWithoutFollow_up_commentsInput>, follow_upsUncheckedUpdateWithoutFollow_up_commentsInput>
  }

  export type follow_up_commentsCreateNestedManyWithoutFollow_upsInput = {
    create?: XOR<follow_up_commentsCreateWithoutFollow_upsInput, follow_up_commentsUncheckedCreateWithoutFollow_upsInput> | follow_up_commentsCreateWithoutFollow_upsInput[] | follow_up_commentsUncheckedCreateWithoutFollow_upsInput[]
    connectOrCreate?: follow_up_commentsCreateOrConnectWithoutFollow_upsInput | follow_up_commentsCreateOrConnectWithoutFollow_upsInput[]
    createMany?: follow_up_commentsCreateManyFollow_upsInputEnvelope
    connect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutFollow_ups_follow_ups_assigned_toTousersInput = {
    create?: XOR<usersCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput, usersUncheckedCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutFollow_ups_follow_ups_assigned_toTousersInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutFollow_ups_follow_ups_created_byTousersInput = {
    create?: XOR<usersCreateWithoutFollow_ups_follow_ups_created_byTousersInput, usersUncheckedCreateWithoutFollow_ups_follow_ups_created_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutFollow_ups_follow_ups_created_byTousersInput
    connect?: usersWhereUniqueInput
  }

  export type leadsCreateNestedOneWithoutFollow_upsInput = {
    create?: XOR<leadsCreateWithoutFollow_upsInput, leadsUncheckedCreateWithoutFollow_upsInput>
    connectOrCreate?: leadsCreateOrConnectWithoutFollow_upsInput
    connect?: leadsWhereUniqueInput
  }

  export type tenantsCreateNestedOneWithoutFollow_upsInput = {
    create?: XOR<tenantsCreateWithoutFollow_upsInput, tenantsUncheckedCreateWithoutFollow_upsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutFollow_upsInput
    connect?: tenantsWhereUniqueInput
  }

  export type follow_up_commentsUncheckedCreateNestedManyWithoutFollow_upsInput = {
    create?: XOR<follow_up_commentsCreateWithoutFollow_upsInput, follow_up_commentsUncheckedCreateWithoutFollow_upsInput> | follow_up_commentsCreateWithoutFollow_upsInput[] | follow_up_commentsUncheckedCreateWithoutFollow_upsInput[]
    connectOrCreate?: follow_up_commentsCreateOrConnectWithoutFollow_upsInput | follow_up_commentsCreateOrConnectWithoutFollow_upsInput[]
    createMany?: follow_up_commentsCreateManyFollow_upsInputEnvelope
    connect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
  }

  export type follow_up_commentsUpdateManyWithoutFollow_upsNestedInput = {
    create?: XOR<follow_up_commentsCreateWithoutFollow_upsInput, follow_up_commentsUncheckedCreateWithoutFollow_upsInput> | follow_up_commentsCreateWithoutFollow_upsInput[] | follow_up_commentsUncheckedCreateWithoutFollow_upsInput[]
    connectOrCreate?: follow_up_commentsCreateOrConnectWithoutFollow_upsInput | follow_up_commentsCreateOrConnectWithoutFollow_upsInput[]
    upsert?: follow_up_commentsUpsertWithWhereUniqueWithoutFollow_upsInput | follow_up_commentsUpsertWithWhereUniqueWithoutFollow_upsInput[]
    createMany?: follow_up_commentsCreateManyFollow_upsInputEnvelope
    set?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    disconnect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    delete?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    connect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    update?: follow_up_commentsUpdateWithWhereUniqueWithoutFollow_upsInput | follow_up_commentsUpdateWithWhereUniqueWithoutFollow_upsInput[]
    updateMany?: follow_up_commentsUpdateManyWithWhereWithoutFollow_upsInput | follow_up_commentsUpdateManyWithWhereWithoutFollow_upsInput[]
    deleteMany?: follow_up_commentsScalarWhereInput | follow_up_commentsScalarWhereInput[]
  }

  export type usersUpdateOneWithoutFollow_ups_follow_ups_assigned_toTousersNestedInput = {
    create?: XOR<usersCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput, usersUncheckedCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutFollow_ups_follow_ups_assigned_toTousersInput
    upsert?: usersUpsertWithoutFollow_ups_follow_ups_assigned_toTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutFollow_ups_follow_ups_assigned_toTousersInput, usersUpdateWithoutFollow_ups_follow_ups_assigned_toTousersInput>, usersUncheckedUpdateWithoutFollow_ups_follow_ups_assigned_toTousersInput>
  }

  export type usersUpdateOneWithoutFollow_ups_follow_ups_created_byTousersNestedInput = {
    create?: XOR<usersCreateWithoutFollow_ups_follow_ups_created_byTousersInput, usersUncheckedCreateWithoutFollow_ups_follow_ups_created_byTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutFollow_ups_follow_ups_created_byTousersInput
    upsert?: usersUpsertWithoutFollow_ups_follow_ups_created_byTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutFollow_ups_follow_ups_created_byTousersInput, usersUpdateWithoutFollow_ups_follow_ups_created_byTousersInput>, usersUncheckedUpdateWithoutFollow_ups_follow_ups_created_byTousersInput>
  }

  export type leadsUpdateOneRequiredWithoutFollow_upsNestedInput = {
    create?: XOR<leadsCreateWithoutFollow_upsInput, leadsUncheckedCreateWithoutFollow_upsInput>
    connectOrCreate?: leadsCreateOrConnectWithoutFollow_upsInput
    upsert?: leadsUpsertWithoutFollow_upsInput
    connect?: leadsWhereUniqueInput
    update?: XOR<XOR<leadsUpdateToOneWithWhereWithoutFollow_upsInput, leadsUpdateWithoutFollow_upsInput>, leadsUncheckedUpdateWithoutFollow_upsInput>
  }

  export type tenantsUpdateOneWithoutFollow_upsNestedInput = {
    create?: XOR<tenantsCreateWithoutFollow_upsInput, tenantsUncheckedCreateWithoutFollow_upsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutFollow_upsInput
    upsert?: tenantsUpsertWithoutFollow_upsInput
    disconnect?: tenantsWhereInput | boolean
    delete?: tenantsWhereInput | boolean
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutFollow_upsInput, tenantsUpdateWithoutFollow_upsInput>, tenantsUncheckedUpdateWithoutFollow_upsInput>
  }

  export type follow_up_commentsUncheckedUpdateManyWithoutFollow_upsNestedInput = {
    create?: XOR<follow_up_commentsCreateWithoutFollow_upsInput, follow_up_commentsUncheckedCreateWithoutFollow_upsInput> | follow_up_commentsCreateWithoutFollow_upsInput[] | follow_up_commentsUncheckedCreateWithoutFollow_upsInput[]
    connectOrCreate?: follow_up_commentsCreateOrConnectWithoutFollow_upsInput | follow_up_commentsCreateOrConnectWithoutFollow_upsInput[]
    upsert?: follow_up_commentsUpsertWithWhereUniqueWithoutFollow_upsInput | follow_up_commentsUpsertWithWhereUniqueWithoutFollow_upsInput[]
    createMany?: follow_up_commentsCreateManyFollow_upsInputEnvelope
    set?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    disconnect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    delete?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    connect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    update?: follow_up_commentsUpdateWithWhereUniqueWithoutFollow_upsInput | follow_up_commentsUpdateWithWhereUniqueWithoutFollow_upsInput[]
    updateMany?: follow_up_commentsUpdateManyWithWhereWithoutFollow_upsInput | follow_up_commentsUpdateManyWithWhereWithoutFollow_upsInput[]
    deleteMany?: follow_up_commentsScalarWhereInput | follow_up_commentsScalarWhereInput[]
  }

  export type follow_upsCreateNestedManyWithoutLeadsInput = {
    create?: XOR<follow_upsCreateWithoutLeadsInput, follow_upsUncheckedCreateWithoutLeadsInput> | follow_upsCreateWithoutLeadsInput[] | follow_upsUncheckedCreateWithoutLeadsInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutLeadsInput | follow_upsCreateOrConnectWithoutLeadsInput[]
    createMany?: follow_upsCreateManyLeadsInputEnvelope
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
  }

  export type tenantsCreateNestedOneWithoutLeadsInput = {
    create?: XOR<tenantsCreateWithoutLeadsInput, tenantsUncheckedCreateWithoutLeadsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutLeadsInput
    connect?: tenantsWhereUniqueInput
  }

  export type follow_upsUncheckedCreateNestedManyWithoutLeadsInput = {
    create?: XOR<follow_upsCreateWithoutLeadsInput, follow_upsUncheckedCreateWithoutLeadsInput> | follow_upsCreateWithoutLeadsInput[] | follow_upsUncheckedCreateWithoutLeadsInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutLeadsInput | follow_upsCreateOrConnectWithoutLeadsInput[]
    createMany?: follow_upsCreateManyLeadsInputEnvelope
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
  }

  export type Enumlead_statusFieldUpdateOperationsInput = {
    set?: $Enums.lead_status
  }

  export type follow_upsUpdateManyWithoutLeadsNestedInput = {
    create?: XOR<follow_upsCreateWithoutLeadsInput, follow_upsUncheckedCreateWithoutLeadsInput> | follow_upsCreateWithoutLeadsInput[] | follow_upsUncheckedCreateWithoutLeadsInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutLeadsInput | follow_upsCreateOrConnectWithoutLeadsInput[]
    upsert?: follow_upsUpsertWithWhereUniqueWithoutLeadsInput | follow_upsUpsertWithWhereUniqueWithoutLeadsInput[]
    createMany?: follow_upsCreateManyLeadsInputEnvelope
    set?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    disconnect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    delete?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    update?: follow_upsUpdateWithWhereUniqueWithoutLeadsInput | follow_upsUpdateWithWhereUniqueWithoutLeadsInput[]
    updateMany?: follow_upsUpdateManyWithWhereWithoutLeadsInput | follow_upsUpdateManyWithWhereWithoutLeadsInput[]
    deleteMany?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
  }

  export type tenantsUpdateOneWithoutLeadsNestedInput = {
    create?: XOR<tenantsCreateWithoutLeadsInput, tenantsUncheckedCreateWithoutLeadsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutLeadsInput
    upsert?: tenantsUpsertWithoutLeadsInput
    disconnect?: tenantsWhereInput | boolean
    delete?: tenantsWhereInput | boolean
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutLeadsInput, tenantsUpdateWithoutLeadsInput>, tenantsUncheckedUpdateWithoutLeadsInput>
  }

  export type follow_upsUncheckedUpdateManyWithoutLeadsNestedInput = {
    create?: XOR<follow_upsCreateWithoutLeadsInput, follow_upsUncheckedCreateWithoutLeadsInput> | follow_upsCreateWithoutLeadsInput[] | follow_upsUncheckedCreateWithoutLeadsInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutLeadsInput | follow_upsCreateOrConnectWithoutLeadsInput[]
    upsert?: follow_upsUpsertWithWhereUniqueWithoutLeadsInput | follow_upsUpsertWithWhereUniqueWithoutLeadsInput[]
    createMany?: follow_upsCreateManyLeadsInputEnvelope
    set?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    disconnect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    delete?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    update?: follow_upsUpdateWithWhereUniqueWithoutLeadsInput | follow_upsUpdateWithWhereUniqueWithoutLeadsInput[]
    updateMany?: follow_upsUpdateManyWithWhereWithoutLeadsInput | follow_upsUpdateManyWithWhereWithoutLeadsInput[]
    deleteMany?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
  }

  export type tenantsCreateNestedOneWithoutPassword_reset_tokensInput = {
    create?: XOR<tenantsCreateWithoutPassword_reset_tokensInput, tenantsUncheckedCreateWithoutPassword_reset_tokensInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutPassword_reset_tokensInput
    connect?: tenantsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutPassword_reset_tokensInput = {
    create?: XOR<usersCreateWithoutPassword_reset_tokensInput, usersUncheckedCreateWithoutPassword_reset_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutPassword_reset_tokensInput
    connect?: usersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type tenantsUpdateOneWithoutPassword_reset_tokensNestedInput = {
    create?: XOR<tenantsCreateWithoutPassword_reset_tokensInput, tenantsUncheckedCreateWithoutPassword_reset_tokensInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutPassword_reset_tokensInput
    upsert?: tenantsUpsertWithoutPassword_reset_tokensInput
    disconnect?: tenantsWhereInput | boolean
    delete?: tenantsWhereInput | boolean
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutPassword_reset_tokensInput, tenantsUpdateWithoutPassword_reset_tokensInput>, tenantsUncheckedUpdateWithoutPassword_reset_tokensInput>
  }

  export type usersUpdateOneRequiredWithoutPassword_reset_tokensNestedInput = {
    create?: XOR<usersCreateWithoutPassword_reset_tokensInput, usersUncheckedCreateWithoutPassword_reset_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutPassword_reset_tokensInput
    upsert?: usersUpsertWithoutPassword_reset_tokensInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPassword_reset_tokensInput, usersUpdateWithoutPassword_reset_tokensInput>, usersUncheckedUpdateWithoutPassword_reset_tokensInput>
  }

  export type tenantsCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<tenantsCreateWithoutPaymentsInput, tenantsUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutPaymentsInput
    connect?: tenantsWhereUniqueInput
  }

  export type Enumpayment_methodFieldUpdateOperationsInput = {
    set?: $Enums.payment_method
  }

  export type tenantsUpdateOneWithoutPaymentsNestedInput = {
    create?: XOR<tenantsCreateWithoutPaymentsInput, tenantsUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutPaymentsInput
    upsert?: tenantsUpsertWithoutPaymentsInput
    disconnect?: tenantsWhereInput | boolean
    delete?: tenantsWhereInput | boolean
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutPaymentsInput, tenantsUpdateWithoutPaymentsInput>, tenantsUncheckedUpdateWithoutPaymentsInput>
  }

  export type tenantsCreateNestedOneWithoutSettingsInput = {
    create?: XOR<tenantsCreateWithoutSettingsInput, tenantsUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutSettingsInput
    connect?: tenantsWhereUniqueInput
  }

  export type tenantsUpdateOneRequiredWithoutSettingsNestedInput = {
    create?: XOR<tenantsCreateWithoutSettingsInput, tenantsUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutSettingsInput
    upsert?: tenantsUpsertWithoutSettingsInput
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutSettingsInput, tenantsUpdateWithoutSettingsInput>, tenantsUncheckedUpdateWithoutSettingsInput>
  }

  export type tenantsCreateNestedOneWithoutStudentsInput = {
    create?: XOR<tenantsCreateWithoutStudentsInput, tenantsUncheckedCreateWithoutStudentsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutStudentsInput
    connect?: tenantsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutStudentsInput = {
    create?: XOR<usersCreateWithoutStudentsInput, usersUncheckedCreateWithoutStudentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutStudentsInput
    connect?: usersWhereUniqueInput
  }

  export type tenantsUpdateOneWithoutStudentsNestedInput = {
    create?: XOR<tenantsCreateWithoutStudentsInput, tenantsUncheckedCreateWithoutStudentsInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutStudentsInput
    upsert?: tenantsUpsertWithoutStudentsInput
    disconnect?: tenantsWhereInput | boolean
    delete?: tenantsWhereInput | boolean
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutStudentsInput, tenantsUpdateWithoutStudentsInput>, tenantsUncheckedUpdateWithoutStudentsInput>
  }

  export type usersUpdateOneWithoutStudentsNestedInput = {
    create?: XOR<usersCreateWithoutStudentsInput, usersUncheckedCreateWithoutStudentsInput>
    connectOrCreate?: usersCreateOrConnectWithoutStudentsInput
    upsert?: usersUpsertWithoutStudentsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutStudentsInput, usersUpdateWithoutStudentsInput>, usersUncheckedUpdateWithoutStudentsInput>
  }

  export type batchesCreateNestedManyWithoutTenantsInput = {
    create?: XOR<batchesCreateWithoutTenantsInput, batchesUncheckedCreateWithoutTenantsInput> | batchesCreateWithoutTenantsInput[] | batchesUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: batchesCreateOrConnectWithoutTenantsInput | batchesCreateOrConnectWithoutTenantsInput[]
    createMany?: batchesCreateManyTenantsInputEnvelope
    connect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
  }

  export type coursesCreateNestedManyWithoutTenantsInput = {
    create?: XOR<coursesCreateWithoutTenantsInput, coursesUncheckedCreateWithoutTenantsInput> | coursesCreateWithoutTenantsInput[] | coursesUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: coursesCreateOrConnectWithoutTenantsInput | coursesCreateOrConnectWithoutTenantsInput[]
    createMany?: coursesCreateManyTenantsInputEnvelope
    connect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
  }

  export type follow_upsCreateNestedManyWithoutTenantsInput = {
    create?: XOR<follow_upsCreateWithoutTenantsInput, follow_upsUncheckedCreateWithoutTenantsInput> | follow_upsCreateWithoutTenantsInput[] | follow_upsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutTenantsInput | follow_upsCreateOrConnectWithoutTenantsInput[]
    createMany?: follow_upsCreateManyTenantsInputEnvelope
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
  }

  export type leadsCreateNestedManyWithoutTenantsInput = {
    create?: XOR<leadsCreateWithoutTenantsInput, leadsUncheckedCreateWithoutTenantsInput> | leadsCreateWithoutTenantsInput[] | leadsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: leadsCreateOrConnectWithoutTenantsInput | leadsCreateOrConnectWithoutTenantsInput[]
    createMany?: leadsCreateManyTenantsInputEnvelope
    connect?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
  }

  export type password_reset_tokensCreateNestedManyWithoutTenantsInput = {
    create?: XOR<password_reset_tokensCreateWithoutTenantsInput, password_reset_tokensUncheckedCreateWithoutTenantsInput> | password_reset_tokensCreateWithoutTenantsInput[] | password_reset_tokensUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutTenantsInput | password_reset_tokensCreateOrConnectWithoutTenantsInput[]
    createMany?: password_reset_tokensCreateManyTenantsInputEnvelope
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
  }

  export type paymentsCreateNestedManyWithoutTenantsInput = {
    create?: XOR<paymentsCreateWithoutTenantsInput, paymentsUncheckedCreateWithoutTenantsInput> | paymentsCreateWithoutTenantsInput[] | paymentsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutTenantsInput | paymentsCreateOrConnectWithoutTenantsInput[]
    createMany?: paymentsCreateManyTenantsInputEnvelope
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
  }

  export type settingsCreateNestedManyWithoutTenantsInput = {
    create?: XOR<settingsCreateWithoutTenantsInput, settingsUncheckedCreateWithoutTenantsInput> | settingsCreateWithoutTenantsInput[] | settingsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: settingsCreateOrConnectWithoutTenantsInput | settingsCreateOrConnectWithoutTenantsInput[]
    createMany?: settingsCreateManyTenantsInputEnvelope
    connect?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
  }

  export type studentsCreateNestedManyWithoutTenantsInput = {
    create?: XOR<studentsCreateWithoutTenantsInput, studentsUncheckedCreateWithoutTenantsInput> | studentsCreateWithoutTenantsInput[] | studentsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: studentsCreateOrConnectWithoutTenantsInput | studentsCreateOrConnectWithoutTenantsInput[]
    createMany?: studentsCreateManyTenantsInputEnvelope
    connect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
  }

  export type usersCreateNestedManyWithoutTenantsInput = {
    create?: XOR<usersCreateWithoutTenantsInput, usersUncheckedCreateWithoutTenantsInput> | usersCreateWithoutTenantsInput[] | usersUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: usersCreateOrConnectWithoutTenantsInput | usersCreateOrConnectWithoutTenantsInput[]
    createMany?: usersCreateManyTenantsInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type batchesUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<batchesCreateWithoutTenantsInput, batchesUncheckedCreateWithoutTenantsInput> | batchesCreateWithoutTenantsInput[] | batchesUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: batchesCreateOrConnectWithoutTenantsInput | batchesCreateOrConnectWithoutTenantsInput[]
    createMany?: batchesCreateManyTenantsInputEnvelope
    connect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
  }

  export type coursesUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<coursesCreateWithoutTenantsInput, coursesUncheckedCreateWithoutTenantsInput> | coursesCreateWithoutTenantsInput[] | coursesUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: coursesCreateOrConnectWithoutTenantsInput | coursesCreateOrConnectWithoutTenantsInput[]
    createMany?: coursesCreateManyTenantsInputEnvelope
    connect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
  }

  export type follow_upsUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<follow_upsCreateWithoutTenantsInput, follow_upsUncheckedCreateWithoutTenantsInput> | follow_upsCreateWithoutTenantsInput[] | follow_upsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutTenantsInput | follow_upsCreateOrConnectWithoutTenantsInput[]
    createMany?: follow_upsCreateManyTenantsInputEnvelope
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
  }

  export type leadsUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<leadsCreateWithoutTenantsInput, leadsUncheckedCreateWithoutTenantsInput> | leadsCreateWithoutTenantsInput[] | leadsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: leadsCreateOrConnectWithoutTenantsInput | leadsCreateOrConnectWithoutTenantsInput[]
    createMany?: leadsCreateManyTenantsInputEnvelope
    connect?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
  }

  export type password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<password_reset_tokensCreateWithoutTenantsInput, password_reset_tokensUncheckedCreateWithoutTenantsInput> | password_reset_tokensCreateWithoutTenantsInput[] | password_reset_tokensUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutTenantsInput | password_reset_tokensCreateOrConnectWithoutTenantsInput[]
    createMany?: password_reset_tokensCreateManyTenantsInputEnvelope
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
  }

  export type paymentsUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<paymentsCreateWithoutTenantsInput, paymentsUncheckedCreateWithoutTenantsInput> | paymentsCreateWithoutTenantsInput[] | paymentsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutTenantsInput | paymentsCreateOrConnectWithoutTenantsInput[]
    createMany?: paymentsCreateManyTenantsInputEnvelope
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
  }

  export type settingsUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<settingsCreateWithoutTenantsInput, settingsUncheckedCreateWithoutTenantsInput> | settingsCreateWithoutTenantsInput[] | settingsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: settingsCreateOrConnectWithoutTenantsInput | settingsCreateOrConnectWithoutTenantsInput[]
    createMany?: settingsCreateManyTenantsInputEnvelope
    connect?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
  }

  export type studentsUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<studentsCreateWithoutTenantsInput, studentsUncheckedCreateWithoutTenantsInput> | studentsCreateWithoutTenantsInput[] | studentsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: studentsCreateOrConnectWithoutTenantsInput | studentsCreateOrConnectWithoutTenantsInput[]
    createMany?: studentsCreateManyTenantsInputEnvelope
    connect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutTenantsInput = {
    create?: XOR<usersCreateWithoutTenantsInput, usersUncheckedCreateWithoutTenantsInput> | usersCreateWithoutTenantsInput[] | usersUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: usersCreateOrConnectWithoutTenantsInput | usersCreateOrConnectWithoutTenantsInput[]
    createMany?: usersCreateManyTenantsInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type batchesUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<batchesCreateWithoutTenantsInput, batchesUncheckedCreateWithoutTenantsInput> | batchesCreateWithoutTenantsInput[] | batchesUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: batchesCreateOrConnectWithoutTenantsInput | batchesCreateOrConnectWithoutTenantsInput[]
    upsert?: batchesUpsertWithWhereUniqueWithoutTenantsInput | batchesUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: batchesCreateManyTenantsInputEnvelope
    set?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    disconnect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    delete?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    connect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    update?: batchesUpdateWithWhereUniqueWithoutTenantsInput | batchesUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: batchesUpdateManyWithWhereWithoutTenantsInput | batchesUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: batchesScalarWhereInput | batchesScalarWhereInput[]
  }

  export type coursesUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<coursesCreateWithoutTenantsInput, coursesUncheckedCreateWithoutTenantsInput> | coursesCreateWithoutTenantsInput[] | coursesUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: coursesCreateOrConnectWithoutTenantsInput | coursesCreateOrConnectWithoutTenantsInput[]
    upsert?: coursesUpsertWithWhereUniqueWithoutTenantsInput | coursesUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: coursesCreateManyTenantsInputEnvelope
    set?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    disconnect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    delete?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    connect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    update?: coursesUpdateWithWhereUniqueWithoutTenantsInput | coursesUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: coursesUpdateManyWithWhereWithoutTenantsInput | coursesUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: coursesScalarWhereInput | coursesScalarWhereInput[]
  }

  export type follow_upsUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<follow_upsCreateWithoutTenantsInput, follow_upsUncheckedCreateWithoutTenantsInput> | follow_upsCreateWithoutTenantsInput[] | follow_upsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutTenantsInput | follow_upsCreateOrConnectWithoutTenantsInput[]
    upsert?: follow_upsUpsertWithWhereUniqueWithoutTenantsInput | follow_upsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: follow_upsCreateManyTenantsInputEnvelope
    set?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    disconnect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    delete?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    update?: follow_upsUpdateWithWhereUniqueWithoutTenantsInput | follow_upsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: follow_upsUpdateManyWithWhereWithoutTenantsInput | follow_upsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
  }

  export type leadsUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<leadsCreateWithoutTenantsInput, leadsUncheckedCreateWithoutTenantsInput> | leadsCreateWithoutTenantsInput[] | leadsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: leadsCreateOrConnectWithoutTenantsInput | leadsCreateOrConnectWithoutTenantsInput[]
    upsert?: leadsUpsertWithWhereUniqueWithoutTenantsInput | leadsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: leadsCreateManyTenantsInputEnvelope
    set?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
    disconnect?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
    delete?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
    connect?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
    update?: leadsUpdateWithWhereUniqueWithoutTenantsInput | leadsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: leadsUpdateManyWithWhereWithoutTenantsInput | leadsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: leadsScalarWhereInput | leadsScalarWhereInput[]
  }

  export type password_reset_tokensUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<password_reset_tokensCreateWithoutTenantsInput, password_reset_tokensUncheckedCreateWithoutTenantsInput> | password_reset_tokensCreateWithoutTenantsInput[] | password_reset_tokensUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutTenantsInput | password_reset_tokensCreateOrConnectWithoutTenantsInput[]
    upsert?: password_reset_tokensUpsertWithWhereUniqueWithoutTenantsInput | password_reset_tokensUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: password_reset_tokensCreateManyTenantsInputEnvelope
    set?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    disconnect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    delete?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    update?: password_reset_tokensUpdateWithWhereUniqueWithoutTenantsInput | password_reset_tokensUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: password_reset_tokensUpdateManyWithWhereWithoutTenantsInput | password_reset_tokensUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
  }

  export type paymentsUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<paymentsCreateWithoutTenantsInput, paymentsUncheckedCreateWithoutTenantsInput> | paymentsCreateWithoutTenantsInput[] | paymentsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutTenantsInput | paymentsCreateOrConnectWithoutTenantsInput[]
    upsert?: paymentsUpsertWithWhereUniqueWithoutTenantsInput | paymentsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: paymentsCreateManyTenantsInputEnvelope
    set?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    disconnect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    delete?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    update?: paymentsUpdateWithWhereUniqueWithoutTenantsInput | paymentsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: paymentsUpdateManyWithWhereWithoutTenantsInput | paymentsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
  }

  export type settingsUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<settingsCreateWithoutTenantsInput, settingsUncheckedCreateWithoutTenantsInput> | settingsCreateWithoutTenantsInput[] | settingsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: settingsCreateOrConnectWithoutTenantsInput | settingsCreateOrConnectWithoutTenantsInput[]
    upsert?: settingsUpsertWithWhereUniqueWithoutTenantsInput | settingsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: settingsCreateManyTenantsInputEnvelope
    set?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
    disconnect?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
    delete?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
    connect?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
    update?: settingsUpdateWithWhereUniqueWithoutTenantsInput | settingsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: settingsUpdateManyWithWhereWithoutTenantsInput | settingsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: settingsScalarWhereInput | settingsScalarWhereInput[]
  }

  export type studentsUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<studentsCreateWithoutTenantsInput, studentsUncheckedCreateWithoutTenantsInput> | studentsCreateWithoutTenantsInput[] | studentsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: studentsCreateOrConnectWithoutTenantsInput | studentsCreateOrConnectWithoutTenantsInput[]
    upsert?: studentsUpsertWithWhereUniqueWithoutTenantsInput | studentsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: studentsCreateManyTenantsInputEnvelope
    set?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    disconnect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    delete?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    connect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    update?: studentsUpdateWithWhereUniqueWithoutTenantsInput | studentsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: studentsUpdateManyWithWhereWithoutTenantsInput | studentsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: studentsScalarWhereInput | studentsScalarWhereInput[]
  }

  export type usersUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<usersCreateWithoutTenantsInput, usersUncheckedCreateWithoutTenantsInput> | usersCreateWithoutTenantsInput[] | usersUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: usersCreateOrConnectWithoutTenantsInput | usersCreateOrConnectWithoutTenantsInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutTenantsInput | usersUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: usersCreateManyTenantsInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutTenantsInput | usersUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: usersUpdateManyWithWhereWithoutTenantsInput | usersUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type batchesUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<batchesCreateWithoutTenantsInput, batchesUncheckedCreateWithoutTenantsInput> | batchesCreateWithoutTenantsInput[] | batchesUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: batchesCreateOrConnectWithoutTenantsInput | batchesCreateOrConnectWithoutTenantsInput[]
    upsert?: batchesUpsertWithWhereUniqueWithoutTenantsInput | batchesUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: batchesCreateManyTenantsInputEnvelope
    set?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    disconnect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    delete?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    connect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    update?: batchesUpdateWithWhereUniqueWithoutTenantsInput | batchesUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: batchesUpdateManyWithWhereWithoutTenantsInput | batchesUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: batchesScalarWhereInput | batchesScalarWhereInput[]
  }

  export type coursesUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<coursesCreateWithoutTenantsInput, coursesUncheckedCreateWithoutTenantsInput> | coursesCreateWithoutTenantsInput[] | coursesUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: coursesCreateOrConnectWithoutTenantsInput | coursesCreateOrConnectWithoutTenantsInput[]
    upsert?: coursesUpsertWithWhereUniqueWithoutTenantsInput | coursesUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: coursesCreateManyTenantsInputEnvelope
    set?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    disconnect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    delete?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    connect?: coursesWhereUniqueInput | coursesWhereUniqueInput[]
    update?: coursesUpdateWithWhereUniqueWithoutTenantsInput | coursesUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: coursesUpdateManyWithWhereWithoutTenantsInput | coursesUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: coursesScalarWhereInput | coursesScalarWhereInput[]
  }

  export type follow_upsUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<follow_upsCreateWithoutTenantsInput, follow_upsUncheckedCreateWithoutTenantsInput> | follow_upsCreateWithoutTenantsInput[] | follow_upsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutTenantsInput | follow_upsCreateOrConnectWithoutTenantsInput[]
    upsert?: follow_upsUpsertWithWhereUniqueWithoutTenantsInput | follow_upsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: follow_upsCreateManyTenantsInputEnvelope
    set?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    disconnect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    delete?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    update?: follow_upsUpdateWithWhereUniqueWithoutTenantsInput | follow_upsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: follow_upsUpdateManyWithWhereWithoutTenantsInput | follow_upsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
  }

  export type leadsUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<leadsCreateWithoutTenantsInput, leadsUncheckedCreateWithoutTenantsInput> | leadsCreateWithoutTenantsInput[] | leadsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: leadsCreateOrConnectWithoutTenantsInput | leadsCreateOrConnectWithoutTenantsInput[]
    upsert?: leadsUpsertWithWhereUniqueWithoutTenantsInput | leadsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: leadsCreateManyTenantsInputEnvelope
    set?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
    disconnect?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
    delete?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
    connect?: leadsWhereUniqueInput | leadsWhereUniqueInput[]
    update?: leadsUpdateWithWhereUniqueWithoutTenantsInput | leadsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: leadsUpdateManyWithWhereWithoutTenantsInput | leadsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: leadsScalarWhereInput | leadsScalarWhereInput[]
  }

  export type password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<password_reset_tokensCreateWithoutTenantsInput, password_reset_tokensUncheckedCreateWithoutTenantsInput> | password_reset_tokensCreateWithoutTenantsInput[] | password_reset_tokensUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutTenantsInput | password_reset_tokensCreateOrConnectWithoutTenantsInput[]
    upsert?: password_reset_tokensUpsertWithWhereUniqueWithoutTenantsInput | password_reset_tokensUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: password_reset_tokensCreateManyTenantsInputEnvelope
    set?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    disconnect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    delete?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    update?: password_reset_tokensUpdateWithWhereUniqueWithoutTenantsInput | password_reset_tokensUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: password_reset_tokensUpdateManyWithWhereWithoutTenantsInput | password_reset_tokensUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
  }

  export type paymentsUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<paymentsCreateWithoutTenantsInput, paymentsUncheckedCreateWithoutTenantsInput> | paymentsCreateWithoutTenantsInput[] | paymentsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutTenantsInput | paymentsCreateOrConnectWithoutTenantsInput[]
    upsert?: paymentsUpsertWithWhereUniqueWithoutTenantsInput | paymentsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: paymentsCreateManyTenantsInputEnvelope
    set?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    disconnect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    delete?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    update?: paymentsUpdateWithWhereUniqueWithoutTenantsInput | paymentsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: paymentsUpdateManyWithWhereWithoutTenantsInput | paymentsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
  }

  export type settingsUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<settingsCreateWithoutTenantsInput, settingsUncheckedCreateWithoutTenantsInput> | settingsCreateWithoutTenantsInput[] | settingsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: settingsCreateOrConnectWithoutTenantsInput | settingsCreateOrConnectWithoutTenantsInput[]
    upsert?: settingsUpsertWithWhereUniqueWithoutTenantsInput | settingsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: settingsCreateManyTenantsInputEnvelope
    set?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
    disconnect?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
    delete?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
    connect?: settingsWhereUniqueInput | settingsWhereUniqueInput[]
    update?: settingsUpdateWithWhereUniqueWithoutTenantsInput | settingsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: settingsUpdateManyWithWhereWithoutTenantsInput | settingsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: settingsScalarWhereInput | settingsScalarWhereInput[]
  }

  export type studentsUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<studentsCreateWithoutTenantsInput, studentsUncheckedCreateWithoutTenantsInput> | studentsCreateWithoutTenantsInput[] | studentsUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: studentsCreateOrConnectWithoutTenantsInput | studentsCreateOrConnectWithoutTenantsInput[]
    upsert?: studentsUpsertWithWhereUniqueWithoutTenantsInput | studentsUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: studentsCreateManyTenantsInputEnvelope
    set?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    disconnect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    delete?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    connect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    update?: studentsUpdateWithWhereUniqueWithoutTenantsInput | studentsUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: studentsUpdateManyWithWhereWithoutTenantsInput | studentsUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: studentsScalarWhereInput | studentsScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutTenantsNestedInput = {
    create?: XOR<usersCreateWithoutTenantsInput, usersUncheckedCreateWithoutTenantsInput> | usersCreateWithoutTenantsInput[] | usersUncheckedCreateWithoutTenantsInput[]
    connectOrCreate?: usersCreateOrConnectWithoutTenantsInput | usersCreateOrConnectWithoutTenantsInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutTenantsInput | usersUpsertWithWhereUniqueWithoutTenantsInput[]
    createMany?: usersCreateManyTenantsInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutTenantsInput | usersUpdateWithWhereUniqueWithoutTenantsInput[]
    updateMany?: usersUpdateManyWithWhereWithoutTenantsInput | usersUpdateManyWithWhereWithoutTenantsInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type batchesCreateNestedManyWithoutUsersInput = {
    create?: XOR<batchesCreateWithoutUsersInput, batchesUncheckedCreateWithoutUsersInput> | batchesCreateWithoutUsersInput[] | batchesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: batchesCreateOrConnectWithoutUsersInput | batchesCreateOrConnectWithoutUsersInput[]
    createMany?: batchesCreateManyUsersInputEnvelope
    connect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
  }

  export type follow_up_commentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<follow_up_commentsCreateWithoutUsersInput, follow_up_commentsUncheckedCreateWithoutUsersInput> | follow_up_commentsCreateWithoutUsersInput[] | follow_up_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: follow_up_commentsCreateOrConnectWithoutUsersInput | follow_up_commentsCreateOrConnectWithoutUsersInput[]
    createMany?: follow_up_commentsCreateManyUsersInputEnvelope
    connect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
  }

  export type follow_upsCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput = {
    create?: XOR<follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput> | follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput[] | follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput[]
    createMany?: follow_upsCreateManyUsers_follow_ups_assigned_toTousersInputEnvelope
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
  }

  export type follow_upsCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput = {
    create?: XOR<follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput> | follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput[] | follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput | follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput[]
    createMany?: follow_upsCreateManyUsers_follow_ups_created_byTousersInputEnvelope
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
  }

  export type password_reset_tokensCreateNestedManyWithoutUsersInput = {
    create?: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput> | password_reset_tokensCreateWithoutUsersInput[] | password_reset_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutUsersInput | password_reset_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: password_reset_tokensCreateManyUsersInputEnvelope
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
  }

  export type studentsCreateNestedManyWithoutUsersInput = {
    create?: XOR<studentsCreateWithoutUsersInput, studentsUncheckedCreateWithoutUsersInput> | studentsCreateWithoutUsersInput[] | studentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: studentsCreateOrConnectWithoutUsersInput | studentsCreateOrConnectWithoutUsersInput[]
    createMany?: studentsCreateManyUsersInputEnvelope
    connect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
  }

  export type tenantsCreateNestedOneWithoutUsersInput = {
    create?: XOR<tenantsCreateWithoutUsersInput, tenantsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutUsersInput
    connect?: tenantsWhereUniqueInput
  }

  export type batchesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<batchesCreateWithoutUsersInput, batchesUncheckedCreateWithoutUsersInput> | batchesCreateWithoutUsersInput[] | batchesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: batchesCreateOrConnectWithoutUsersInput | batchesCreateOrConnectWithoutUsersInput[]
    createMany?: batchesCreateManyUsersInputEnvelope
    connect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
  }

  export type follow_up_commentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<follow_up_commentsCreateWithoutUsersInput, follow_up_commentsUncheckedCreateWithoutUsersInput> | follow_up_commentsCreateWithoutUsersInput[] | follow_up_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: follow_up_commentsCreateOrConnectWithoutUsersInput | follow_up_commentsCreateOrConnectWithoutUsersInput[]
    createMany?: follow_up_commentsCreateManyUsersInputEnvelope
    connect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
  }

  export type follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput = {
    create?: XOR<follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput> | follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput[] | follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput[]
    createMany?: follow_upsCreateManyUsers_follow_ups_assigned_toTousersInputEnvelope
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
  }

  export type follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput = {
    create?: XOR<follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput> | follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput[] | follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput | follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput[]
    createMany?: follow_upsCreateManyUsers_follow_ups_created_byTousersInputEnvelope
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
  }

  export type password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput> | password_reset_tokensCreateWithoutUsersInput[] | password_reset_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutUsersInput | password_reset_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: password_reset_tokensCreateManyUsersInputEnvelope
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
  }

  export type studentsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<studentsCreateWithoutUsersInput, studentsUncheckedCreateWithoutUsersInput> | studentsCreateWithoutUsersInput[] | studentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: studentsCreateOrConnectWithoutUsersInput | studentsCreateOrConnectWithoutUsersInput[]
    createMany?: studentsCreateManyUsersInputEnvelope
    connect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
  }

  export type Enumuser_roleFieldUpdateOperationsInput = {
    set?: $Enums.user_role
  }

  export type batchesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<batchesCreateWithoutUsersInput, batchesUncheckedCreateWithoutUsersInput> | batchesCreateWithoutUsersInput[] | batchesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: batchesCreateOrConnectWithoutUsersInput | batchesCreateOrConnectWithoutUsersInput[]
    upsert?: batchesUpsertWithWhereUniqueWithoutUsersInput | batchesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: batchesCreateManyUsersInputEnvelope
    set?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    disconnect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    delete?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    connect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    update?: batchesUpdateWithWhereUniqueWithoutUsersInput | batchesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: batchesUpdateManyWithWhereWithoutUsersInput | batchesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: batchesScalarWhereInput | batchesScalarWhereInput[]
  }

  export type follow_up_commentsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<follow_up_commentsCreateWithoutUsersInput, follow_up_commentsUncheckedCreateWithoutUsersInput> | follow_up_commentsCreateWithoutUsersInput[] | follow_up_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: follow_up_commentsCreateOrConnectWithoutUsersInput | follow_up_commentsCreateOrConnectWithoutUsersInput[]
    upsert?: follow_up_commentsUpsertWithWhereUniqueWithoutUsersInput | follow_up_commentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: follow_up_commentsCreateManyUsersInputEnvelope
    set?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    disconnect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    delete?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    connect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    update?: follow_up_commentsUpdateWithWhereUniqueWithoutUsersInput | follow_up_commentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: follow_up_commentsUpdateManyWithWhereWithoutUsersInput | follow_up_commentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: follow_up_commentsScalarWhereInput | follow_up_commentsScalarWhereInput[]
  }

  export type follow_upsUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput = {
    create?: XOR<follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput> | follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput[] | follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput[]
    upsert?: follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput[]
    createMany?: follow_upsCreateManyUsers_follow_ups_assigned_toTousersInputEnvelope
    set?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    disconnect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    delete?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    update?: follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput[]
    updateMany?: follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_assigned_toTousersInput[]
    deleteMany?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
  }

  export type follow_upsUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput = {
    create?: XOR<follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput> | follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput[] | follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput | follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput[]
    upsert?: follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput | follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput[]
    createMany?: follow_upsCreateManyUsers_follow_ups_created_byTousersInputEnvelope
    set?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    disconnect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    delete?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    update?: follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput | follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput[]
    updateMany?: follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_created_byTousersInput | follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_created_byTousersInput[]
    deleteMany?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
  }

  export type password_reset_tokensUpdateManyWithoutUsersNestedInput = {
    create?: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput> | password_reset_tokensCreateWithoutUsersInput[] | password_reset_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutUsersInput | password_reset_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput | password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: password_reset_tokensCreateManyUsersInputEnvelope
    set?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    disconnect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    delete?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    update?: password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput | password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: password_reset_tokensUpdateManyWithWhereWithoutUsersInput | password_reset_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
  }

  export type studentsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<studentsCreateWithoutUsersInput, studentsUncheckedCreateWithoutUsersInput> | studentsCreateWithoutUsersInput[] | studentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: studentsCreateOrConnectWithoutUsersInput | studentsCreateOrConnectWithoutUsersInput[]
    upsert?: studentsUpsertWithWhereUniqueWithoutUsersInput | studentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: studentsCreateManyUsersInputEnvelope
    set?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    disconnect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    delete?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    connect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    update?: studentsUpdateWithWhereUniqueWithoutUsersInput | studentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: studentsUpdateManyWithWhereWithoutUsersInput | studentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: studentsScalarWhereInput | studentsScalarWhereInput[]
  }

  export type tenantsUpdateOneWithoutUsersNestedInput = {
    create?: XOR<tenantsCreateWithoutUsersInput, tenantsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: tenantsCreateOrConnectWithoutUsersInput
    upsert?: tenantsUpsertWithoutUsersInput
    disconnect?: tenantsWhereInput | boolean
    delete?: tenantsWhereInput | boolean
    connect?: tenantsWhereUniqueInput
    update?: XOR<XOR<tenantsUpdateToOneWithWhereWithoutUsersInput, tenantsUpdateWithoutUsersInput>, tenantsUncheckedUpdateWithoutUsersInput>
  }

  export type batchesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<batchesCreateWithoutUsersInput, batchesUncheckedCreateWithoutUsersInput> | batchesCreateWithoutUsersInput[] | batchesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: batchesCreateOrConnectWithoutUsersInput | batchesCreateOrConnectWithoutUsersInput[]
    upsert?: batchesUpsertWithWhereUniqueWithoutUsersInput | batchesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: batchesCreateManyUsersInputEnvelope
    set?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    disconnect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    delete?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    connect?: batchesWhereUniqueInput | batchesWhereUniqueInput[]
    update?: batchesUpdateWithWhereUniqueWithoutUsersInput | batchesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: batchesUpdateManyWithWhereWithoutUsersInput | batchesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: batchesScalarWhereInput | batchesScalarWhereInput[]
  }

  export type follow_up_commentsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<follow_up_commentsCreateWithoutUsersInput, follow_up_commentsUncheckedCreateWithoutUsersInput> | follow_up_commentsCreateWithoutUsersInput[] | follow_up_commentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: follow_up_commentsCreateOrConnectWithoutUsersInput | follow_up_commentsCreateOrConnectWithoutUsersInput[]
    upsert?: follow_up_commentsUpsertWithWhereUniqueWithoutUsersInput | follow_up_commentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: follow_up_commentsCreateManyUsersInputEnvelope
    set?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    disconnect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    delete?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    connect?: follow_up_commentsWhereUniqueInput | follow_up_commentsWhereUniqueInput[]
    update?: follow_up_commentsUpdateWithWhereUniqueWithoutUsersInput | follow_up_commentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: follow_up_commentsUpdateManyWithWhereWithoutUsersInput | follow_up_commentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: follow_up_commentsScalarWhereInput | follow_up_commentsScalarWhereInput[]
  }

  export type follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput = {
    create?: XOR<follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput> | follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput[] | follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput[]
    upsert?: follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput[]
    createMany?: follow_upsCreateManyUsers_follow_ups_assigned_toTousersInputEnvelope
    set?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    disconnect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    delete?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    update?: follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput[]
    updateMany?: follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_assigned_toTousersInput | follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_assigned_toTousersInput[]
    deleteMany?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
  }

  export type follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput = {
    create?: XOR<follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput> | follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput[] | follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput[]
    connectOrCreate?: follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput | follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput[]
    upsert?: follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput | follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput[]
    createMany?: follow_upsCreateManyUsers_follow_ups_created_byTousersInputEnvelope
    set?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    disconnect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    delete?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    connect?: follow_upsWhereUniqueInput | follow_upsWhereUniqueInput[]
    update?: follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput | follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput[]
    updateMany?: follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_created_byTousersInput | follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_created_byTousersInput[]
    deleteMany?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
  }

  export type password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput> | password_reset_tokensCreateWithoutUsersInput[] | password_reset_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutUsersInput | password_reset_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput | password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: password_reset_tokensCreateManyUsersInputEnvelope
    set?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    disconnect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    delete?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    connect?: password_reset_tokensWhereUniqueInput | password_reset_tokensWhereUniqueInput[]
    update?: password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput | password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: password_reset_tokensUpdateManyWithWhereWithoutUsersInput | password_reset_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
  }

  export type studentsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<studentsCreateWithoutUsersInput, studentsUncheckedCreateWithoutUsersInput> | studentsCreateWithoutUsersInput[] | studentsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: studentsCreateOrConnectWithoutUsersInput | studentsCreateOrConnectWithoutUsersInput[]
    upsert?: studentsUpsertWithWhereUniqueWithoutUsersInput | studentsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: studentsCreateManyUsersInputEnvelope
    set?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    disconnect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    delete?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    connect?: studentsWhereUniqueInput | studentsWhereUniqueInput[]
    update?: studentsUpdateWithWhereUniqueWithoutUsersInput | studentsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: studentsUpdateManyWithWhereWithoutUsersInput | studentsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: studentsScalarWhereInput | studentsScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumlead_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.lead_status | Enumlead_statusFieldRefInput<$PrismaModel>
    in?: $Enums.lead_status[] | ListEnumlead_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.lead_status[] | ListEnumlead_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumlead_statusFilter<$PrismaModel> | $Enums.lead_status
  }

  export type NestedEnumlead_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.lead_status | Enumlead_statusFieldRefInput<$PrismaModel>
    in?: $Enums.lead_status[] | ListEnumlead_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.lead_status[] | ListEnumlead_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumlead_statusWithAggregatesFilter<$PrismaModel> | $Enums.lead_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumlead_statusFilter<$PrismaModel>
    _max?: NestedEnumlead_statusFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumpayment_methodFilter<$PrismaModel = never> = {
    equals?: $Enums.payment_method | Enumpayment_methodFieldRefInput<$PrismaModel>
    in?: $Enums.payment_method[] | ListEnumpayment_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.payment_method[] | ListEnumpayment_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumpayment_methodFilter<$PrismaModel> | $Enums.payment_method
  }

  export type NestedEnumpayment_methodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.payment_method | Enumpayment_methodFieldRefInput<$PrismaModel>
    in?: $Enums.payment_method[] | ListEnumpayment_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.payment_method[] | ListEnumpayment_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumpayment_methodWithAggregatesFilter<$PrismaModel> | $Enums.payment_method
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpayment_methodFilter<$PrismaModel>
    _max?: NestedEnumpayment_methodFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumuser_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_roleFilter<$PrismaModel> | $Enums.user_role
  }

  export type NestedEnumuser_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    notIn?: $Enums.user_role[] | ListEnumuser_roleFieldRefInput<$PrismaModel>
    not?: NestedEnumuser_roleWithAggregatesFilter<$PrismaModel> | $Enums.user_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_roleFilter<$PrismaModel>
    _max?: NestedEnumuser_roleFilter<$PrismaModel>
  }

  export type tenantsCreateWithoutBatchesInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    courses?: coursesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutBatchesInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutBatchesInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutBatchesInput, tenantsUncheckedCreateWithoutBatchesInput>
  }

  export type usersCreateWithoutBatchesInput = {
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    students?: studentsCreateNestedManyWithoutUsersInput
    tenants?: tenantsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutBatchesInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    tenant_id?: number | null
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    students?: studentsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutBatchesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutBatchesInput, usersUncheckedCreateWithoutBatchesInput>
  }

  export type tenantsUpsertWithoutBatchesInput = {
    update: XOR<tenantsUpdateWithoutBatchesInput, tenantsUncheckedUpdateWithoutBatchesInput>
    create: XOR<tenantsCreateWithoutBatchesInput, tenantsUncheckedCreateWithoutBatchesInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutBatchesInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutBatchesInput, tenantsUncheckedUpdateWithoutBatchesInput>
  }

  export type tenantsUpdateWithoutBatchesInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutBatchesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type usersUpsertWithoutBatchesInput = {
    update: XOR<usersUpdateWithoutBatchesInput, usersUncheckedUpdateWithoutBatchesInput>
    create: XOR<usersCreateWithoutBatchesInput, usersUncheckedCreateWithoutBatchesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutBatchesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutBatchesInput, usersUncheckedUpdateWithoutBatchesInput>
  }

  export type usersUpdateWithoutBatchesInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    follow_up_comments?: follow_up_commentsUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    students?: studentsUpdateManyWithoutUsersNestedInput
    tenants?: tenantsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutBatchesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    students?: studentsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type tenantsCreateWithoutCoursesInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutCoursesInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutCoursesInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutCoursesInput, tenantsUncheckedCreateWithoutCoursesInput>
  }

  export type tenantsUpsertWithoutCoursesInput = {
    update: XOR<tenantsUpdateWithoutCoursesInput, tenantsUncheckedUpdateWithoutCoursesInput>
    create: XOR<tenantsCreateWithoutCoursesInput, tenantsUncheckedCreateWithoutCoursesInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutCoursesInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutCoursesInput, tenantsUncheckedUpdateWithoutCoursesInput>
  }

  export type tenantsUpdateWithoutCoursesInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutCoursesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type usersCreateWithoutFollow_up_commentsInput = {
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    batches?: batchesCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    students?: studentsCreateNestedManyWithoutUsersInput
    tenants?: tenantsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutFollow_up_commentsInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    tenant_id?: number | null
    batches?: batchesUncheckedCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    students?: studentsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutFollow_up_commentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutFollow_up_commentsInput, usersUncheckedCreateWithoutFollow_up_commentsInput>
  }

  export type follow_upsCreateWithoutFollow_up_commentsInput = {
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    users_follow_ups_assigned_toTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_assigned_toTousersInput
    users_follow_ups_created_byTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_created_byTousersInput
    leads: leadsCreateNestedOneWithoutFollow_upsInput
    tenants?: tenantsCreateNestedOneWithoutFollow_upsInput
  }

  export type follow_upsUncheckedCreateWithoutFollow_up_commentsInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
  }

  export type follow_upsCreateOrConnectWithoutFollow_up_commentsInput = {
    where: follow_upsWhereUniqueInput
    create: XOR<follow_upsCreateWithoutFollow_up_commentsInput, follow_upsUncheckedCreateWithoutFollow_up_commentsInput>
  }

  export type usersUpsertWithoutFollow_up_commentsInput = {
    update: XOR<usersUpdateWithoutFollow_up_commentsInput, usersUncheckedUpdateWithoutFollow_up_commentsInput>
    create: XOR<usersCreateWithoutFollow_up_commentsInput, usersUncheckedCreateWithoutFollow_up_commentsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutFollow_up_commentsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutFollow_up_commentsInput, usersUncheckedUpdateWithoutFollow_up_commentsInput>
  }

  export type usersUpdateWithoutFollow_up_commentsInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    batches?: batchesUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    students?: studentsUpdateManyWithoutUsersNestedInput
    tenants?: tenantsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutFollow_up_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    batches?: batchesUncheckedUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    students?: studentsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type follow_upsUpsertWithoutFollow_up_commentsInput = {
    update: XOR<follow_upsUpdateWithoutFollow_up_commentsInput, follow_upsUncheckedUpdateWithoutFollow_up_commentsInput>
    create: XOR<follow_upsCreateWithoutFollow_up_commentsInput, follow_upsUncheckedCreateWithoutFollow_up_commentsInput>
    where?: follow_upsWhereInput
  }

  export type follow_upsUpdateToOneWithWhereWithoutFollow_up_commentsInput = {
    where?: follow_upsWhereInput
    data: XOR<follow_upsUpdateWithoutFollow_up_commentsInput, follow_upsUncheckedUpdateWithoutFollow_up_commentsInput>
  }

  export type follow_upsUpdateWithoutFollow_up_commentsInput = {
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_follow_ups_assigned_toTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_assigned_toTousersNestedInput
    users_follow_ups_created_byTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_created_byTousersNestedInput
    leads?: leadsUpdateOneRequiredWithoutFollow_upsNestedInput
    tenants?: tenantsUpdateOneWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateWithoutFollow_up_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type follow_up_commentsCreateWithoutFollow_upsInput = {
    comment: string
    created_at?: Date | string
    users?: usersCreateNestedOneWithoutFollow_up_commentsInput
  }

  export type follow_up_commentsUncheckedCreateWithoutFollow_upsInput = {
    id?: number
    comment: string
    created_by?: number | null
    created_at?: Date | string
  }

  export type follow_up_commentsCreateOrConnectWithoutFollow_upsInput = {
    where: follow_up_commentsWhereUniqueInput
    create: XOR<follow_up_commentsCreateWithoutFollow_upsInput, follow_up_commentsUncheckedCreateWithoutFollow_upsInput>
  }

  export type follow_up_commentsCreateManyFollow_upsInputEnvelope = {
    data: follow_up_commentsCreateManyFollow_upsInput | follow_up_commentsCreateManyFollow_upsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput = {
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    batches?: batchesCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    students?: studentsCreateNestedManyWithoutUsersInput
    tenants?: tenantsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    tenant_id?: number | null
    batches?: batchesUncheckedCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    students?: studentsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutFollow_ups_follow_ups_assigned_toTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput, usersUncheckedCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput>
  }

  export type usersCreateWithoutFollow_ups_follow_ups_created_byTousersInput = {
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    batches?: batchesCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    students?: studentsCreateNestedManyWithoutUsersInput
    tenants?: tenantsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutFollow_ups_follow_ups_created_byTousersInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    tenant_id?: number | null
    batches?: batchesUncheckedCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    students?: studentsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutFollow_ups_follow_ups_created_byTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutFollow_ups_follow_ups_created_byTousersInput, usersUncheckedCreateWithoutFollow_ups_follow_ups_created_byTousersInput>
  }

  export type leadsCreateWithoutFollow_upsInput = {
    name: string
    phone: string
    email?: string | null
    source: string
    status?: $Enums.lead_status
    notes?: string | null
    assigned_to?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    course?: string | null
    tenants?: tenantsCreateNestedOneWithoutLeadsInput
  }

  export type leadsUncheckedCreateWithoutFollow_upsInput = {
    id?: number
    name: string
    phone: string
    email?: string | null
    source: string
    status?: $Enums.lead_status
    notes?: string | null
    assigned_to?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    course?: string | null
    tenant_id?: number | null
  }

  export type leadsCreateOrConnectWithoutFollow_upsInput = {
    where: leadsWhereUniqueInput
    create: XOR<leadsCreateWithoutFollow_upsInput, leadsUncheckedCreateWithoutFollow_upsInput>
  }

  export type tenantsCreateWithoutFollow_upsInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    courses?: coursesCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutFollow_upsInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutFollow_upsInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutFollow_upsInput, tenantsUncheckedCreateWithoutFollow_upsInput>
  }

  export type follow_up_commentsUpsertWithWhereUniqueWithoutFollow_upsInput = {
    where: follow_up_commentsWhereUniqueInput
    update: XOR<follow_up_commentsUpdateWithoutFollow_upsInput, follow_up_commentsUncheckedUpdateWithoutFollow_upsInput>
    create: XOR<follow_up_commentsCreateWithoutFollow_upsInput, follow_up_commentsUncheckedCreateWithoutFollow_upsInput>
  }

  export type follow_up_commentsUpdateWithWhereUniqueWithoutFollow_upsInput = {
    where: follow_up_commentsWhereUniqueInput
    data: XOR<follow_up_commentsUpdateWithoutFollow_upsInput, follow_up_commentsUncheckedUpdateWithoutFollow_upsInput>
  }

  export type follow_up_commentsUpdateManyWithWhereWithoutFollow_upsInput = {
    where: follow_up_commentsScalarWhereInput
    data: XOR<follow_up_commentsUpdateManyMutationInput, follow_up_commentsUncheckedUpdateManyWithoutFollow_upsInput>
  }

  export type follow_up_commentsScalarWhereInput = {
    AND?: follow_up_commentsScalarWhereInput | follow_up_commentsScalarWhereInput[]
    OR?: follow_up_commentsScalarWhereInput[]
    NOT?: follow_up_commentsScalarWhereInput | follow_up_commentsScalarWhereInput[]
    id?: IntFilter<"follow_up_comments"> | number
    follow_up_id?: IntFilter<"follow_up_comments"> | number
    comment?: StringFilter<"follow_up_comments"> | string
    created_by?: IntNullableFilter<"follow_up_comments"> | number | null
    created_at?: DateTimeFilter<"follow_up_comments"> | Date | string
  }

  export type usersUpsertWithoutFollow_ups_follow_ups_assigned_toTousersInput = {
    update: XOR<usersUpdateWithoutFollow_ups_follow_ups_assigned_toTousersInput, usersUncheckedUpdateWithoutFollow_ups_follow_ups_assigned_toTousersInput>
    create: XOR<usersCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput, usersUncheckedCreateWithoutFollow_ups_follow_ups_assigned_toTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutFollow_ups_follow_ups_assigned_toTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutFollow_ups_follow_ups_assigned_toTousersInput, usersUncheckedUpdateWithoutFollow_ups_follow_ups_assigned_toTousersInput>
  }

  export type usersUpdateWithoutFollow_ups_follow_ups_assigned_toTousersInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    batches?: batchesUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    students?: studentsUpdateManyWithoutUsersNestedInput
    tenants?: tenantsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutFollow_ups_follow_ups_assigned_toTousersInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    batches?: batchesUncheckedUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    students?: studentsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUpsertWithoutFollow_ups_follow_ups_created_byTousersInput = {
    update: XOR<usersUpdateWithoutFollow_ups_follow_ups_created_byTousersInput, usersUncheckedUpdateWithoutFollow_ups_follow_ups_created_byTousersInput>
    create: XOR<usersCreateWithoutFollow_ups_follow_ups_created_byTousersInput, usersUncheckedCreateWithoutFollow_ups_follow_ups_created_byTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutFollow_ups_follow_ups_created_byTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutFollow_ups_follow_ups_created_byTousersInput, usersUncheckedUpdateWithoutFollow_ups_follow_ups_created_byTousersInput>
  }

  export type usersUpdateWithoutFollow_ups_follow_ups_created_byTousersInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    batches?: batchesUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    students?: studentsUpdateManyWithoutUsersNestedInput
    tenants?: tenantsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutFollow_ups_follow_ups_created_byTousersInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    batches?: batchesUncheckedUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    students?: studentsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type leadsUpsertWithoutFollow_upsInput = {
    update: XOR<leadsUpdateWithoutFollow_upsInput, leadsUncheckedUpdateWithoutFollow_upsInput>
    create: XOR<leadsCreateWithoutFollow_upsInput, leadsUncheckedCreateWithoutFollow_upsInput>
    where?: leadsWhereInput
  }

  export type leadsUpdateToOneWithWhereWithoutFollow_upsInput = {
    where?: leadsWhereInput
    data: XOR<leadsUpdateWithoutFollow_upsInput, leadsUncheckedUpdateWithoutFollow_upsInput>
  }

  export type leadsUpdateWithoutFollow_upsInput = {
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    tenants?: tenantsUpdateOneWithoutLeadsNestedInput
  }

  export type leadsUncheckedUpdateWithoutFollow_upsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tenantsUpsertWithoutFollow_upsInput = {
    update: XOR<tenantsUpdateWithoutFollow_upsInput, tenantsUncheckedUpdateWithoutFollow_upsInput>
    create: XOR<tenantsCreateWithoutFollow_upsInput, tenantsUncheckedCreateWithoutFollow_upsInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutFollow_upsInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutFollow_upsInput, tenantsUncheckedUpdateWithoutFollow_upsInput>
  }

  export type tenantsUpdateWithoutFollow_upsInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutFollow_upsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type follow_upsCreateWithoutLeadsInput = {
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutFollow_upsInput
    users_follow_ups_assigned_toTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_assigned_toTousersInput
    users_follow_ups_created_byTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_created_byTousersInput
    tenants?: tenantsCreateNestedOneWithoutFollow_upsInput
  }

  export type follow_upsUncheckedCreateWithoutLeadsInput = {
    id?: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutFollow_upsInput
  }

  export type follow_upsCreateOrConnectWithoutLeadsInput = {
    where: follow_upsWhereUniqueInput
    create: XOR<follow_upsCreateWithoutLeadsInput, follow_upsUncheckedCreateWithoutLeadsInput>
  }

  export type follow_upsCreateManyLeadsInputEnvelope = {
    data: follow_upsCreateManyLeadsInput | follow_upsCreateManyLeadsInput[]
    skipDuplicates?: boolean
  }

  export type tenantsCreateWithoutLeadsInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    courses?: coursesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutLeadsInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutLeadsInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutLeadsInput, tenantsUncheckedCreateWithoutLeadsInput>
  }

  export type follow_upsUpsertWithWhereUniqueWithoutLeadsInput = {
    where: follow_upsWhereUniqueInput
    update: XOR<follow_upsUpdateWithoutLeadsInput, follow_upsUncheckedUpdateWithoutLeadsInput>
    create: XOR<follow_upsCreateWithoutLeadsInput, follow_upsUncheckedCreateWithoutLeadsInput>
  }

  export type follow_upsUpdateWithWhereUniqueWithoutLeadsInput = {
    where: follow_upsWhereUniqueInput
    data: XOR<follow_upsUpdateWithoutLeadsInput, follow_upsUncheckedUpdateWithoutLeadsInput>
  }

  export type follow_upsUpdateManyWithWhereWithoutLeadsInput = {
    where: follow_upsScalarWhereInput
    data: XOR<follow_upsUpdateManyMutationInput, follow_upsUncheckedUpdateManyWithoutLeadsInput>
  }

  export type follow_upsScalarWhereInput = {
    AND?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
    OR?: follow_upsScalarWhereInput[]
    NOT?: follow_upsScalarWhereInput | follow_upsScalarWhereInput[]
    id?: IntFilter<"follow_ups"> | number
    lead_id?: IntFilter<"follow_ups"> | number
    follow_up_date?: DateTimeFilter<"follow_ups"> | Date | string
    comments?: StringNullableFilter<"follow_ups"> | string | null
    status?: StringFilter<"follow_ups"> | string
    assigned_to?: IntNullableFilter<"follow_ups"> | number | null
    created_by?: IntNullableFilter<"follow_ups"> | number | null
    is_completed?: BoolNullableFilter<"follow_ups"> | boolean | null
    completed_at?: DateTimeNullableFilter<"follow_ups"> | Date | string | null
    created_at?: DateTimeFilter<"follow_ups"> | Date | string
    updated_at?: DateTimeFilter<"follow_ups"> | Date | string
    type?: StringFilter<"follow_ups"> | string
    next_follow_up_date?: DateTimeNullableFilter<"follow_ups"> | Date | string | null
    tenant_id?: IntNullableFilter<"follow_ups"> | number | null
  }

  export type tenantsUpsertWithoutLeadsInput = {
    update: XOR<tenantsUpdateWithoutLeadsInput, tenantsUncheckedUpdateWithoutLeadsInput>
    create: XOR<tenantsCreateWithoutLeadsInput, tenantsUncheckedCreateWithoutLeadsInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutLeadsInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutLeadsInput, tenantsUncheckedUpdateWithoutLeadsInput>
  }

  export type tenantsUpdateWithoutLeadsInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutLeadsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsCreateWithoutPassword_reset_tokensInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    courses?: coursesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutPassword_reset_tokensInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutPassword_reset_tokensInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutPassword_reset_tokensInput, tenantsUncheckedCreateWithoutPassword_reset_tokensInput>
  }

  export type usersCreateWithoutPassword_reset_tokensInput = {
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    batches?: batchesCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    students?: studentsCreateNestedManyWithoutUsersInput
    tenants?: tenantsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutPassword_reset_tokensInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    tenant_id?: number | null
    batches?: batchesUncheckedCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    students?: studentsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutPassword_reset_tokensInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPassword_reset_tokensInput, usersUncheckedCreateWithoutPassword_reset_tokensInput>
  }

  export type tenantsUpsertWithoutPassword_reset_tokensInput = {
    update: XOR<tenantsUpdateWithoutPassword_reset_tokensInput, tenantsUncheckedUpdateWithoutPassword_reset_tokensInput>
    create: XOR<tenantsCreateWithoutPassword_reset_tokensInput, tenantsUncheckedCreateWithoutPassword_reset_tokensInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutPassword_reset_tokensInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutPassword_reset_tokensInput, tenantsUncheckedUpdateWithoutPassword_reset_tokensInput>
  }

  export type tenantsUpdateWithoutPassword_reset_tokensInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutPassword_reset_tokensInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type usersUpsertWithoutPassword_reset_tokensInput = {
    update: XOR<usersUpdateWithoutPassword_reset_tokensInput, usersUncheckedUpdateWithoutPassword_reset_tokensInput>
    create: XOR<usersCreateWithoutPassword_reset_tokensInput, usersUncheckedCreateWithoutPassword_reset_tokensInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPassword_reset_tokensInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPassword_reset_tokensInput, usersUncheckedUpdateWithoutPassword_reset_tokensInput>
  }

  export type usersUpdateWithoutPassword_reset_tokensInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    batches?: batchesUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    students?: studentsUpdateManyWithoutUsersNestedInput
    tenants?: tenantsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutPassword_reset_tokensInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    batches?: batchesUncheckedUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    students?: studentsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type tenantsCreateWithoutPaymentsInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    courses?: coursesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutPaymentsInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutPaymentsInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutPaymentsInput, tenantsUncheckedCreateWithoutPaymentsInput>
  }

  export type tenantsUpsertWithoutPaymentsInput = {
    update: XOR<tenantsUpdateWithoutPaymentsInput, tenantsUncheckedUpdateWithoutPaymentsInput>
    create: XOR<tenantsCreateWithoutPaymentsInput, tenantsUncheckedCreateWithoutPaymentsInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutPaymentsInput, tenantsUncheckedUpdateWithoutPaymentsInput>
  }

  export type tenantsUpdateWithoutPaymentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutPaymentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsCreateWithoutSettingsInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    courses?: coursesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutSettingsInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutSettingsInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutSettingsInput, tenantsUncheckedCreateWithoutSettingsInput>
  }

  export type tenantsUpsertWithoutSettingsInput = {
    update: XOR<tenantsUpdateWithoutSettingsInput, tenantsUncheckedUpdateWithoutSettingsInput>
    create: XOR<tenantsCreateWithoutSettingsInput, tenantsUncheckedCreateWithoutSettingsInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutSettingsInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutSettingsInput, tenantsUncheckedUpdateWithoutSettingsInput>
  }

  export type tenantsUpdateWithoutSettingsInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutSettingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsCreateWithoutStudentsInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    courses?: coursesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    users?: usersCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutStudentsInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    users?: usersUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutStudentsInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutStudentsInput, tenantsUncheckedCreateWithoutStudentsInput>
  }

  export type usersCreateWithoutStudentsInput = {
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    batches?: batchesCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    tenants?: tenantsCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutStudentsInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    tenant_id?: number | null
    batches?: batchesUncheckedCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutStudentsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutStudentsInput, usersUncheckedCreateWithoutStudentsInput>
  }

  export type tenantsUpsertWithoutStudentsInput = {
    update: XOR<tenantsUpdateWithoutStudentsInput, tenantsUncheckedUpdateWithoutStudentsInput>
    create: XOR<tenantsCreateWithoutStudentsInput, tenantsUncheckedCreateWithoutStudentsInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutStudentsInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutStudentsInput, tenantsUncheckedUpdateWithoutStudentsInput>
  }

  export type tenantsUpdateWithoutStudentsInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    users?: usersUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutStudentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    users?: usersUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type usersUpsertWithoutStudentsInput = {
    update: XOR<usersUpdateWithoutStudentsInput, usersUncheckedUpdateWithoutStudentsInput>
    create: XOR<usersCreateWithoutStudentsInput, usersUncheckedCreateWithoutStudentsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutStudentsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutStudentsInput, usersUncheckedUpdateWithoutStudentsInput>
  }

  export type usersUpdateWithoutStudentsInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    batches?: batchesUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    tenants?: tenantsUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutStudentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    batches?: batchesUncheckedUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type batchesCreateWithoutTenantsInput = {
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    capacity?: number | null
    updated_at?: Date | string | null
    users?: usersCreateNestedOneWithoutBatchesInput
  }

  export type batchesUncheckedCreateWithoutTenantsInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    trainer_id?: number | null
    capacity?: number | null
    updated_at?: Date | string | null
  }

  export type batchesCreateOrConnectWithoutTenantsInput = {
    where: batchesWhereUniqueInput
    create: XOR<batchesCreateWithoutTenantsInput, batchesUncheckedCreateWithoutTenantsInput>
  }

  export type batchesCreateManyTenantsInputEnvelope = {
    data: batchesCreateManyTenantsInput | batchesCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type coursesCreateWithoutTenantsInput = {
    title: string
    description?: string | null
    duration: number
    batch_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type coursesUncheckedCreateWithoutTenantsInput = {
    id?: number
    title: string
    description?: string | null
    duration: number
    batch_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type coursesCreateOrConnectWithoutTenantsInput = {
    where: coursesWhereUniqueInput
    create: XOR<coursesCreateWithoutTenantsInput, coursesUncheckedCreateWithoutTenantsInput>
  }

  export type coursesCreateManyTenantsInputEnvelope = {
    data: coursesCreateManyTenantsInput | coursesCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type follow_upsCreateWithoutTenantsInput = {
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutFollow_upsInput
    users_follow_ups_assigned_toTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_assigned_toTousersInput
    users_follow_ups_created_byTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_created_byTousersInput
    leads: leadsCreateNestedOneWithoutFollow_upsInput
  }

  export type follow_upsUncheckedCreateWithoutTenantsInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutFollow_upsInput
  }

  export type follow_upsCreateOrConnectWithoutTenantsInput = {
    where: follow_upsWhereUniqueInput
    create: XOR<follow_upsCreateWithoutTenantsInput, follow_upsUncheckedCreateWithoutTenantsInput>
  }

  export type follow_upsCreateManyTenantsInputEnvelope = {
    data: follow_upsCreateManyTenantsInput | follow_upsCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type leadsCreateWithoutTenantsInput = {
    name: string
    phone: string
    email?: string | null
    source: string
    status?: $Enums.lead_status
    notes?: string | null
    assigned_to?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    course?: string | null
    follow_ups?: follow_upsCreateNestedManyWithoutLeadsInput
  }

  export type leadsUncheckedCreateWithoutTenantsInput = {
    id?: number
    name: string
    phone: string
    email?: string | null
    source: string
    status?: $Enums.lead_status
    notes?: string | null
    assigned_to?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    course?: string | null
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutLeadsInput
  }

  export type leadsCreateOrConnectWithoutTenantsInput = {
    where: leadsWhereUniqueInput
    create: XOR<leadsCreateWithoutTenantsInput, leadsUncheckedCreateWithoutTenantsInput>
  }

  export type leadsCreateManyTenantsInputEnvelope = {
    data: leadsCreateManyTenantsInput | leadsCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type password_reset_tokensCreateWithoutTenantsInput = {
    token: string
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
    users: usersCreateNestedOneWithoutPassword_reset_tokensInput
  }

  export type password_reset_tokensUncheckedCreateWithoutTenantsInput = {
    id?: number
    token: string
    user_id: number
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
  }

  export type password_reset_tokensCreateOrConnectWithoutTenantsInput = {
    where: password_reset_tokensWhereUniqueInput
    create: XOR<password_reset_tokensCreateWithoutTenantsInput, password_reset_tokensUncheckedCreateWithoutTenantsInput>
  }

  export type password_reset_tokensCreateManyTenantsInputEnvelope = {
    data: password_reset_tokensCreateManyTenantsInput | password_reset_tokensCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type paymentsCreateWithoutTenantsInput = {
    student_id: number
    amount: Decimal | DecimalJsLike | number | string
    payment_date: Date | string
    payment_method: $Enums.payment_method
    receipt_number?: string | null
    transaction_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    reference?: string | null
    next_payment_due_date?: Date | string | null
    status?: string | null
  }

  export type paymentsUncheckedCreateWithoutTenantsInput = {
    id?: number
    student_id: number
    amount: Decimal | DecimalJsLike | number | string
    payment_date: Date | string
    payment_method: $Enums.payment_method
    receipt_number?: string | null
    transaction_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    reference?: string | null
    next_payment_due_date?: Date | string | null
    status?: string | null
  }

  export type paymentsCreateOrConnectWithoutTenantsInput = {
    where: paymentsWhereUniqueInput
    create: XOR<paymentsCreateWithoutTenantsInput, paymentsUncheckedCreateWithoutTenantsInput>
  }

  export type paymentsCreateManyTenantsInputEnvelope = {
    data: paymentsCreateManyTenantsInput | paymentsCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type settingsCreateWithoutTenantsInput = {
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type settingsUncheckedCreateWithoutTenantsInput = {
    id?: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type settingsCreateOrConnectWithoutTenantsInput = {
    where: settingsWhereUniqueInput
    create: XOR<settingsCreateWithoutTenantsInput, settingsUncheckedCreateWithoutTenantsInput>
  }

  export type settingsCreateManyTenantsInputEnvelope = {
    data: settingsCreateManyTenantsInput | settingsCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type studentsCreateWithoutTenantsInput = {
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    users?: usersCreateNestedOneWithoutStudentsInput
  }

  export type studentsUncheckedCreateWithoutTenantsInput = {
    id?: number
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    user_id?: number | null
  }

  export type studentsCreateOrConnectWithoutTenantsInput = {
    where: studentsWhereUniqueInput
    create: XOR<studentsCreateWithoutTenantsInput, studentsUncheckedCreateWithoutTenantsInput>
  }

  export type studentsCreateManyTenantsInputEnvelope = {
    data: studentsCreateManyTenantsInput | studentsCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutTenantsInput = {
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    batches?: batchesCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutUsersInput
    students?: studentsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutTenantsInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
    batches?: batchesUncheckedCreateNestedManyWithoutUsersInput
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutUsersInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_assigned_toTousersInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedCreateNestedManyWithoutUsers_follow_ups_created_byTousersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutUsersInput
    students?: studentsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutTenantsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutTenantsInput, usersUncheckedCreateWithoutTenantsInput>
  }

  export type usersCreateManyTenantsInputEnvelope = {
    data: usersCreateManyTenantsInput | usersCreateManyTenantsInput[]
    skipDuplicates?: boolean
  }

  export type batchesUpsertWithWhereUniqueWithoutTenantsInput = {
    where: batchesWhereUniqueInput
    update: XOR<batchesUpdateWithoutTenantsInput, batchesUncheckedUpdateWithoutTenantsInput>
    create: XOR<batchesCreateWithoutTenantsInput, batchesUncheckedCreateWithoutTenantsInput>
  }

  export type batchesUpdateWithWhereUniqueWithoutTenantsInput = {
    where: batchesWhereUniqueInput
    data: XOR<batchesUpdateWithoutTenantsInput, batchesUncheckedUpdateWithoutTenantsInput>
  }

  export type batchesUpdateManyWithWhereWithoutTenantsInput = {
    where: batchesScalarWhereInput
    data: XOR<batchesUpdateManyMutationInput, batchesUncheckedUpdateManyWithoutTenantsInput>
  }

  export type batchesScalarWhereInput = {
    AND?: batchesScalarWhereInput | batchesScalarWhereInput[]
    OR?: batchesScalarWhereInput[]
    NOT?: batchesScalarWhereInput | batchesScalarWhereInput[]
    id?: IntFilter<"batches"> | number
    name?: StringFilter<"batches"> | string
    description?: StringNullableFilter<"batches"> | string | null
    start_date?: DateTimeFilter<"batches"> | Date | string
    end_date?: DateTimeFilter<"batches"> | Date | string
    fee?: DecimalFilter<"batches"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolNullableFilter<"batches"> | boolean | null
    created_at?: DateTimeNullableFilter<"batches"> | Date | string | null
    trainer_id?: IntNullableFilter<"batches"> | number | null
    capacity?: IntNullableFilter<"batches"> | number | null
    updated_at?: DateTimeNullableFilter<"batches"> | Date | string | null
    tenant_id?: IntNullableFilter<"batches"> | number | null
  }

  export type coursesUpsertWithWhereUniqueWithoutTenantsInput = {
    where: coursesWhereUniqueInput
    update: XOR<coursesUpdateWithoutTenantsInput, coursesUncheckedUpdateWithoutTenantsInput>
    create: XOR<coursesCreateWithoutTenantsInput, coursesUncheckedCreateWithoutTenantsInput>
  }

  export type coursesUpdateWithWhereUniqueWithoutTenantsInput = {
    where: coursesWhereUniqueInput
    data: XOR<coursesUpdateWithoutTenantsInput, coursesUncheckedUpdateWithoutTenantsInput>
  }

  export type coursesUpdateManyWithWhereWithoutTenantsInput = {
    where: coursesScalarWhereInput
    data: XOR<coursesUpdateManyMutationInput, coursesUncheckedUpdateManyWithoutTenantsInput>
  }

  export type coursesScalarWhereInput = {
    AND?: coursesScalarWhereInput | coursesScalarWhereInput[]
    OR?: coursesScalarWhereInput[]
    NOT?: coursesScalarWhereInput | coursesScalarWhereInput[]
    id?: IntFilter<"courses"> | number
    title?: StringFilter<"courses"> | string
    description?: StringNullableFilter<"courses"> | string | null
    duration?: IntFilter<"courses"> | number
    batch_id?: IntNullableFilter<"courses"> | number | null
    created_at?: DateTimeFilter<"courses"> | Date | string
    updated_at?: DateTimeFilter<"courses"> | Date | string
    tenant_id?: IntNullableFilter<"courses"> | number | null
  }

  export type follow_upsUpsertWithWhereUniqueWithoutTenantsInput = {
    where: follow_upsWhereUniqueInput
    update: XOR<follow_upsUpdateWithoutTenantsInput, follow_upsUncheckedUpdateWithoutTenantsInput>
    create: XOR<follow_upsCreateWithoutTenantsInput, follow_upsUncheckedCreateWithoutTenantsInput>
  }

  export type follow_upsUpdateWithWhereUniqueWithoutTenantsInput = {
    where: follow_upsWhereUniqueInput
    data: XOR<follow_upsUpdateWithoutTenantsInput, follow_upsUncheckedUpdateWithoutTenantsInput>
  }

  export type follow_upsUpdateManyWithWhereWithoutTenantsInput = {
    where: follow_upsScalarWhereInput
    data: XOR<follow_upsUpdateManyMutationInput, follow_upsUncheckedUpdateManyWithoutTenantsInput>
  }

  export type leadsUpsertWithWhereUniqueWithoutTenantsInput = {
    where: leadsWhereUniqueInput
    update: XOR<leadsUpdateWithoutTenantsInput, leadsUncheckedUpdateWithoutTenantsInput>
    create: XOR<leadsCreateWithoutTenantsInput, leadsUncheckedCreateWithoutTenantsInput>
  }

  export type leadsUpdateWithWhereUniqueWithoutTenantsInput = {
    where: leadsWhereUniqueInput
    data: XOR<leadsUpdateWithoutTenantsInput, leadsUncheckedUpdateWithoutTenantsInput>
  }

  export type leadsUpdateManyWithWhereWithoutTenantsInput = {
    where: leadsScalarWhereInput
    data: XOR<leadsUpdateManyMutationInput, leadsUncheckedUpdateManyWithoutTenantsInput>
  }

  export type leadsScalarWhereInput = {
    AND?: leadsScalarWhereInput | leadsScalarWhereInput[]
    OR?: leadsScalarWhereInput[]
    NOT?: leadsScalarWhereInput | leadsScalarWhereInput[]
    id?: IntFilter<"leads"> | number
    name?: StringFilter<"leads"> | string
    phone?: StringFilter<"leads"> | string
    email?: StringNullableFilter<"leads"> | string | null
    source?: StringFilter<"leads"> | string
    status?: Enumlead_statusFilter<"leads"> | $Enums.lead_status
    notes?: StringNullableFilter<"leads"> | string | null
    assigned_to?: IntNullableFilter<"leads"> | number | null
    created_at?: DateTimeNullableFilter<"leads"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"leads"> | Date | string | null
    course?: StringNullableFilter<"leads"> | string | null
    tenant_id?: IntNullableFilter<"leads"> | number | null
  }

  export type password_reset_tokensUpsertWithWhereUniqueWithoutTenantsInput = {
    where: password_reset_tokensWhereUniqueInput
    update: XOR<password_reset_tokensUpdateWithoutTenantsInput, password_reset_tokensUncheckedUpdateWithoutTenantsInput>
    create: XOR<password_reset_tokensCreateWithoutTenantsInput, password_reset_tokensUncheckedCreateWithoutTenantsInput>
  }

  export type password_reset_tokensUpdateWithWhereUniqueWithoutTenantsInput = {
    where: password_reset_tokensWhereUniqueInput
    data: XOR<password_reset_tokensUpdateWithoutTenantsInput, password_reset_tokensUncheckedUpdateWithoutTenantsInput>
  }

  export type password_reset_tokensUpdateManyWithWhereWithoutTenantsInput = {
    where: password_reset_tokensScalarWhereInput
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyWithoutTenantsInput>
  }

  export type password_reset_tokensScalarWhereInput = {
    AND?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
    OR?: password_reset_tokensScalarWhereInput[]
    NOT?: password_reset_tokensScalarWhereInput | password_reset_tokensScalarWhereInput[]
    id?: IntFilter<"password_reset_tokens"> | number
    token?: StringFilter<"password_reset_tokens"> | string
    user_id?: IntFilter<"password_reset_tokens"> | number
    expires_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    is_used?: BoolFilter<"password_reset_tokens"> | boolean
    tenant_id?: IntNullableFilter<"password_reset_tokens"> | number | null
  }

  export type paymentsUpsertWithWhereUniqueWithoutTenantsInput = {
    where: paymentsWhereUniqueInput
    update: XOR<paymentsUpdateWithoutTenantsInput, paymentsUncheckedUpdateWithoutTenantsInput>
    create: XOR<paymentsCreateWithoutTenantsInput, paymentsUncheckedCreateWithoutTenantsInput>
  }

  export type paymentsUpdateWithWhereUniqueWithoutTenantsInput = {
    where: paymentsWhereUniqueInput
    data: XOR<paymentsUpdateWithoutTenantsInput, paymentsUncheckedUpdateWithoutTenantsInput>
  }

  export type paymentsUpdateManyWithWhereWithoutTenantsInput = {
    where: paymentsScalarWhereInput
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyWithoutTenantsInput>
  }

  export type paymentsScalarWhereInput = {
    AND?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
    OR?: paymentsScalarWhereInput[]
    NOT?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
    id?: IntFilter<"payments"> | number
    student_id?: IntFilter<"payments"> | number
    amount?: DecimalFilter<"payments"> | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFilter<"payments"> | Date | string
    payment_method?: Enumpayment_methodFilter<"payments"> | $Enums.payment_method
    receipt_number?: StringNullableFilter<"payments"> | string | null
    transaction_id?: StringNullableFilter<"payments"> | string | null
    notes?: StringNullableFilter<"payments"> | string | null
    created_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    reference?: StringNullableFilter<"payments"> | string | null
    next_payment_due_date?: DateTimeNullableFilter<"payments"> | Date | string | null
    tenant_id?: IntNullableFilter<"payments"> | number | null
    status?: StringNullableFilter<"payments"> | string | null
  }

  export type settingsUpsertWithWhereUniqueWithoutTenantsInput = {
    where: settingsWhereUniqueInput
    update: XOR<settingsUpdateWithoutTenantsInput, settingsUncheckedUpdateWithoutTenantsInput>
    create: XOR<settingsCreateWithoutTenantsInput, settingsUncheckedCreateWithoutTenantsInput>
  }

  export type settingsUpdateWithWhereUniqueWithoutTenantsInput = {
    where: settingsWhereUniqueInput
    data: XOR<settingsUpdateWithoutTenantsInput, settingsUncheckedUpdateWithoutTenantsInput>
  }

  export type settingsUpdateManyWithWhereWithoutTenantsInput = {
    where: settingsScalarWhereInput
    data: XOR<settingsUpdateManyMutationInput, settingsUncheckedUpdateManyWithoutTenantsInput>
  }

  export type settingsScalarWhereInput = {
    AND?: settingsScalarWhereInput | settingsScalarWhereInput[]
    OR?: settingsScalarWhereInput[]
    NOT?: settingsScalarWhereInput | settingsScalarWhereInput[]
    id?: IntFilter<"settings"> | number
    tenant_id?: IntFilter<"settings"> | number
    key?: StringFilter<"settings"> | string
    value?: StringFilter<"settings"> | string
    created_at?: DateTimeFilter<"settings"> | Date | string
    updated_at?: DateTimeFilter<"settings"> | Date | string
  }

  export type studentsUpsertWithWhereUniqueWithoutTenantsInput = {
    where: studentsWhereUniqueInput
    update: XOR<studentsUpdateWithoutTenantsInput, studentsUncheckedUpdateWithoutTenantsInput>
    create: XOR<studentsCreateWithoutTenantsInput, studentsUncheckedCreateWithoutTenantsInput>
  }

  export type studentsUpdateWithWhereUniqueWithoutTenantsInput = {
    where: studentsWhereUniqueInput
    data: XOR<studentsUpdateWithoutTenantsInput, studentsUncheckedUpdateWithoutTenantsInput>
  }

  export type studentsUpdateManyWithWhereWithoutTenantsInput = {
    where: studentsScalarWhereInput
    data: XOR<studentsUpdateManyMutationInput, studentsUncheckedUpdateManyWithoutTenantsInput>
  }

  export type studentsScalarWhereInput = {
    AND?: studentsScalarWhereInput | studentsScalarWhereInput[]
    OR?: studentsScalarWhereInput[]
    NOT?: studentsScalarWhereInput | studentsScalarWhereInput[]
    id?: IntFilter<"students"> | number
    name?: StringFilter<"students"> | string
    phone?: StringFilter<"students"> | string
    email?: StringFilter<"students"> | string
    parent_mobile?: StringNullableFilter<"students"> | string | null
    batch_id?: IntFilter<"students"> | number
    enrollment_date?: DateTimeFilter<"students"> | Date | string
    total_fee?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFilter<"students"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolNullableFilter<"students"> | boolean | null
    converted_from_lead_id?: IntNullableFilter<"students"> | number | null
    notes?: StringNullableFilter<"students"> | string | null
    created_at?: DateTimeNullableFilter<"students"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"students"> | Date | string | null
    tenant_id?: IntNullableFilter<"students"> | number | null
    user_id?: IntNullableFilter<"students"> | number | null
  }

  export type usersUpsertWithWhereUniqueWithoutTenantsInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutTenantsInput, usersUncheckedUpdateWithoutTenantsInput>
    create: XOR<usersCreateWithoutTenantsInput, usersUncheckedCreateWithoutTenantsInput>
  }

  export type usersUpdateWithWhereUniqueWithoutTenantsInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutTenantsInput, usersUncheckedUpdateWithoutTenantsInput>
  }

  export type usersUpdateManyWithWhereWithoutTenantsInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutTenantsInput>
  }

  export type usersScalarWhereInput = {
    AND?: usersScalarWhereInput | usersScalarWhereInput[]
    OR?: usersScalarWhereInput[]
    NOT?: usersScalarWhereInput | usersScalarWhereInput[]
    id?: IntFilter<"users"> | number
    username?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    name?: StringFilter<"users"> | string
    role?: Enumuser_roleFilter<"users"> | $Enums.user_role
    created_at?: DateTimeFilter<"users"> | Date | string
    phone?: StringNullableFilter<"users"> | string | null
    specialization?: StringNullableFilter<"users"> | string | null
    bio?: StringNullableFilter<"users"> | string | null
    status?: StringNullableFilter<"users"> | string | null
    tenant_id?: IntNullableFilter<"users"> | number | null
  }

  export type batchesCreateWithoutUsersInput = {
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    capacity?: number | null
    updated_at?: Date | string | null
    tenants?: tenantsCreateNestedOneWithoutBatchesInput
  }

  export type batchesUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    capacity?: number | null
    updated_at?: Date | string | null
    tenant_id?: number | null
  }

  export type batchesCreateOrConnectWithoutUsersInput = {
    where: batchesWhereUniqueInput
    create: XOR<batchesCreateWithoutUsersInput, batchesUncheckedCreateWithoutUsersInput>
  }

  export type batchesCreateManyUsersInputEnvelope = {
    data: batchesCreateManyUsersInput | batchesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type follow_up_commentsCreateWithoutUsersInput = {
    comment: string
    created_at?: Date | string
    follow_ups: follow_upsCreateNestedOneWithoutFollow_up_commentsInput
  }

  export type follow_up_commentsUncheckedCreateWithoutUsersInput = {
    id?: number
    follow_up_id: number
    comment: string
    created_at?: Date | string
  }

  export type follow_up_commentsCreateOrConnectWithoutUsersInput = {
    where: follow_up_commentsWhereUniqueInput
    create: XOR<follow_up_commentsCreateWithoutUsersInput, follow_up_commentsUncheckedCreateWithoutUsersInput>
  }

  export type follow_up_commentsCreateManyUsersInputEnvelope = {
    data: follow_up_commentsCreateManyUsersInput | follow_up_commentsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput = {
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutFollow_upsInput
    users_follow_ups_created_byTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_created_byTousersInput
    leads: leadsCreateNestedOneWithoutFollow_upsInput
    tenants?: tenantsCreateNestedOneWithoutFollow_upsInput
  }

  export type follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutFollow_upsInput
  }

  export type follow_upsCreateOrConnectWithoutUsers_follow_ups_assigned_toTousersInput = {
    where: follow_upsWhereUniqueInput
    create: XOR<follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput>
  }

  export type follow_upsCreateManyUsers_follow_ups_assigned_toTousersInputEnvelope = {
    data: follow_upsCreateManyUsers_follow_ups_assigned_toTousersInput | follow_upsCreateManyUsers_follow_ups_assigned_toTousersInput[]
    skipDuplicates?: boolean
  }

  export type follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput = {
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    follow_up_comments?: follow_up_commentsCreateNestedManyWithoutFollow_upsInput
    users_follow_ups_assigned_toTousers?: usersCreateNestedOneWithoutFollow_ups_follow_ups_assigned_toTousersInput
    leads: leadsCreateNestedOneWithoutFollow_upsInput
    tenants?: tenantsCreateNestedOneWithoutFollow_upsInput
  }

  export type follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
    follow_up_comments?: follow_up_commentsUncheckedCreateNestedManyWithoutFollow_upsInput
  }

  export type follow_upsCreateOrConnectWithoutUsers_follow_ups_created_byTousersInput = {
    where: follow_upsWhereUniqueInput
    create: XOR<follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput>
  }

  export type follow_upsCreateManyUsers_follow_ups_created_byTousersInputEnvelope = {
    data: follow_upsCreateManyUsers_follow_ups_created_byTousersInput | follow_upsCreateManyUsers_follow_ups_created_byTousersInput[]
    skipDuplicates?: boolean
  }

  export type password_reset_tokensCreateWithoutUsersInput = {
    token: string
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
    tenants?: tenantsCreateNestedOneWithoutPassword_reset_tokensInput
  }

  export type password_reset_tokensUncheckedCreateWithoutUsersInput = {
    id?: number
    token: string
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
    tenant_id?: number | null
  }

  export type password_reset_tokensCreateOrConnectWithoutUsersInput = {
    where: password_reset_tokensWhereUniqueInput
    create: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput>
  }

  export type password_reset_tokensCreateManyUsersInputEnvelope = {
    data: password_reset_tokensCreateManyUsersInput | password_reset_tokensCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type studentsCreateWithoutUsersInput = {
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tenants?: tenantsCreateNestedOneWithoutStudentsInput
  }

  export type studentsUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tenant_id?: number | null
  }

  export type studentsCreateOrConnectWithoutUsersInput = {
    where: studentsWhereUniqueInput
    create: XOR<studentsCreateWithoutUsersInput, studentsUncheckedCreateWithoutUsersInput>
  }

  export type studentsCreateManyUsersInputEnvelope = {
    data: studentsCreateManyUsersInput | studentsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type tenantsCreateWithoutUsersInput = {
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesCreateNestedManyWithoutTenantsInput
    courses?: coursesCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsCreateNestedManyWithoutTenantsInput
    leads?: leadsCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensCreateNestedManyWithoutTenantsInput
    payments?: paymentsCreateNestedManyWithoutTenantsInput
    settings?: settingsCreateNestedManyWithoutTenantsInput
    students?: studentsCreateNestedManyWithoutTenantsInput
  }

  export type tenantsUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    subdomain: string
    active?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    batches?: batchesUncheckedCreateNestedManyWithoutTenantsInput
    courses?: coursesUncheckedCreateNestedManyWithoutTenantsInput
    follow_ups?: follow_upsUncheckedCreateNestedManyWithoutTenantsInput
    leads?: leadsUncheckedCreateNestedManyWithoutTenantsInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedManyWithoutTenantsInput
    payments?: paymentsUncheckedCreateNestedManyWithoutTenantsInput
    settings?: settingsUncheckedCreateNestedManyWithoutTenantsInput
    students?: studentsUncheckedCreateNestedManyWithoutTenantsInput
  }

  export type tenantsCreateOrConnectWithoutUsersInput = {
    where: tenantsWhereUniqueInput
    create: XOR<tenantsCreateWithoutUsersInput, tenantsUncheckedCreateWithoutUsersInput>
  }

  export type batchesUpsertWithWhereUniqueWithoutUsersInput = {
    where: batchesWhereUniqueInput
    update: XOR<batchesUpdateWithoutUsersInput, batchesUncheckedUpdateWithoutUsersInput>
    create: XOR<batchesCreateWithoutUsersInput, batchesUncheckedCreateWithoutUsersInput>
  }

  export type batchesUpdateWithWhereUniqueWithoutUsersInput = {
    where: batchesWhereUniqueInput
    data: XOR<batchesUpdateWithoutUsersInput, batchesUncheckedUpdateWithoutUsersInput>
  }

  export type batchesUpdateManyWithWhereWithoutUsersInput = {
    where: batchesScalarWhereInput
    data: XOR<batchesUpdateManyMutationInput, batchesUncheckedUpdateManyWithoutUsersInput>
  }

  export type follow_up_commentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: follow_up_commentsWhereUniqueInput
    update: XOR<follow_up_commentsUpdateWithoutUsersInput, follow_up_commentsUncheckedUpdateWithoutUsersInput>
    create: XOR<follow_up_commentsCreateWithoutUsersInput, follow_up_commentsUncheckedCreateWithoutUsersInput>
  }

  export type follow_up_commentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: follow_up_commentsWhereUniqueInput
    data: XOR<follow_up_commentsUpdateWithoutUsersInput, follow_up_commentsUncheckedUpdateWithoutUsersInput>
  }

  export type follow_up_commentsUpdateManyWithWhereWithoutUsersInput = {
    where: follow_up_commentsScalarWhereInput
    data: XOR<follow_up_commentsUpdateManyMutationInput, follow_up_commentsUncheckedUpdateManyWithoutUsersInput>
  }

  export type follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput = {
    where: follow_upsWhereUniqueInput
    update: XOR<follow_upsUpdateWithoutUsers_follow_ups_assigned_toTousersInput, follow_upsUncheckedUpdateWithoutUsers_follow_ups_assigned_toTousersInput>
    create: XOR<follow_upsCreateWithoutUsers_follow_ups_assigned_toTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_assigned_toTousersInput>
  }

  export type follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_assigned_toTousersInput = {
    where: follow_upsWhereUniqueInput
    data: XOR<follow_upsUpdateWithoutUsers_follow_ups_assigned_toTousersInput, follow_upsUncheckedUpdateWithoutUsers_follow_ups_assigned_toTousersInput>
  }

  export type follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_assigned_toTousersInput = {
    where: follow_upsScalarWhereInput
    data: XOR<follow_upsUpdateManyMutationInput, follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersInput>
  }

  export type follow_upsUpsertWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput = {
    where: follow_upsWhereUniqueInput
    update: XOR<follow_upsUpdateWithoutUsers_follow_ups_created_byTousersInput, follow_upsUncheckedUpdateWithoutUsers_follow_ups_created_byTousersInput>
    create: XOR<follow_upsCreateWithoutUsers_follow_ups_created_byTousersInput, follow_upsUncheckedCreateWithoutUsers_follow_ups_created_byTousersInput>
  }

  export type follow_upsUpdateWithWhereUniqueWithoutUsers_follow_ups_created_byTousersInput = {
    where: follow_upsWhereUniqueInput
    data: XOR<follow_upsUpdateWithoutUsers_follow_ups_created_byTousersInput, follow_upsUncheckedUpdateWithoutUsers_follow_ups_created_byTousersInput>
  }

  export type follow_upsUpdateManyWithWhereWithoutUsers_follow_ups_created_byTousersInput = {
    where: follow_upsScalarWhereInput
    data: XOR<follow_upsUpdateManyMutationInput, follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersInput>
  }

  export type password_reset_tokensUpsertWithWhereUniqueWithoutUsersInput = {
    where: password_reset_tokensWhereUniqueInput
    update: XOR<password_reset_tokensUpdateWithoutUsersInput, password_reset_tokensUncheckedUpdateWithoutUsersInput>
    create: XOR<password_reset_tokensCreateWithoutUsersInput, password_reset_tokensUncheckedCreateWithoutUsersInput>
  }

  export type password_reset_tokensUpdateWithWhereUniqueWithoutUsersInput = {
    where: password_reset_tokensWhereUniqueInput
    data: XOR<password_reset_tokensUpdateWithoutUsersInput, password_reset_tokensUncheckedUpdateWithoutUsersInput>
  }

  export type password_reset_tokensUpdateManyWithWhereWithoutUsersInput = {
    where: password_reset_tokensScalarWhereInput
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyWithoutUsersInput>
  }

  export type studentsUpsertWithWhereUniqueWithoutUsersInput = {
    where: studentsWhereUniqueInput
    update: XOR<studentsUpdateWithoutUsersInput, studentsUncheckedUpdateWithoutUsersInput>
    create: XOR<studentsCreateWithoutUsersInput, studentsUncheckedCreateWithoutUsersInput>
  }

  export type studentsUpdateWithWhereUniqueWithoutUsersInput = {
    where: studentsWhereUniqueInput
    data: XOR<studentsUpdateWithoutUsersInput, studentsUncheckedUpdateWithoutUsersInput>
  }

  export type studentsUpdateManyWithWhereWithoutUsersInput = {
    where: studentsScalarWhereInput
    data: XOR<studentsUpdateManyMutationInput, studentsUncheckedUpdateManyWithoutUsersInput>
  }

  export type tenantsUpsertWithoutUsersInput = {
    update: XOR<tenantsUpdateWithoutUsersInput, tenantsUncheckedUpdateWithoutUsersInput>
    create: XOR<tenantsCreateWithoutUsersInput, tenantsUncheckedCreateWithoutUsersInput>
    where?: tenantsWhereInput
  }

  export type tenantsUpdateToOneWithWhereWithoutUsersInput = {
    where?: tenantsWhereInput
    data: XOR<tenantsUpdateWithoutUsersInput, tenantsUncheckedUpdateWithoutUsersInput>
  }

  export type tenantsUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUpdateManyWithoutTenantsNestedInput
    courses?: coursesUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUpdateManyWithoutTenantsNestedInput
    leads?: leadsUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUpdateManyWithoutTenantsNestedInput
    settings?: settingsUpdateManyWithoutTenantsNestedInput
    students?: studentsUpdateManyWithoutTenantsNestedInput
  }

  export type tenantsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    subdomain?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    batches?: batchesUncheckedUpdateManyWithoutTenantsNestedInput
    courses?: coursesUncheckedUpdateManyWithoutTenantsNestedInput
    follow_ups?: follow_upsUncheckedUpdateManyWithoutTenantsNestedInput
    leads?: leadsUncheckedUpdateManyWithoutTenantsNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutTenantsNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutTenantsNestedInput
    settings?: settingsUncheckedUpdateManyWithoutTenantsNestedInput
    students?: studentsUncheckedUpdateManyWithoutTenantsNestedInput
  }

  export type follow_up_commentsCreateManyFollow_upsInput = {
    id?: number
    comment: string
    created_by?: number | null
    created_at?: Date | string
  }

  export type follow_up_commentsUpdateWithoutFollow_upsInput = {
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutFollow_up_commentsNestedInput
  }

  export type follow_up_commentsUncheckedUpdateWithoutFollow_upsInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type follow_up_commentsUncheckedUpdateManyWithoutFollow_upsInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type follow_upsCreateManyLeadsInput = {
    id?: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
  }

  export type follow_upsUpdateWithoutLeadsInput = {
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    follow_up_comments?: follow_up_commentsUpdateManyWithoutFollow_upsNestedInput
    users_follow_ups_assigned_toTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_assigned_toTousersNestedInput
    users_follow_ups_created_byTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_created_byTousersNestedInput
    tenants?: tenantsUpdateOneWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateWithoutLeadsInput = {
    id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateManyWithoutLeadsInput = {
    id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type batchesCreateManyTenantsInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    trainer_id?: number | null
    capacity?: number | null
    updated_at?: Date | string | null
  }

  export type coursesCreateManyTenantsInput = {
    id?: number
    title: string
    description?: string | null
    duration: number
    batch_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type follow_upsCreateManyTenantsInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
  }

  export type leadsCreateManyTenantsInput = {
    id?: number
    name: string
    phone: string
    email?: string | null
    source: string
    status?: $Enums.lead_status
    notes?: string | null
    assigned_to?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    course?: string | null
  }

  export type password_reset_tokensCreateManyTenantsInput = {
    id?: number
    token: string
    user_id: number
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
  }

  export type paymentsCreateManyTenantsInput = {
    id?: number
    student_id: number
    amount: Decimal | DecimalJsLike | number | string
    payment_date: Date | string
    payment_method: $Enums.payment_method
    receipt_number?: string | null
    transaction_id?: string | null
    notes?: string | null
    created_at?: Date | string | null
    reference?: string | null
    next_payment_due_date?: Date | string | null
    status?: string | null
  }

  export type settingsCreateManyTenantsInput = {
    id?: number
    key: string
    value: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type studentsCreateManyTenantsInput = {
    id?: number
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    user_id?: number | null
  }

  export type usersCreateManyTenantsInput = {
    id?: number
    username: string
    password: string
    email: string
    name: string
    role?: $Enums.user_role
    created_at?: Date | string
    phone?: string | null
    specialization?: string | null
    bio?: string | null
    status?: string | null
  }

  export type batchesUpdateWithoutTenantsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutBatchesNestedInput
  }

  export type batchesUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainer_id?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type batchesUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainer_id?: NullableIntFieldUpdateOperationsInput | number | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type coursesUpdateWithoutTenantsInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: IntFieldUpdateOperationsInput | number
    batch_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type coursesUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: IntFieldUpdateOperationsInput | number
    batch_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type coursesUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: IntFieldUpdateOperationsInput | number
    batch_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type follow_upsUpdateWithoutTenantsInput = {
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    follow_up_comments?: follow_up_commentsUpdateManyWithoutFollow_upsNestedInput
    users_follow_ups_assigned_toTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_assigned_toTousersNestedInput
    users_follow_ups_created_byTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_created_byTousersNestedInput
    leads?: leadsUpdateOneRequiredWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type leadsUpdateWithoutTenantsInput = {
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    follow_ups?: follow_upsUpdateManyWithoutLeadsNestedInput
  }

  export type leadsUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
    follow_ups?: follow_upsUncheckedUpdateManyWithoutLeadsNestedInput
  }

  export type leadsUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    source?: StringFieldUpdateOperationsInput | string
    status?: Enumlead_statusFieldUpdateOperationsInput | $Enums.lead_status
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    course?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type password_reset_tokensUpdateWithoutTenantsInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
    users?: usersUpdateOneRequiredWithoutPassword_reset_tokensNestedInput
  }

  export type password_reset_tokensUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
  }

  export type password_reset_tokensUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
  }

  export type paymentsUpdateWithoutTenantsInput = {
    student_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    payment_method?: Enumpayment_methodFieldUpdateOperationsInput | $Enums.payment_method
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    next_payment_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type paymentsUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    student_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    payment_method?: Enumpayment_methodFieldUpdateOperationsInput | $Enums.payment_method
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    next_payment_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type paymentsUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    student_id?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    payment_method?: Enumpayment_methodFieldUpdateOperationsInput | $Enums.payment_method
    receipt_number?: NullableStringFieldUpdateOperationsInput | string | null
    transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    next_payment_due_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type settingsUpdateWithoutTenantsInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingsUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type settingsUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type studentsUpdateWithoutTenantsInput = {
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutStudentsNestedInput
  }

  export type studentsUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type studentsUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usersUpdateWithoutTenantsInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    batches?: batchesUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateManyWithoutUsersNestedInput
    students?: studentsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    batches?: batchesUncheckedUpdateManyWithoutUsersNestedInput
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutUsersNestedInput
    follow_ups_follow_ups_assigned_toTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersNestedInput
    follow_ups_follow_ups_created_byTousers?: follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateManyWithoutUsersNestedInput
    students?: studentsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateManyWithoutTenantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type batchesCreateManyUsersInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    fee: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    created_at?: Date | string | null
    capacity?: number | null
    updated_at?: Date | string | null
    tenant_id?: number | null
  }

  export type follow_up_commentsCreateManyUsersInput = {
    id?: number
    follow_up_id: number
    comment: string
    created_at?: Date | string
  }

  export type follow_upsCreateManyUsers_follow_ups_assigned_toTousersInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    created_by?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
  }

  export type follow_upsCreateManyUsers_follow_ups_created_byTousersInput = {
    id?: number
    lead_id: number
    follow_up_date: Date | string
    comments?: string | null
    status?: string
    assigned_to?: number | null
    is_completed?: boolean | null
    completed_at?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    type?: string
    next_follow_up_date?: Date | string | null
    tenant_id?: number | null
  }

  export type password_reset_tokensCreateManyUsersInput = {
    id?: number
    token: string
    expires_at: Date | string
    created_at?: Date | string
    is_used?: boolean
    tenant_id?: number | null
  }

  export type studentsCreateManyUsersInput = {
    id?: number
    name: string
    phone: string
    email: string
    parent_mobile?: string | null
    batch_id: number
    enrollment_date: Date | string
    total_fee: Decimal | DecimalJsLike | number | string
    fee_paid?: Decimal | DecimalJsLike | number | string
    fee_due: Decimal | DecimalJsLike | number | string
    is_active?: boolean | null
    converted_from_lead_id?: number | null
    notes?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tenant_id?: number | null
  }

  export type batchesUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenants?: tenantsUpdateOneWithoutBatchesNestedInput
  }

  export type batchesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type batchesUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    capacity?: NullableIntFieldUpdateOperationsInput | number | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type follow_up_commentsUpdateWithoutUsersInput = {
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    follow_ups?: follow_upsUpdateOneRequiredWithoutFollow_up_commentsNestedInput
  }

  export type follow_up_commentsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    follow_up_id?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type follow_up_commentsUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    follow_up_id?: IntFieldUpdateOperationsInput | number
    comment?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type follow_upsUpdateWithoutUsers_follow_ups_assigned_toTousersInput = {
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    follow_up_comments?: follow_up_commentsUpdateManyWithoutFollow_upsNestedInput
    users_follow_ups_created_byTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_created_byTousersNestedInput
    leads?: leadsUpdateOneRequiredWithoutFollow_upsNestedInput
    tenants?: tenantsUpdateOneWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateWithoutUsers_follow_ups_assigned_toTousersInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_assigned_toTousersInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_by?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type follow_upsUpdateWithoutUsers_follow_ups_created_byTousersInput = {
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    follow_up_comments?: follow_up_commentsUpdateManyWithoutFollow_upsNestedInput
    users_follow_ups_assigned_toTousers?: usersUpdateOneWithoutFollow_ups_follow_ups_assigned_toTousersNestedInput
    leads?: leadsUpdateOneRequiredWithoutFollow_upsNestedInput
    tenants?: tenantsUpdateOneWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateWithoutUsers_follow_ups_created_byTousersInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
    follow_up_comments?: follow_up_commentsUncheckedUpdateManyWithoutFollow_upsNestedInput
  }

  export type follow_upsUncheckedUpdateManyWithoutUsers_follow_ups_created_byTousersInput = {
    id?: IntFieldUpdateOperationsInput | number
    lead_id?: IntFieldUpdateOperationsInput | number
    follow_up_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    assigned_to?: NullableIntFieldUpdateOperationsInput | number | null
    is_completed?: NullableBoolFieldUpdateOperationsInput | boolean | null
    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: StringFieldUpdateOperationsInput | string
    next_follow_up_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type password_reset_tokensUpdateWithoutUsersInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
    tenants?: tenantsUpdateOneWithoutPassword_reset_tokensNestedInput
  }

  export type password_reset_tokensUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type password_reset_tokensUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_used?: BoolFieldUpdateOperationsInput | boolean
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type studentsUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenants?: tenantsUpdateOneWithoutStudentsNestedInput
  }

  export type studentsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type studentsUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    parent_mobile?: NullableStringFieldUpdateOperationsInput | string | null
    batch_id?: IntFieldUpdateOperationsInput | number
    enrollment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    total_fee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_paid?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_due?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    converted_from_lead_id?: NullableIntFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenant_id?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}